{"remainingRequest":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/thread-loader/dist/cjs.js!/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/babel-loader/lib/index.js!/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/src/components/Chart-Focus.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/src/components/Chart-Focus.vue","mtime":1759991711304},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1707125360000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/thread-loader/dist/cjs.js","mtime":1707125360000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/babel-loader/lib/index.js","mtime":1707125360000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1707125360000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/vue-loader/lib/index.js","mtime":1707125450000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Chart-Focus.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div\n      ref=\"linechart\"\n      :style=\"{ width: containerMaxWidth + 'px', height: 80 + 'px' }\"\n      class=\"linechart-panel\"\n      @mousedown=\"startDrag\"\n      @mousemove=\"dragging\"\n      @mouseup=\"endDrag\"\n      @touchstart=\"startDrag\"\n      @touchmove=\"dragging\"\n      @touchend=\"endDrag\"\n    ></div>\n  </div>\n</template>\n\n<script>\nimport * as echarts from 'echarts';\n\nexport default {\n  name: 'LineChart',\n  props: {\n    // 是否使用时间轴模式（也可通过总线 setFocusChartTimeMode 切换）\n    useTimeAxis: {\n      type: Boolean,\n      default: false\n    },\n    // 时间窗口长度（秒），仅在时间轴模式下生效\n    timeWindowSec: {\n      type: Number,\n      default: 60\n    }\n  },\n  data() {\n    return {\n      containerMaxWidth: 150,\n      // 非时间轴：散点数据（x 为电调位置）\n      chartData1_pos: [],\n      // 时间轴：散点数据（x 为时间戳）\n      chartData1_time: [],\n      chartData2: [],\n      chartData3: [],\n      xAxis_min: 0,\n      xAxis_max: 6000,\n      yAxis_min: 0,\n      yAxis_max: 30,\n      range: 4,\n      currentX: 0,\n      FWHMMax: 0,\n      isDragging: false,\n      startX: 0,\n      deltaX: 0,\n      x_min: -60000,\n      x_max: 60000,\n      // 时间轴模式\n      isTimeMode: false,\n      timeTicker: null,\n      // 可见性控制\n      isVisible: false,\n      ioObserver: null\n    };\n  },\n  mounted() {\n    // 根据可见性启动/停止时间推进\n    const el = this.$refs.linechart;\n    if (window && 'IntersectionObserver' in window && el) {\n      this.ioObserver = new IntersectionObserver((entries) => {\n        const e = entries[0];\n        this.isVisible = !!(e && e.isIntersecting);\n        this.updateTickerByVisibility();\n      }, { threshold: 0.01 });\n      this.ioObserver.observe(el);\n    } else {\n      // 回退：不可见性未知时视为可见\n      this.isVisible = true;\n    }\n    document.addEventListener('visibilitychange', this.updateTickerByVisibility);\n\n    // 初始化时间轴模式（由 prop 控制）\n    this.isTimeMode = !!this.useTimeAxis;\n    this.updateTickerByVisibility();\n  },\n  created() {\n    this.$bus.$on('FocusPosition', this.changeRange_x);\n    // this.$bus.$on('UpdateFWHM', this.UpdateFWHM);\n    // this.$bus.$on('fitQuadraticCurve', this.fitQuadraticCurve);\n    // this.$bus.$on('fitQuadraticCurve_minPoint', this.fitQuadraticCurve_minPoint);\n\n    this.$bus.$on('ClearfitQuadraticCurve', this.clearChartData2);\n    this.$bus.$on('ClearAllData', this.ClearAllData);\n    this.$bus.$on('updateFocusChartWidth', this.initChart);\n    this.$bus.$on('addData_Point', this.addData_Point);\n    this.$bus.$on('addMinPointData_Point', this.addMinPointData_Point);\n    this.$bus.$on('addLineData_Point', this.addLineData_Point);\n    this.$bus.$on('setFocusChartRange', this.setFocusChartRange);\n    // 新增：时间轴模式控制与点追加\n    this.$bus.$on('setFocusChartTimeMode', this.setTimeMode);\n    this.$bus.$on('addFwhmNow', this.addFwhmPointNow);\n\n  },\n  beforeDestroy() {\n    this.teardownBusAndTimers();\n  },\n  destroyed() {\n    this.teardownBusAndTimers();\n  },\n  methods: {\n    teardownBusAndTimers() {\n      this.$bus.$off('FocusPosition', this.changeRange_x);\n      this.$bus.$off('ClearfitQuadraticCurve', this.clearChartData2);\n      this.$bus.$off('ClearAllData', this.ClearAllData);\n      this.$bus.$off('updateFocusChartWidth', this.initChart);\n      this.$bus.$off('addData_Point', this.addData_Point);\n      this.$bus.$off('addMinPointData_Point', this.addMinPointData_Point);\n      this.$bus.$off('addLineData_Point', this.addLineData_Point);\n      this.$bus.$off('setFocusChartRange', this.setFocusChartRange);\n      this.$bus.$off('setFocusChartTimeMode', this.setTimeMode);\n      this.$bus.$off('addFwhmNow', this.addFwhmPointNow);\n      if (this.timeTicker) {\n        clearInterval(this.timeTicker);\n        this.timeTicker = null;\n      }\n      if (this.ioObserver) {\n        try { this.ioObserver.disconnect(); } catch (e) {}\n        this.ioObserver = null;\n      }\n      document.removeEventListener('visibilitychange', this.updateTickerByVisibility);\n    },\n    initChart(Width) {\n      this.containerMaxWidth = Width - 95;\n      const chartDom = this.$refs.linechart;\n      chartDom.style.width = this.containerMaxWidth + 'px';\n      this.myChart = echarts.init(chartDom);\n      this.renderChart(this.xAxis_min, this.xAxis_max);\n    },\n    startDrag(event) {\n      if (this.isTimeMode) return; // 时间轴模式下禁用拖拽\n      this.isDragging = true;\n      this.startX = event.touches[0].clientX;\n    },\n    dragging(event) {\n      if (this.isDragging && !this.isTimeMode) {\n        const touch = event.touches[0];\n        this.deltaX = (touch.clientX - this.startX) * 10;\n        this.startX = touch.clientX;\n        this.xAxis_min -= this.deltaX;\n        this.xAxis_max -= this.deltaX;\n        this.renderChart(this.xAxis_min, this.xAxis_max);\n      }\n    },\n    endDrag() {\n      this.isDragging = false;\n      this.deltaX = 0;\n      // this.$bus.$emit('setTargetPosition', (this.xAxis_min + this.xAxis_max) / 2);\n    },\n    renderChart(lowerBound, upperBound) {\n      const data1 = this.isTimeMode ? this.chartData1_time : this.chartData1_pos;\n      const y_max = data1.length > 0 ? Math.max(...data1.map(item => item[1])) * 2 : this.yAxis_max;\n      \n      // 调试日志\n      if (this.isTimeMode && data1.length > 0) {\n        console.log('Chart-Focus: renderChart (time mode)', {\n          dataPoints: data1.length,\n          latestPoint: data1[data1.length - 1],\n          y_max: y_max\n        });\n      }\n      const optionXAxis = this.isTimeMode\n        ? {\n            type: 'time',\n            min: Date.now() - this.timeWindowSec * 1000,\n            max: Date.now(),\n            axisLabel: {\n              color: 'white',\n              fontSize: 5,\n              formatter: function (value) {\n                const d = new Date(value);\n                const pad = (n) => (n < 10 ? '0' + n : '' + n);\n                return pad(d.getHours()) + ':' + pad(d.getMinutes()) + ':' + pad(d.getSeconds());\n              }\n            },\n            axisLine: { lineStyle: { color: 'rgba(200, 200, 200, 0.5)' } },\n            splitLine: {\n              show: true,\n              lineStyle: { color: 'rgba(128, 128, 128, 0.5)', width: 1, type: 'solid' }\n            }\n          }\n        : {\n            type: 'value',\n            min: lowerBound,\n            max: upperBound,\n            axisLine: { lineStyle: { color: 'rgba(200, 200, 200, 0.5)' } },\n            axisLabel: { color: 'white', fontSize: 5 },\n            splitLine: { show: true, lineStyle: { color: 'rgba(128, 128, 128, 0.5)', width: 1, type: 'solid' } }\n          };\n      const option = {\n        grid: {\n          left: '0%',\n          right: '2%',\n          bottom: '0%',\n          top: '10%',\n          containLabel: true\n        },\n        xAxis: optionXAxis,\n        yAxis: {\n          min: this.yAxis_min,\n          max: y_max,\n          axisLine: {\n            lineStyle: {\n              color: 'rgba(200, 200, 200, 0.5)'  // y轴线颜色\n            }\n          },\n          axisLabel: {\n            color: 'white',\n            fontSize: 5\n          },\n          splitNumber: 3,\n          splitLine: {\n            show: true,\n            lineStyle: {\n              color: 'rgba(128, 128, 128, 0.5)',\n              width: 1,\n              type: 'solid'\n            }\n          }\n        },\n        series: [\n          {\n            name: 'FWHM',\n            type: 'scatter',\n            data: data1,\n            itemStyle: {\n              color: 'red'\n            },\n            symbolSize: 4\n          },\n          !this.isTimeMode ? {\n            name: 'Dec',\n            type: 'line',\n            data: this.chartData2,\n            itemStyle: {\n              color: 'green'\n            },\n            lineStyle: {\n              width: 1\n            },\n            symbolSize: 0\n          } : null,\n          !this.isTimeMode ? {\n            name: 'minPoint',\n            type: 'scatter',\n            data: this.chartData3,\n            itemStyle: {\n              color: 'rgba(75, 155, 250, 0.7)'\n            },\n            symbolSize: 4\n          } : null,\n          !this.isTimeMode ? {\n            name: 'xMinLine',\n            type: 'line',\n            data: [\n              [this.x_min, this.yAxis_min],\n              [this.x_min, y_max]\n            ],\n            lineStyle: {\n              color: 'red',\n              width: 1\n            },\n            symbol: 'none'\n          } : null,\n          !this.isTimeMode ? {\n            name: 'xMaxLine',\n            type: 'line',\n            data: [\n              [this.x_max, this.yAxis_min],\n              [this.x_max, y_max]\n            ],\n            lineStyle: {\n              color: 'red',\n              width: 1\n            },\n            symbol: 'none'\n          } : null,\n          !this.isTimeMode ? {\n            name: 'currentPosition',\n            type: 'line',\n            data: [\n              [this.currentX, this.yAxis_min],\n              [this.currentX, y_max]\n            ],\n            lineStyle: {\n              color: 'green',\n              width: 1\n            },\n            symbol: 'none'\n          } : null\n        ]\n      };\n      // 过滤掉为 null 的 series 项\n      option.series = option.series.filter(Boolean);\n      this.myChart.setOption(option);\n    },\n    // 追加一个以\"当前时间\"为 x 的 FWHM 点（时间轴模式）\n    addFwhmPointNow(fwhm) {\n      // 确保 fwhm 是数字\n      const fwhmNum = typeof fwhm === 'number' ? fwhm : parseFloat(fwhm);\n      if (isNaN(fwhmNum) || fwhmNum <= 0) {\n        console.warn('Chart-Focus: Invalid FWHM value:', fwhm);\n        return;\n      }\n      \n      const now = Date.now();\n      const point = [now, fwhmNum];\n      this.chartData1_time.push(point);\n      \n      console.log('Chart-Focus: addFwhmPointNow', {\n        fwhm: fwhmNum,\n        time: new Date(now).toLocaleTimeString(),\n        isTimeMode: this.isTimeMode,\n        dataLength: this.chartData1_time.length,\n        chartInitialized: !!this.myChart\n      });\n      \n      // 仅保留窗口期内的数据\n      const minTs = now - this.timeWindowSec * 1000;\n      this.chartData1_time = this.chartData1_time.filter(p => p[0] >= minTs);\n      \n      // 强制重新渲染\n      if (this.myChart) {\n        this.renderChart(this.xAxis_min, this.xAxis_max);\n      } else {\n        console.warn('Chart-Focus: myChart not initialized yet');\n      }\n    },\n    // 开启/关闭时间轴模式\n    setTimeMode(flag) {\n      const enable = !!flag;\n      if (enable === this.isTimeMode) return;\n      this.isTimeMode = enable;\n      this.updateTickerByVisibility();\n      if (this.myChart) { this.myChart.clear(); }\n      this.renderChart(this.xAxis_min, this.xAxis_max);\n    },\n    stopTimeTicker() {\n      if (this.timeTicker) {\n        clearInterval(this.timeTicker);\n        this.timeTicker = null;\n      }\n    },\n    startTimeTicker() {\n      if (this.timeTicker) return;\n      this.timeTicker = setInterval(() => {\n        // 没有新点时也推动时间轴前进\n        if (this.myChart) {\n          this.renderChart(this.xAxis_min, this.xAxis_max);\n        }\n      }, 1000);\n    },\n    updateTickerByVisibility() {\n      const docVisible = typeof document !== 'undefined' ? !document.hidden : true;\n      const shouldRun = this.isTimeMode && this.isVisible && docVisible;\n      if (shouldRun) this.startTimeTicker(); else this.stopTimeTicker();\n    },\n    addData_Point(x,y) {\n      const newDataPoint = [x, y];\n      const existingPointIndex = this.chartData1_pos.findIndex(point => point[0] === newDataPoint[0]);\n      if (existingPointIndex !== -1) {\n        // If the x value already exists, update the y value\n        if (newDataPoint[1] == 0 || newDataPoint[1] == this.chartData1_pos[existingPointIndex][1]) return;\n        this.chartData1_pos[existingPointIndex] = newDataPoint;\n      } else {\n        // If the x value does not exist, add the new data point\n        this.chartData1_pos.push(newDataPoint);\n      }\n      this.renderChart(this.xAxis_min, this.xAxis_max);\n    },\n    // 绘制折线\n    addLineData_Point(dataList) {\n      this.chartData2 = dataList;\n      this.renderChart(this.xAxis_min, this.xAxis_max);\n    },\n    addMinPointData_Point(x,y) {\n      const newDataPoint = [x, y];\n      this.chartData3.push(newDataPoint);\n      this.renderChart(this.xAxis_min, this.xAxis_max);\n    },\n    // 更改显示的x轴范围\n    changeRange_x(current, target) {\n      this.xAxis_min = Number(current) - 3000;\n      this.xAxis_max = Number(current) + 3000;\n      this.currentX = current;\n      console.log(\"QHYCCD | changeRange_x:\", current, this.xAxis_min, this.xAxis_max);\n      this.renderChart(this.xAxis_min, this.xAxis_max);\n    },\n\n    // 清除数据\n    clearChartData1() {\n      this.chartData1_pos = [];\n      this.chartData1_time = [];\n      this.renderChart(this.xAxis_min, this.xAxis_max);\n    },\n    clearChartData2() {\n      this.chartData2 = [];\n      this.renderChart(this.xAxis_min, this.xAxis_max);\n    },\n    ClearAllData() {\n      this.chartData1_pos = [];\n      this.chartData1_time = [];\n      this.chartData2 = [];\n      this.chartData3 = [];\n      this.yAxis_max = 30;\n      this.FWHMMax = 15;\n      this.renderChart(this.xAxis_min, this.xAxis_max);\n    },\n    // 切换显示范围\n    RangeSwitch() {\n      if (this.range === 4) {\n        this.range = 2;\n        this.yAxis_min = -2;\n        this.yAxis_max = 2;\n      } else if (this.range === 2) {\n        this.range = 1;\n        this.yAxis_min = -1;\n        this.yAxis_max = 1;\n      } else if (this.range === 1) {\n        this.range = 4;\n        this.yAxis_min = -4;\n        this.yAxis_max = 4;\n      }\n      this.renderChart(this.xAxis_min, this.xAxis_max);\n    },\n    // 更新FWHM\n    // UpdateFWHM(FWHM) {\n    //   const newDataPoint = [this.currentX, FWHM];\n    //   this.addData_Point(newDataPoint);\n    //   // console.log(\"QHYCCD | UpdateFWHM:\", newDataPoint);\n    //   // this.$bus.$emit('SendConsoleLogMsg', 'UpdateFWHM:' + newDataPoint, 'info');\n    //   this.renderChart(this.xAxis_min, this.xAxis_max);\n    // },\n    // 拟合二次曲线\n    // fitQuadraticCurve(x, y) {\n    //   const newDataPoint = [x, y];\n    //   this.addData_Line(newDataPoint);\n    // },\n    // 拟合二次曲线最小点\n    // fitQuadraticCurve_minPoint(x, y) {\n    //   console.log(\"QHYCCD | minPoint:\", x, ',', y);\n    //   this.$bus.$emit('SendConsoleLogMsg', 'minPoint:' + x + ',' + y, 'info');\n    //   this.chartData3 = [];\n    //   const newDataPoint = [x, y];\n    //   this.chartData3.push(newDataPoint);\n    // },\n    setFocusChartRange(lowerBound, upperBound) {\n      this.x_min = lowerBound;\n      this.x_max = upperBound;\n    }\n  }\n}\n</script>\n\n<style scoped>\n.linechart-panel {\n  background-color: rgba(0, 0, 0, 0.0);\n  /* backdrop-filter: blur(5px); */\n  border-radius: 5px;\n  box-sizing: border-box;\n}\n</style>\n"],"sourceRoot":"src/components"}]}