{"remainingRequest":"/app/node_modules/thread-loader/dist/cjs.js!/app/node_modules/babel-loader/lib/index.js!/app/node_modules/cache-loader/dist/cjs.js??ref--1-0!/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/src/components/UpdateProgressDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/app/src/components/UpdateProgressDialog.vue","mtime":1751952464462},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":1707125360000},{"path":"/app/node_modules/thread-loader/dist/cjs.js","mtime":1707125360000},{"path":"/app/node_modules/babel-loader/lib/index.js","mtime":1707125360000},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":1707125360000},{"path":"/app/node_modules/vue-loader/lib/index.js","mtime":1707125450000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1VwZGF0ZVByb2dyZXNzRGlhbG9nJywKICBwcm9wczogewogICAgdmlzaWJsZTogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHByb2dyZXNzOiAwLAogICAgICBjdXJyZW50VGFzazogdGhpcy4kdCgndXBkYXRlLnByZXBhcmluZycpLAogICAgICBsb2dzOiBbXSwKICAgICAgbG9nRXhwYW5kZWQ6IGZhbHNlLAogICAgICB1cGRhdGVDb21wbGV0ZTogZmFsc2UsCiAgICAgIHVwZGF0ZUZhaWxlZDogZmFsc2UsCiAgICAgIGVycm9yTWVzc2FnZTogJycKICAgIH07CiAgfSwKICB3YXRjaDogewogICAgY3VycmVudERyaXZlclR5cGU6IGZ1bmN0aW9uIGN1cnJlbnREcml2ZXJUeXBlKCkgewogICAgICAvLyDlvZPor63oqIDmlLnlj5jml7bmm7TmlrDlvZPliY3ku7vliqHmlofmnKwKICAgICAgaWYgKHRoaXMucHJvZ3Jlc3MgPT09IDApIHsKICAgICAgICB0aGlzLmN1cnJlbnRUYXNrID0gdGhpcy4kdCgndXBkYXRlLnByZXBhcmluZycpOwogICAgICB9CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy4kYnVzLiRvbigndXBkYXRlX3Byb2dyZXNzJywgdGhpcy5oYW5kbGVQcm9ncmVzc01lc3NhZ2UpOwogICAgdGhpcy4kYnVzLiRvbigndXBkYXRlX2Vycm9yJywgdGhpcy5oYW5kbGVFcnJvck1lc3NhZ2UpOwogICAgdGhpcy4kYnVzLiRvbigndXBkYXRlX3N1Y2Nlc3MnLCB0aGlzLmhhbmRsZVN1Y2Nlc3NNZXNzYWdlKTsgLy8g6Zi75q2i6aG16Z2i5rua5YqoCgogICAgaWYgKHRoaXMudmlzaWJsZSkgewogICAgICBkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93ID0gJ2hpZGRlbic7CiAgICB9CiAgfSwKICBiZWZvcmVEZXN0cm95OiBmdW5jdGlvbiBiZWZvcmVEZXN0cm95KCkgewogICAgLy8g5oGi5aSN6aG16Z2i5rua5YqoCiAgICBkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93ID0gJyc7CiAgfSwKICBtZXRob2RzOiB7CiAgICBoYW5kbGVPdmVybGF5Q2xpY2s6IGZ1bmN0aW9uIGhhbmRsZU92ZXJsYXlDbGljaygpIHsvLyDngrnlh7vog4zmma/ml7bkuI3lgZrku7vkvZXmk43kvZzvvIzpmLLmraLor6/lhbPpl60KICAgICAgLy8g5aaC5p6c6ZyA6KaB54K55Ye76IOM5pmv5YWz6Zet77yM5Y+v5Lul5Zyo6L+Z6YeM5re75Yqg6YC76L6RCiAgICB9LAogICAgaGFuZGxlUHJvZ3Jlc3NNZXNzYWdlOiBmdW5jdGlvbiBoYW5kbGVQcm9ncmVzc01lc3NhZ2UobWVzc2FnZSkgewogICAgICB2YXIgcGFydHMgPSBtZXNzYWdlLnNwbGl0KCc6Jyk7CgogICAgICBpZiAocGFydHMubGVuZ3RoID49IDMpIHsKICAgICAgICB2YXIgcHJvZ3Jlc3NWYWx1ZSA9IHBhcnNlSW50KHBhcnRzWzFdLCAxMCk7CiAgICAgICAgdmFyIHByb2dyZXNzTWVzc2FnZSA9IHBhcnRzWzJdOwogICAgICAgIHRoaXMucHJvZ3Jlc3MgPSBwcm9ncmVzc1ZhbHVlOwogICAgICAgIHRoaXMuY3VycmVudFRhc2sgPSBwcm9ncmVzc01lc3NhZ2U7CiAgICAgICAgdGhpcy5hZGRMb2dFbnRyeShwcm9ncmVzc01lc3NhZ2UsICdwcm9ncmVzcycpOwogICAgICB9CiAgICB9LAogICAgaGFuZGxlRXJyb3JNZXNzYWdlOiBmdW5jdGlvbiBoYW5kbGVFcnJvck1lc3NhZ2UobWVzc2FnZSkgewogICAgICB2YXIgcGFydHMgPSBtZXNzYWdlLnNwbGl0KCc6Jyk7CgogICAgICBpZiAocGFydHMubGVuZ3RoID49IDMpIHsKICAgICAgICB2YXIgZXJyb3JNZXNzYWdlID0gcGFydHNbMl07CiAgICAgICAgdGhpcy51cGRhdGVGYWlsZWQgPSB0cnVlOwogICAgICAgIHRoaXMuZXJyb3JNZXNzYWdlID0gZXJyb3JNZXNzYWdlOwogICAgICAgIHRoaXMuYWRkTG9nRW50cnkoIiIuY29uY2F0KHRoaXMuJHQoJ3VwZGF0ZS5lcnJvcicpLCAiOiAiKS5jb25jYXQoZXJyb3JNZXNzYWdlKSwgJ2Vycm9yJyk7CiAgICAgIH0KICAgIH0sCiAgICBoYW5kbGVTdWNjZXNzTWVzc2FnZTogZnVuY3Rpb24gaGFuZGxlU3VjY2Vzc01lc3NhZ2UobWVzc2FnZSkgewogICAgICB2YXIgcGFydHMgPSBtZXNzYWdlLnNwbGl0KCc6Jyk7CgogICAgICBpZiAocGFydHMubGVuZ3RoID49IDMpIHsKICAgICAgICB2YXIgc3VjY2Vzc01lc3NhZ2UgPSBwYXJ0c1syXTsKICAgICAgICB0aGlzLnByb2dyZXNzID0gMTAwOwogICAgICAgIHRoaXMudXBkYXRlQ29tcGxldGUgPSB0cnVlOwogICAgICAgIHRoaXMuY3VycmVudFRhc2sgPSBzdWNjZXNzTWVzc2FnZTsKICAgICAgICB0aGlzLmFkZExvZ0VudHJ5KCIiLmNvbmNhdCh0aGlzLiR0KCd1cGRhdGUuY29tcGxldGVkJyksICI6ICIpLmNvbmNhdChzdWNjZXNzTWVzc2FnZSksICdzdWNjZXNzJyk7CiAgICAgIH0KICAgIH0sCiAgICBhZGRMb2dFbnRyeTogZnVuY3Rpb24gYWRkTG9nRW50cnkobWVzc2FnZSwgdHlwZSkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIG5vdyA9IG5ldyBEYXRlKCk7CiAgICAgIHZhciB0aW1lU3RyaW5nID0gbm93LnRvTG9jYWxlVGltZVN0cmluZygpOwogICAgICB0aGlzLmxvZ3MucHVzaCh7CiAgICAgICAgdGltZTogdGltZVN0cmluZywKICAgICAgICBtZXNzYWdlOiBtZXNzYWdlLAogICAgICAgIHR5cGU6IHR5cGUKICAgICAgfSk7IC8vIOWmguaenOaXpeW/l+aVsOmHj+WkquWkmu+8jOenu+mZpOacgOaXqeeahOadoeebrgoKICAgICAgaWYgKHRoaXMubG9ncy5sZW5ndGggPiAxMDApIHsKICAgICAgICB0aGlzLmxvZ3Muc2hpZnQoKTsKICAgICAgfSAvLyDoh6rliqjmu5rliqjliLDmnIDmlrDnmoTml6Xlv5cKCgogICAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7CiAgICAgICAgdmFyIGxvZ1Njcm9sbCA9IF90aGlzLiRlbC5xdWVyeVNlbGVjdG9yKCcubG9nLXNjcm9sbCcpOwoKICAgICAgICBpZiAobG9nU2Nyb2xsKSB7CiAgICAgICAgICBsb2dTY3JvbGwuc2Nyb2xsVG9wID0gbG9nU2Nyb2xsLnNjcm9sbEhlaWdodDsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIHRvZ2dsZUxvZ0V4cGFuZDogZnVuY3Rpb24gdG9nZ2xlTG9nRXhwYW5kKCkgewogICAgICB0aGlzLmxvZ0V4cGFuZGVkID0gIXRoaXMubG9nRXhwYW5kZWQ7CiAgICB9LAogICAgY2xvc2VEaWFsb2c6IGZ1bmN0aW9uIGNsb3NlRGlhbG9nKCkgewogICAgICAvLyDmgaLlpI3pobXpnaLmu5rliqgKICAgICAgZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdyA9ICcnOwogICAgICB0aGlzLiRidXMuJGVtaXQoJ2Nsb3NlVXBkYXRlRGlhbG9nJyk7CiAgICB9LAogICAgcmV0cnlVcGRhdGU6IGZ1bmN0aW9uIHJldHJ5VXBkYXRlKCkgewogICAgICB0aGlzLnVwZGF0ZUZhaWxlZCA9IGZhbHNlOwogICAgICB0aGlzLnVwZGF0ZUNvbXBsZXRlID0gZmFsc2U7CiAgICAgIHRoaXMucHJvZ3Jlc3MgPSAwOwogICAgICB0aGlzLmN1cnJlbnRUYXNrID0gdGhpcy4kdCgndXBkYXRlLnByZXBhcmluZycpOwogICAgICB0aGlzLmxvZ3MgPSBbXTsgLy8gdGhpcy4kZW1pdCgncmV0cnknKTsKCiAgICAgIHRoaXMuJGJ1cy4kZW1pdCgncmVSdW5VcGRhdGUnKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["UpdateProgressDialog.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"update-overlay\" v-if=\"visible\" :class=\"{ 'update-complete': updateComplete }\" @click=\"handleOverlayClick\">\n      <div class=\"update-dialog\" @click.stop>\n        <div class=\"update-header\">\n          <h2 v-if=\"!updateComplete && !updateFailed\" class=\"warning-text\">{{ $t('update.warning') }}</h2>\n          <h2 v-else-if=\"updateComplete\" class=\"success-text\">{{ $t('update.complete') }}</h2>\n          <h2 v-else class=\"error-text\">{{ $t('update.failed') }}</h2>\n        </div>\n  \n        <div class=\"progress-container\">\n          <div class=\"progress-bar\">\n            <div class=\"progress-fill\" :style=\"{ width: `${progress}%` }\" \n                 :class=\"{ 'success': updateComplete, 'error': updateFailed }\"></div>\n          </div>\n          <div class=\"progress-text\">{{ progress }}%</div>\n        </div>\n  \n        <div class=\"current-task\">\n          <span>{{ $t('update.currentTask') }}：</span>{{ currentTask }}\n        </div>\n  \n        <div class=\"log-container\">\n          <div class=\"log-header\">\n            <span>{{ $t('update.updateLog') }}</span>\n            <button class=\"toggle-log\" @click=\"toggleLogExpand\">\n              {{ logExpanded ? $t('update.collapse') : $t('update.expand') }}\n            </button>\n          </div>\n          <div class=\"log-content\" :class=\"{ 'expanded': logExpanded }\">\n            <div class=\"log-scroll\">\n              <div v-for=\"(log, index) in logs\" :key=\"index\" \n                   :class=\"{ 'error-log': log.type === 'error', \n                            'success-log': log.type === 'success', \n                            'progress-log': log.type === 'progress' }\">\n                <span class=\"log-time\">{{ log.time }}</span>\n                <span class=\"log-message\">{{ log.message }}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n  \n        <div class=\"dialog-footer\" v-if=\"updateComplete || updateFailed\">\n          <button class=\"close-button\" @click=\"closeDialog\">{{ $t('update.close') }}</button>\n          <button class=\"retry-button\" v-if=\"updateFailed\" @click=\"retryUpdate\">{{ $t('update.retry') }}</button>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    name: 'UpdateProgressDialog',\n    props: {\n      visible: {\n        type: Boolean,\n        default: false\n      }\n    },\n    data() {\n      return {\n        progress: 0,\n        currentTask: this.$t('update.preparing'),\n        logs: [],\n        logExpanded: false,\n        updateComplete: false,\n        updateFailed: false,\n        errorMessage: ''\n      };\n    },\n    watch: {\n    currentDriverType() {\n      // 当语言改变时更新当前任务文本\n      if (this.progress === 0) {\n        this.currentTask = this.$t('update.preparing');\n      }\n    }\n  },\n    mounted() {\n      this.$bus.$on('update_progress', this.handleProgressMessage);\n      this.$bus.$on('update_error', this.handleErrorMessage);\n      this.$bus.$on('update_success', this.handleSuccessMessage);\n      \n      // 阻止页面滚动\n      if (this.visible) {\n        document.body.style.overflow = 'hidden';\n      }\n    },\n    beforeDestroy() {\n      // 恢复页面滚动\n      document.body.style.overflow = '';\n    },\n          methods: {\n        handleOverlayClick() {\n          // 点击背景时不做任何操作，防止误关闭\n          // 如果需要点击背景关闭，可以在这里添加逻辑\n        },\n        handleProgressMessage(message) {\n        const parts = message.split(':');\n        if (parts.length >= 3) {\n            const progressValue = parseInt(parts[1], 10);\n            const progressMessage = parts[2];\n            \n            this.progress = progressValue;\n            this.currentTask = progressMessage;\n            this.addLogEntry(progressMessage, 'progress');\n        }\n      },\n      handleErrorMessage(message) {\n        const parts = message.split(':');\n        if (parts.length >= 3) {\n            const errorMessage = parts[2];\n            \n            this.updateFailed = true;\n            this.errorMessage = errorMessage;\n            this.addLogEntry(`${this.$t('update.error')}: ${errorMessage}`, 'error');\n        }\n      },\n      handleSuccessMessage(message) {\n        const parts = message.split(':');\n        if (parts.length >= 3) {\n            const successMessage = parts[2];\n            \n            this.progress = 100;\n            this.updateComplete = true;\n            this.currentTask = successMessage;\n            this.addLogEntry(`${this.$t('update.completed')}: ${successMessage}`, 'success');\n        }\n      },\n      addLogEntry(message, type) {\n        const now = new Date();\n        const timeString = now.toLocaleTimeString();\n        \n        this.logs.push({\n            time: timeString,\n            message: message,\n            type: type\n        });\n        \n        // 如果日志数量太多，移除最早的条目\n        if (this.logs.length > 100) {\n            this.logs.shift();\n        }\n        \n        // 自动滚动到最新的日志\n        this.$nextTick(() => {\n            const logScroll = this.$el.querySelector('.log-scroll');\n            if (logScroll) {\n            logScroll.scrollTop = logScroll.scrollHeight;\n            }\n        });\n      },\n      toggleLogExpand() {\n        this.logExpanded = !this.logExpanded;\n      },\n      closeDialog() {\n        // 恢复页面滚动\n        document.body.style.overflow = '';\n        this.$bus.$emit('closeUpdateDialog');\n      },\n      retryUpdate() {\n        this.updateFailed = false;\n        this.updateComplete = false;\n        this.progress = 0;\n        this.currentTask = this.$t('update.preparing');\n        this.logs = [];\n        // this.$emit('retry');\n        this.$bus.$emit('reRunUpdate');\n        }\n    }\n  };\n  </script>\n  \n  <style scoped>\n  .update-overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: rgba(0, 0, 0, 0.7);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    z-index: 9999;\n    overflow: hidden;\n    /* 确保可以接收点击事件 */\n    pointer-events: auto;\n  }\n  \n  .update-dialog {\n    background-color: #fff;\n    border-radius: 8px;\n    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.2);\n    width: 80%;\n    max-width: 600px;\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n    max-height: 80vh;\n    /* 确保对话框可以接收点击事件 */\n    pointer-events: auto;\n    /* 防止选择 */\n    user-select: none;\n    /* 确保在最前面 */\n    position: relative;\n    z-index: 10000;\n  }\n  \n  .update-header {\n    margin-bottom: 20px;\n    text-align: center;\n  }\n  \n  .warning-text {\n    color: #ff9800;\n    font-weight: bold;\n  }\n  \n  .success-text {\n    color: #4caf50;\n    font-weight: bold;\n  }\n  \n  .error-text {\n    color: #f44336;\n    font-weight: bold;\n  }\n  \n  .progress-container {\n    display: flex;\n    align-items: center;\n    margin-bottom: 20px;\n  }\n  \n  .progress-bar {\n    flex-grow: 1;\n    height: 20px;\n    background-color: #e0e0e0;\n    border-radius: 10px;\n    overflow: hidden;\n    margin-right: 10px;\n  }\n  \n  .progress-fill {\n    height: 100%;\n    background-color: #2196f3;\n    transition: width 0.3s ease;\n  }\n  \n  .progress-fill.success {\n    background-color: #4caf50;\n  }\n  \n  .progress-fill.error {\n    background-color: #f44336;\n  }\n  \n  .progress-text {\n    width: 40px;\n    font-weight: bold;\n    text-align: right;\n  }\n  \n  .current-task {\n    margin-bottom: 15px;\n    font-size: 16px;\n  }\n  \n  .current-task span {\n    font-weight: bold;\n  }\n  \n  .log-container {\n    border: 1px solid #e0e0e0;\n    border-radius: 4px;\n    overflow: hidden;\n    margin-bottom: 20px;\n  }\n  \n  .log-header {\n    background-color: #f5f5f5;\n    padding: 8px 12px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    font-weight: bold;\n  }\n  \n  .toggle-log {\n    background: none;\n    border: none;\n    color: #2196f3;\n    cursor: pointer;\n    font-size: 14px;\n    padding: 4px 8px;\n    border-radius: 4px;\n    transition: background-color 0.2s ease;\n  }\n  \n  .toggle-log:hover {\n    background-color: #e3f2fd;\n  }\n  \n  .toggle-log:active {\n    background-color: #bbdefb;\n  }\n  \n  .log-content {\n    max-height: 100px;\n    transition: max-height 0.3s ease;\n    overflow: hidden;\n  }\n  \n  .log-content.expanded {\n    max-height: 300px;\n  }\n  \n  .log-scroll {\n    overflow-y: auto;\n    max-height: 300px;\n    padding: 10px;\n  }\n  \n  .log-scroll div {\n    padding: 4px 0;\n    border-bottom: 1px solid #f0f0f0;\n    font-family: monospace;\n  }\n  \n  .log-time {\n    color: #757575;\n    margin-right: 10px;\n    font-size: 12px;\n  }\n  \n  .error-log .log-message {\n    color: #f44336;\n  }\n  \n  .success-log .log-message {\n    color: #4caf50;\n  }\n  \n  .progress-log .log-message {\n    color: #2196f3;\n  }\n  \n  .dialog-footer {\n    display: flex;\n    justify-content: flex-end;\n    gap: 10px;\n  }\n  \n  .close-button, .retry-button {\n    padding: 8px 16px;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    font-weight: bold;\n    transition: all 0.2s ease;\n    min-width: 80px;\n  }\n  \n  .close-button {\n    background-color: #e0e0e0;\n    color: #333;\n  }\n  \n  .close-button:hover {\n    background-color: #d0d0d0;\n  }\n  \n  .close-button:active {\n    background-color: #c0c0c0;\n  }\n  \n  .retry-button {\n    background-color: #2196f3;\n    color: white;\n  }\n  \n  .retry-button:hover {\n    background-color: #1976d2;\n  }\n  \n  .retry-button:active {\n    background-color: #1565c0;\n  }\n  </style>"],"sourceRoot":"src/components"}]}