{"remainingRequest":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/thread-loader/dist/cjs.js!/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/babel-loader/lib/index.js!/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/src/components/DeviceAllocationPanel.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/src/components/DeviceAllocationPanel.vue","mtime":1743136525000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1707125360000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/thread-loader/dist/cjs.js","mtime":1707125360000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/babel-loader/lib/index.js","mtime":1707125360000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1707125360000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/vue-loader/lib/index.js","mtime":1707125450000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["DeviceAllocationPanel.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <transition name=\"panel\">\n    <div class=\"DeviceAllocationPanel-panel\" :style=\"{ bottom: bottom + 'px', top: top + 'px', width: panelWidth }\">\n      <!-- <ul class=\"device-list\">\n        <li v-for=\"(device, index) in DeviceList\" :key=\"index\" @click=\"SelectedDeviceName(device)\">\n          {{ device.DeviceName }}\n        </li>\n      </ul> -->\n      <div class=\"DeviceTypes-list\">\n        <DevicePicker v-for=\"(deviceType, index) in DeviceTypes\" :key=\"index\" :DeviceType=\"deviceType.DeviceType\"\n          :DeviceName=\"deviceType.DeviceName\" :DeviceBind=\"deviceType.isBind\" :PickerIndex=\"index\" :PickerSelect=\"deviceType.isSelected\"\n          :style=\"{ top: Position[index].top, left: Position[index].left }\" />\n      </div>\n\n      <span style=\"position: absolute; top: 10px; right: 15px; font-size: 15px; color: rgba(255, 255, 255, 0.5); user-select: none;\"> \n        {{ $t('Device To Be Allocated') }}\n      </span>\n\n      <ul class=\"device-list\">\n        <li v-for=\"(device, index) in DeviceList.filter(device => !device.isBind)\" :key=\"index\" @click=\"SelectedDeviceName(device)\">\n          {{ device.DeviceName }}\n        </li>\n      </ul>\n\n      <span style=\"position: absolute; bottom: 5px; right: 15px; font-size: 12px; font-weight: bold; color: rgba(0, 121, 214, 0.8); user-select: none;\" @click=\"ClosePanel\"> \n        {{ $t('CLOSE') }}\n      </span>\n\n\n\n    </div>\n  </transition>\n</template>\n\n<script>\nimport DevicePicker from './DevicePicker.vue';\n\nexport default {\n  name: 'DeviceAllocationPanel',\n  data() {\n    return {\n      bottom: 70,\n      top: 70,\n      DeviceList: [\n        // { DeviceName: 'QHY CCD QHY5III462C-075', DeviceIndex: 0, isBind: false },\n        // { DeviceName: 'QHY CCD QHY268C-59aa8c4', DeviceIndex: 1, isBind: false },\n        // { DeviceName: 'LX200 OnStep', DeviceIndex: 2, isBind: false },\n        // { DeviceName: 'QHY CCD QHY1920M-075', DeviceIndex: 3, isBind: false },\n        // { DeviceName: 'QHY CCD QHY163C-075', DeviceIndex: 4, isBind: false },\n      ],\n\n\n      DeviceTypes: [\n        // { DeviceType: 'Guider', DeviceName: '', isBind: false, isSelected: false },\n        // { DeviceType: 'Main Camera', DeviceName: '', isBind: false, isSelected: false },\n        // { DeviceType: 'Mount', DeviceName: '', isBind: false, isSelected: false },\n\n        // { DeviceType: 'Focuser', DeviceName: '', isBind: false, isSelected: false },\n        // { DeviceType: 'Pole Camera', DeviceName: '', isBind: false, isSelected: false },\n        // { DeviceType: 'CFW', DeviceName: '', isBind: false, isSelected: false },\n      ],\n\n      Position: [\n        { top: '12%', left: '15px' },\n        { top: '39%', left: '15px' },\n        { top: '66%', left: '15px' },\n\n        { top: '12%', left: '175px' },\n        { top: '39%', left: '175px' },\n        { top: '66%', left: '175px' },\n      ],\n    };\n  },\n  created() {\n    this.$bus.$on('SelectPickerIndex', this.SelectPickerIndex);\n    this.$bus.$on('AddDeviceType',this.AddDeviceType);\n    this.$bus.$on('DeviceToBeAllocated',this.DeviceToBeAllocated);\n    this.$bus.$on('DeviceConnectSuccess', this.DeviceConnectSuccess);\n    this.$bus.$on('BindDeviceIndex', this.BindingDevice);\n    this.$bus.$on('UnBindDeviceIndex', this.UnBindingDevice);\n    this.$bus.$on('claerDeviceAllocationList',this.claerDeviceAllocationList);\n    this.$bus.$on('deleteDeviceTypeAllocationList',this.deleteDeviceTypeAllocationList);\n    this.$bus.$on('deleteDeviceAllocationList',this.deleteDeviceAllocationList);\n    this.$bus.$on('loadBindDeviceList',this.loadBindDeviceList);\n    this.$bus.$on('loadBindDeviceTypeList',this.loadBindDeviceTypeList);\n  },\n  methods: {\n    SelectPickerIndex(num) {\n      for(let i = 0; i < this.DeviceTypes.length; i++) {\n        this.DeviceTypes[i].isSelected = false;\n      }\n      console.log('Select Picker Index:', num);\n      if(!this.DeviceTypes[num].isBind){\n        this.DeviceTypes[num].isSelected = true;\n      }\n    },\n\n    SelectedDeviceName(device) {\n      for (let i = 0; i < this.DeviceTypes.length; i++) {\n        if (this.DeviceTypes[i].DeviceName === device.DeviceName) {\n          this.DeviceTypes[i].DeviceName = '';\n        }\n      }\n\n      for (let i = 0; i < this.DeviceTypes.length; i++) {\n        if (this.DeviceTypes[i].isSelected === true) {\n          this.DeviceTypes[i].DeviceName = device.DeviceName;\n        }\n      }\n    },\n\n    AddDeviceType(DeviceType) {\n      const exists = this.DeviceTypes.some(item => item.DeviceType === DeviceType);\n      if (exists) {\n        console.log('Device Type already exists:', DeviceType);\n      } else {\n        console.log('Add Device Type:', DeviceType);\n        this.DeviceTypes.push({DeviceType: DeviceType, DeviceName: '', isBind: false, isSelected: false });\n      }\n    },\n\n    DeviceToBeAllocated(index,name) {\n      const exists1 = this.DeviceList.some(item => item.DeviceName === name);\n      const exists2 = this.DeviceTypes.some(item => item.DeviceName === name);\n      console.log('this.DeviceList:', this.DeviceList);\n      if (exists1) {\n        console.log('Device already exists:', name);\n        this.$bus.$emit('SendConsoleLogMsg', 'Device already exists:' + index + ':' + name, 'info');\n      } else {\n        if (exists2) {\n          this.$bus.$emit('SendConsoleLogMsg', 'Device already exists:' + index + ':' + name, 'info');\n          this.DeviceList.push({DeviceName: name, DeviceIndex: index, isBind: true });\n        } else {\n          this.$bus.$emit('SendConsoleLogMsg', 'Add Device To Be Allocated:' + index + ':' + name, 'info');\n          console.log('Add Device To Be Allocated:', index, name);\n          this.DeviceList.push({DeviceName: name, DeviceIndex: index, isBind: false });\n        }\n      }\n    },\n\n    DeviceConnectSuccess(type, DeviceName, DriverName, isBind = true) {\n      if (type == '' || type == \"undefined\" || type == null || DriverName == '' || DriverName == \"undefined\" || DriverName == null){\n        return;\n      }\n\n      let found = false;\n      for (let i = 0; i < this.DeviceTypes.length; i++) {\n        if (this.DeviceTypes[i].DeviceType === type) {\n          this.DeviceTypes[i].DeviceName = DeviceName;\n          this.DeviceTypes[i].isBind = isBind;\n          this.DeviceTypes[i].isSelected = false;\n          found = true; // 标记已找到匹配项\n          break; // 找到后可以跳出循环，优化性能\n        }\n      }\n\n      // 如果没有找到匹配项，添加新的设备对象\n      if (!found) {\n        this.DeviceTypes.push({\n          DeviceType: type,\n          DeviceName: DeviceName,\n          isBind: isBind,\n          isSelected: false,\n        });\n      }\n      const indexToRemove = this.DeviceList.findIndex(item => item.DeviceName === DeviceName);\n      if (indexToRemove !== -1) {\n        this.DeviceList[indexToRemove].isBind = isBind;\n        this.$bus.$emit('SendConsoleLogMsg', ' Binding Device Success:' + type + ':' + this.DeviceList[indexToRemove].DeviceIndex+': '+ this.DeviceList[indexToRemove].isBind, 'info');\n      }\n    },\n\n    BindingDevice(index) {\n      const type = this.DeviceTypes[index].DeviceType;\n      const name = this.DeviceTypes[index].DeviceName;\n\n      const DeviceNameIndex = this.DeviceList.findIndex(item => item.DeviceName === name);\n      if (DeviceNameIndex !== -1) {\n        this.$bus.$emit('AppSendMessage', 'Vue_Command', 'BindingDevice:' + type + ':' + this.DeviceList[DeviceNameIndex].DeviceIndex);\n        this.$bus.$emit('SendConsoleLogMsg', 'Binding Device:' + type + ':' + this.DeviceList[DeviceNameIndex].DeviceIndex, 'info');\n      }\n    },\n\n    UnBindingDevice(index) {\n      const type = this.DeviceTypes[index].DeviceType;\n      const name = this.DeviceTypes[index].DeviceName;\n\n\n      this.$bus.$emit('AppSendMessage', 'Vue_Command', 'UnBindingDevice:' + type);\n      this.$bus.$emit('SendConsoleLogMsg', 'UnBinding Device:' + type, 'info');\n\n      this.DeviceTypes[index].isBind = false;\n      this.DeviceTypes[index].DeviceName = '';\n      const indexToRemove = this.DeviceList.findIndex(item => item.DeviceName === name);\n      this.DeviceList[indexToRemove].isBind = false;\n      this.$bus.$emit('UnBindingDevice', type, name,this.DeviceList[index].DriverName);\n    },\n\n    ClosePanel() {\n      this.$bus.$emit('toggleDeviceAllocationPanel');\n    },\n\n    claerDeviceAllocationList() {\n      this.DeviceTypes = [];\n      this.DeviceList = [];\n    },\n    deleteDeviceTypeAllocationList(type) {\n\n      if (type == \"all\"){\n        this.claerDeviceAllocationList()\n        this.$bus.$emit('SendConsoleLogMsg', 'All driverType has removed', 'info');\n        return;\n      }\n\n      for (let i = this.DeviceTypes.length - 1; i >= 0; i--) {\n        if (this.DeviceTypes[i].DeviceType === type) {\n          for (let j = this.DeviceList.length - 1; j >= 0; j--) {\n            if (this.DeviceList[j].DeviceName === this.DeviceTypes[i].DeviceName) {\n              this.DeviceList[j].isBind = false;\n              break\n            }\n          }\n          this.DeviceTypes.splice(i, 1);\n          break\n        }\n      }\n      this.$bus.$emit('SendConsoleLogMsg', type + \" driverType has removed\", 'info');\n    },\n    deleteDeviceAllocationList(deviceName) {\n      for (let i = this.DeviceList.length - 1; i >= 0; i--) {\n        if (this.DeviceList[i].DeviceName === deviceName) {\n          this.DeviceList.splice(i, 1);\n        }\n      }\n      this.$bus.$emit('SendConsoleLogMsg', 'Device(' + deviceName + ') has removed', 'info');\n    },\n\n\n    GetConnectedDevices() {\n      this.$bus.$emit('GetConnectedDevices');\n      \n    },\n\n    loadBindDeviceList(deviceObject) {\n      deviceObject.forEach(device => {\n        for (const [deviceName, deviceIndex, isBind] of Object.entries(device)) {\n          this.DeviceToBeAllocated(deviceIndex, deviceName, isBind);\n        }\n      });\n    },\n\n    loadBindDeviceTypeList(deviceTypeObject) {\n      deviceTypeObject.forEach(deviceType => {\n        const { type, DeviceName, DriverName, isbind } = deviceType;\n        this.DeviceConnectSuccess(type, DeviceName, DriverName, isbind);\n      });\n    }\n    \n  },\n  components: {\n    DevicePicker,\n  },\n  computed: {\n    panelWidth() {\n      // 如果 DeviceTypes 中的项目数小于或等于 3，则宽度为 360px\n      // 如果大于 3，则宽度为 500px\n      return this.DeviceTypes.length <= 3 ? '360px' : '500px';\n    },\n  },\n  mounted: function () {\n    this.GetConnectedDevices();\n  },\n  watch: {},\n};\n</script>\n\n<style scoped>\n.DeviceAllocationPanel-panel {\n  pointer-events: auto;\n  position: fixed;\n  background-color: rgba(64, 64, 64, 0.5);\n  backdrop-filter: blur(5px);\n  box-sizing: border-box;\n  overflow: hidden;\n  left: 50%;\n  transform: translateX(-50%);\n\n  border-radius: 10px;\n  border: 1px solid rgba(255, 255, 255, 0.8);\n}\n\n@keyframes showPanelAnimation {\n  from {\n    bottom: 100%;\n    backdrop-filter: blur(0px);\n    background-color: rgba(64, 64, 64, 0.0);\n  }\n\n  to {\n    bottom: 70px;\n    backdrop-filter: blur(5px);\n    background-color: rgba(64, 64, 64, 0.3);\n  }\n}\n\n@keyframes hidePanelAnimation {\n  from {\n    bottom: 70px;\n    backdrop-filter: blur(5px);\n    background-color: rgba(64, 64, 64, 0.3);\n  }\n\n  to {\n    bottom: 100%;\n    backdrop-filter: blur(0px);\n    background-color: rgba(64, 64, 64, 0.0);\n  }\n}\n\n.panel-enter-active {\n  animation: showPanelAnimation 0.3s forwards;\n}\n\n.panel-leave-active {\n  animation: hidePanelAnimation 0.3s forwards;\n}\n\n.device-list {\n  position: absolute;\n  top: 30px;\n  right: 15px;\n  bottom: 25px;\n\n  list-style-type: none;\n  /* 去掉列表前的默认点 */\n  padding: 0;\n  /* 去掉内边距 */\n  margin: 0;\n  /* 去掉外边距 */\n  width: 150px;\n  /* 控制列表宽度 */\n  max-height: 200px;\n  /* 控制列表最大高度 */\n  overflow-y: auto;\n  /* 允许垂直滚动 */\n  border: 1px solid rgba(255, 255, 255, 0.2);\n}\n\nli {\n  color: white;\n  /* 设定文字颜色 */\n  padding: 5px 10px;\n  /* 添加一些内边距 */\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2);\n  /* 添加底部边框 */\n  white-space: nowrap;\n  /* 确保文本不换行 */\n  overflow: hidden;\n  /* 超出部分隐藏 */\n  text-overflow: ellipsis;\n  /* 超出部分用省略号表示 */\n}\n\nli:hover {\n  background-color: rgba(255, 255, 255, 0.1);\n  /* 悬停效果 */\n}\n\n.DeviceTypes-list {\n  position: absolute;\n  top: 30px;\n  /* 根据需要调整位置 */\n  right: 15px;\n  /* 根据需要调整位置 */\n  bottom: 15px;\n  /* 根据需要调整位置 */\n  width: 150px;\n  /* 设置宽度，确保右侧的 DevicePicker 组件能够显示 */\n  overflow-y: auto;\n  /* 允许垂直滚动，如果需要的话 */\n}\n</style>\n"],"sourceRoot":"src/components"}]}