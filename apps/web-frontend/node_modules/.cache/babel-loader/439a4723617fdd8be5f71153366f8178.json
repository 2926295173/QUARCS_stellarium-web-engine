{"remainingRequest":"/app/node_modules/thread-loader/dist/cjs.js!/app/node_modules/babel-loader/lib/index.js!/app/node_modules/cache-loader/dist/cjs.js??ref--1-0!/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/src/components/location-mgr.vue?vue&type=script&lang=js&","dependencies":[{"path":"/app/src/components/location-mgr.vue","mtime":1749193651850},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":1707125360000},{"path":"/app/node_modules/thread-loader/dist/cjs.js","mtime":1707125360000},{"path":"/app/node_modules/babel-loader/lib/index.js","mtime":1707125360000},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":1707125360000},{"path":"/app/node_modules/vue-loader/lib/index.js","mtime":1707125450000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["location-mgr.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4EA,OAAA,GAAA,MAAA,wBAAA;AACA,SAAA,IAAA,EAAA,UAAA,EAAA,OAAA,EAAA,OAAA,EAAA,QAAA,EAAA,YAAA,QAAA,cAAA;AACA,SAAA,CAAA,QAAA,mDAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,YAAA,EAAA,SAFA;AAGA,MAAA,qBAAA,EAAA,SAHA;AAIA,MAAA,SAAA,EAAA,CAAA,IAAA,EAAA,MAAA,CAJA;AAKA,MAAA,GAAA,EAAA,6CALA;AAMA,MAAA,UAAA,EAAA;AANA,KAAA;AAQA,GAVA;AAWA,EAAA,KAAA,EAAA,CAAA,gBAAA,EAAA,gBAAA,EAAA,eAAA,EAAA,cAAA,CAXA;AAYA,EAAA,QAAA,EAAA;AACA,IAAA,gBAAA,EAAA,4BAAA;AACA,aAAA,KAAA,cAAA,KAAA,SAAA,GAAA,KAAA,GAAA,KAAA,cAAA;AACA,KAHA;AAIA,IAAA,gBAAA,EAAA,4BAAA;AACA,aAAA,KAAA,IAAA,KAAA,MAAA;AACA,KANA;AAOA,IAAA,iBAAA,EAAA,6BAAA;AACA,aAAA,KAAA,IAAA,KAAA,OAAA;AACA,KATA;AAUA,IAAA,iBAAA,EAAA,6BAAA;AACA,UAAA,KAAA,gBAAA,IAAA,KAAA,YAAA,KAAA,SAAA,EAAA;AACA,eAAA,KAAA,aAAA;AACA;;AACA,aAAA,KAAA,gBAAA,GAAA,KAAA,YAAA,GAAA,KAAA,qBAAA;AACA;AAfA,GAZA;AA6BA,EAAA,KAAA,EAAA;AACA,IAAA,aAAA,EAAA,yBAAA;AACA,WAAA,eAAA,CAAA,KAAA,aAAA;AACA;AAHA,GA7BA;AAkCA,EAAA,OAAA,EAAA,mBAAA;AAAA;;AACA,QAAA,IAAA,GAAA,IAAA;AACA,SAAA,eAAA,CAAA,KAAA,aAAA,EAFA,CAIA;;AACA,SAAA,2BAAA;AAEA,SAAA,SAAA,CAAA,YAAA;AACA,UAAA,GAAA,GAAA,KAAA,CAAA,KAAA,CAAA,KAAA,CAAA,SAAA;;AACA,MAAA,GAAA,CAAA,SAAA,GAFA,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACA,MAAA,KAAA,CAAA,uBAAA,CAAA,GAAA;AACA,KAhBA;AAiBA,GA1DA;AA2DA,EAAA,OAAA,EAAA;AACA,IAAA,mBAAA,EAAA,6BAAA,GAAA,EAAA;AACA,WAAA,qBAAA,GAAA,GAAA;AACA,WAAA,oBAAA;AACA,WAAA,SAAA,GAAA,CAAA,GAAA,CAAA,GAAA,EAAA,GAAA,CAAA,GAAA,CAAA;AACA,KALA;AAMA,IAAA,WAAA,EAAA,uBAAA;AACA,WAAA,KAAA,CAAA,kBAAA,EAAA,KAAA,iBAAA;AACA,WAAA,KAAA,CAAA,eAAA,EAAA,KAAA,iBAAA,CAAA,GAAA,EAAA,KAAA,iBAAA,CAAA,GAAA;AACA,KATA;AAUA,IAAA,mBAAA,EAAA,+BAAA;AACA,WAAA,IAAA,GAAA,MAAA;AACA,KAZA;AAaA,IAAA,oBAAA,EAAA,gCAAA;AACA,WAAA,IAAA,GAAA,OAAA;AACA,KAfA;AAgBA,IAAA,eAAA,EAAA,yBAAA,GAAA,EAAA;AACA,UAAA,GAAA,CAAA,QAAA,GAAA,GAAA,EAAA;AAAA,mDACA,KAAA,cADA;AAAA;;AAAA;AACA,8DAAA;AAAA,gBAAA,CAAA;AACA,gBAAA,CAAA,GAAA,GAAA,CAAA,wBAAA,CAAA,CAAA,CAAA,GAAA,EAAA,CAAA,CAAA,GAAA,EAAA,GAAA,CAAA,GAAA,EAAA,GAAA,CAAA,GAAA,CAAA;;AACA,gBAAA,CAAA,GAAA,GAAA,EAAA;AACA,mBAAA,mBAAA,CAAA,CAAA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAQA;;AACA,UAAA,GAAA,GAAA;AAAA,QAAA,GAAA,EAAA,GAAA,CAAA,GAAA;AAAA,QAAA,GAAA,EAAA,GAAA,CAAA;AAAA,OAAA;AACA,WAAA,SAAA,GAAA,CAAA,GAAA,CAAA,GAAA,EAAA,GAAA,CAAA,GAAA,CAAA;AACA,WAAA,YAAA,GAAA,GAAA;AACA,WAAA,mBAAA;AACA,KA9BA;AA+BA;AACA,IAAA,oBAAA,EAAA,gCAAA;AACA,WAAA,eAAA,CAAA,KAAA,YAAA;AACA,KAlCA;AAmCA,IAAA,OAAA,EAAA,iBAAA,KAAA,EAAA;AACA,UAAA,IAAA,GAAA,IAAA;AACA,UAAA,GAAA,GAAA;AAAA,QAAA,GAAA,EAAA,KAAA,CAAA,MAAA,CAAA,OAAA,CAAA,GAAA;AAAA,QAAA,GAAA,EAAA,KAAA,CAAA,MAAA,CAAA,OAAA,CAAA,GAAA;AAAA,QAAA,QAAA,EAAA;AAAA,OAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,kBAAA,GAAA,CAAA,GAAA,GAAA,GAAA,GAAA,GAAA,CAAA,GAAA;AACA,MAAA,GAAA,CAAA,eAAA,CAAA,GAAA,EAAA,IAAA,EAAA,IAAA,CAAA,UAAA,CAAA,EAAA;AAAA,QAAA,IAAA,CAAA,YAAA,GAAA,CAAA;AAAA,QAAA,IAAA,CAAA,mBAAA;AAAA,OAAA;AACA,WAAA,KAAA,CAAA,eAAA,EAAA,GAAA,CAAA,GAAA,EAAA,GAAA,CAAA,GAAA;AACA,KAzCA;AA0CA,IAAA,2BAAA,EAAA,uCAAA;AACA,UAAA,IAAA,GAAA,IAAA,CADA,CAEA;;AACA,UAAA,WAAA,GAAA,KAAA,GAAA,CAAA,OAAA,CAAA,KAAA,EAAA,GAAA,EAAA,OAAA,CAAA,KAAA,EAAA,GAAA,EAAA,OAAA,CAAA,KAAA,EAAA,GAAA,CAAA;AAEA,MAAA,KAAA,CAAA,WAAA,EAAA;AAAA,QAAA,MAAA,EAAA,MAAA;AAAA,QAAA,OAAA,EAAA;AAAA,OAAA,CAAA,CACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,YAAA,QAAA,CAAA,EAAA,EAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,WAAA,EADA,CAEA;AACA,SAHA,MAGA;AACA,gBAAA,IAAA,KAAA,CAAA,QAAA,CAAA;AACA;AACA,OARA,EASA,KATA,CASA,UAAA,KAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,YAAA,EAAA,KAAA,EADA,CAEA;;AACA,QAAA,IAAA,CAAA,GAAA,GAAA,IAAA,CAAA,UAAA;AACA,OAbA;AAcA,KA7DA;AA8DA,IAAA,uBAAA,EAAA,iCAAA,GAAA,EAAA;AACA,UAAA,IAAA,GAAA,IAAA,CADA,CAGA;;AACA,UAAA,aAAA,GAAA,CAAA,CAAA,OAAA,CAAA,MAAA,CAAA;AACA,QAAA,OAAA,EAAA;AACA,UAAA,QAAA,EAAA;AADA,SADA;AAIA,QAAA,KAAA,EAAA,eAAA,GAAA,EAAA;AACA,cAAA,SAAA,GAAA,CAAA,CAAA,OAAA,CAAA,MAAA,CAAA,KAAA,EAAA,sCAAA,CAAA;AACA,UAAA,SAAA,CAAA,SAAA;AAOA,cAAA,KAAA,GAAA,SAAA,CAAA,aAAA,CAAA,OAAA,CAAA;AACA,cAAA,MAAA,GAAA,SAAA,CAAA,aAAA,CAAA,QAAA,CAAA;;AAEA,UAAA,MAAA,CAAA,OAAA,GAAA,YAAA;AACA,YAAA,IAAA,CAAA,mBAAA,CAAA,KAAA,CAAA,KAAA;AACA,WAFA;;AAIA,UAAA,KAAA,CAAA,UAAA,GAAA,UAAA,CAAA,EAAA;AACA,gBAAA,CAAA,CAAA,GAAA,KAAA,OAAA,EAAA;AACA,cAAA,IAAA,CAAA,mBAAA,CAAA,KAAA,CAAA,KAAA;AACA;AACA,WAJA;;AAMA,iBAAA,SAAA;AACA;AA3BA,OAAA,CAAA;AA8BA,UAAA,aAAA,GAAA,KAAA,CAAA,GAAA;AACA,KAjGA;AAkGA,IAAA,mBAAA,EAAA,6BAAA,KAAA,EAAA;AACA;AACA,UAAA,YAAA,GAAA,kCAAA;AACA,UAAA,KAAA,GAAA,KAAA,CAAA,KAAA,CAAA,YAAA,CAAA;;AAEA,UAAA,KAAA,EAAA;AACA,YAAA,GAAA,GAAA,UAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA;AACA,YAAA,GAAA,GAAA,UAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA;;AAEA,YAAA,GAAA,IAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,GAAA,IAAA,CAAA,GAAA,IAAA,GAAA,IAAA,GAAA,EAAA;AACA,cAAA,GAAA,GAAA;AAAA,YAAA,GAAA,EAAA,GAAA;AAAA,YAAA,GAAA,EAAA,GAAA;AAAA,YAAA,QAAA,EAAA;AAAA,WAAA;AACA,eAAA,SAAA,GAAA,CAAA,GAAA,EAAA,GAAA,CAAA;AAEA,cAAA,GAAA,GAAA;AACA,YAAA,UAAA,YAAA,GAAA,CAAA,OAAA,CAAA,CAAA,CAAA,eAAA,GAAA,CAAA,OAAA,CAAA,CAAA,CAAA,CADA;AAEA,YAAA,OAAA,EAAA,KAAA,EAAA,CAAA,SAAA,CAFA;AAGA,YAAA,GAAA,EAAA,GAHA;AAIA,YAAA,GAAA,EAAA,GAJA;AAKA,YAAA,GAAA,EAAA,CALA;AAMA,YAAA,QAAA,EAAA,CANA;AAOA,YAAA,cAAA,EAAA;AAPA,WAAA;AAUA,eAAA,YAAA,GAAA,GAAA;AACA,eAAA,mBAAA;AACA,SAhBA,MAgBA;AACA,UAAA,KAAA,CAAA,gCAAA,CAAA;AACA;AACA,OAvBA,MAuBA;AACA,QAAA,KAAA,CAAA,oCAAA,CAAA;AACA;AACA;AAjIA,GA3DA;AA8LA,EAAA,UAAA,EAAA;AAAA,IAAA,IAAA,EAAA,IAAA;AAAA,IAAA,UAAA,EAAA,UAAA;AAAA,IAAA,OAAA,EAAA,OAAA;AAAA,IAAA,OAAA,EAAA,OAAA;AAAA,IAAA,QAAA,EAAA,QAAA;AAAA,IAAA,YAAA,EAAA;AAAA;AA9LA,CAAA","sourcesContent":["// Stellarium Web - Copyright (c) 2022 - Stellarium Labs SRL\n//\n// This program is licensed under the terms of the GNU AGPL v3, or\n// alternatively under a commercial licence.\n//\n// The terms of the AGPL v3 license can be found in the main directory of this\n// repository.\n\n<template>\n  <div>\n    <v-row justify=\"space-around\">\n      <v-col cols=\"4\" v-if=\"doShowMyLocation\">\n        <v-list two-line subheader>\n          <v-subheader>{{ $t('My Locations') }}</v-subheader>\n          <v-list-item href=\"javascript:;\" v-for=\"item in knownLocations\" v-bind:key=\"item.id\" @click.native.stop=\"selectKnownLocation(item)\" :style=\"(item && knownLocationMode && selectedKnownLocation && item.id === selectedKnownLocation.id) ? 'background-color: #455a64' : ''\">\n            <v-list-item-icon>\n              <v-icon>mdi-map-marker</v-icon>\n            </v-list-item-icon>\n            <v-list-item-content>\n              <v-list-item-title>{{ item.short_name }}</v-list-item-title>\n              <v-list-item-subtitle>{{ item.country }}</v-list-item-subtitle>\n            </v-list-item-content>\n          </v-list-item>\n        </v-list>\n      </v-col>\n      <v-col cols=\"doShowMyLocation ? 8 : 12\" >\n        <v-card class=\"blue-grey darken-2 white--text\">\n          <v-card-title primary-title>\n            <v-container fluid>\n              <v-row>\n                <v-col>\n                  <div>\n                    <div class=\"text-h5\" style=\"overflow: hidden; white-space: nowrap; text-overflow: ellipsis;\">{{ locationForDetail ? locationForDetail.short_name + ', ' + locationForDetail.country :  '-' }}</div>\n                    <v-btn @click.native.stop=\"useLocation()\" style=\"position: absolute; right: 20px\"><v-icon>mdi-chevron-right</v-icon> {{ $t('Use this location') }}</v-btn>\n                    <div class=\"grey--text text-subtitle-2\" v-if=\"locationForDetail.street_address\">{{ locationForDetail ? (locationForDetail.street_address ? locationForDetail.street_address : $t('Unknown Address')) : '-' }}</div>\n                    <div class=\"grey--text text-subtitle-2\">{{ locationForDetail ? locationForDetail.lat.toFixed(5) + ' ' + locationForDetail.lng.toFixed(5) : '-' }}</div>\n                  </div>\n                </v-col>\n              </v-row>\n            </v-container>\n          </v-card-title>\n          <div style=\"height: 375px\">\n              <!-- <v-btn light fab class=\"mx-0 pa-0\" @click.native.stop=\"centerOnRealPosition()\" style=\"position: absolute; z-index: 10000; bottom: 16px; right: 12px;\">\n                <v-icon>mdi-crosshairs-gps</v-icon>\n              </v-btn> -->\n            <l-map class=\"black--text\" ref=\"myMap\" :center=\"mapCenter\" :zoom=\"10\" style=\"width: 100%; height: 375px;\" :options=\"{zoomControl: false}\">\n              <l-control-zoom position=\"topright\"></l-control-zoom>\n              <l-tile-layer :url=\"url\" attribution='&copy; <a target=\"_blank\" rel=\"noopener\" href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'></l-tile-layer>\n              <l-marker :key=\"loc.id\"\n                  v-for=\"loc in knownLocations\"\n                  :lat-lng=\"[ loc.lat, loc.lng ]\"\n                  :clickable=\"true\"\n                  :opacity=\"(!pickLocationMode && selectedKnownLocation && selectedKnownLocation === loc ? 1.0 : 0.25)\"\n                  @click=\"selectKnownLocation(loc)\"\n                  :draggable=\"!pickLocationMode && selectedKnownLocation && selectedKnownLocation === loc\" @dragend=\"dragEnd\"\n                ></l-marker>\n              <l-circle v-if=\"startLocation\"\n                :lat-lng=\"[ startLocation.lat, startLocation.lng ]\"\n                :radius=\"startLocation.accuracy\"\n                :options=\"{\n                  strokeColor: '#0000FF',\n                  strokeOpacity: 0.5,\n                  strokeWeight: 1,\n                  fillColor: '#0000FF',\n                  fillOpacity: 0.08}\"></l-circle>\n              <l-marker v-if=\"pickLocationMode && pickLocation\" :lat-lng=\"[ pickLocation.lat, pickLocation.lng ]\"\n                :draggable=\"true\" @dragend=\"dragEnd\"><l-tooltip><div class=\"black--text\">Drag to adjust</div></l-tooltip></l-marker>\n            </l-map>\n          </div>\n        </v-card>\n      </v-col>\n    </v-row>\n  </div>\n</template>\n\n<script>\nimport swh from '@/assets/sw_helpers.js'\nimport { LMap, LTileLayer, LMarker, LCircle, LTooltip, LControlZoom } from 'vue2-leaflet'\nimport { L } from 'leaflet-control-geocoder/dist/Control.Geocoder.js'\n\nexport default {\n  data: function () {\n    return {\n      mode: 'pick',\n      pickLocation: undefined,\n      selectedKnownLocation: undefined,\n      mapCenter: [43.6, 1.4333],\n      url: 'http://localhost:8080/tiles/{z}/{x}/{y}.png',\n      offlineUrl: '/static/map-tiles/{z}/{x}/{y}.png'\n    }\n  },\n  props: ['showMyLocation', 'knownLocations', 'startLocation', 'realLocation'],\n  computed: {\n    doShowMyLocation: function () {\n      return this.showMyLocation === undefined ? false : this.showMyLocation\n    },\n    pickLocationMode: function () {\n      return this.mode === 'pick'\n    },\n    knownLocationMode: function () {\n      return this.mode === 'known'\n    },\n    locationForDetail: function () {\n      if (this.pickLocationMode && this.pickLocation === undefined) {\n        return this.startLocation\n      }\n      return this.pickLocationMode ? this.pickLocation : this.selectedKnownLocation\n    }\n  },\n  watch: {\n    startLocation: function () {\n      this.setPickLocation(this.startLocation)\n    }\n  },\n  mounted: function () {\n    const that = this\n    this.setPickLocation(this.startLocation)\n    \n    // 检测离线瓦片服务器是否可用\n    this.checkTileServerAvailability()\n    \n    this.$nextTick(() => {\n      const map = this.$refs.myMap.mapObject\n      map._onResize()\n\n      // 注释掉在线地理编码服务，改为离线搜索\n      // var geocoder = new L.Control.Geocoder({\n      //   defaultMarkGeocode: false,\n      //   position: 'topleft',\n      //   collapsed: false\n      // }).on('markgeocode', function (e) {\n      //   // ... 原有代码\n      // })\n      // geocoder.addTo(map)\n      \n      // 添加离线搜索控件\n      this.addOfflineSearchControl(map)\n    })\n  },\n  methods: {\n    selectKnownLocation: function (loc) {\n      this.selectedKnownLocation = loc\n      this.setKnownLocationMode()\n      this.mapCenter = [loc.lat, loc.lng]\n    },\n    useLocation: function () {\n      this.$emit('locationSelected', this.locationForDetail)\n      this.$emit('resetLocation', this.locationForDetail.lat, this.locationForDetail.lng)\n    },\n    setPickLocationMode: function () {\n      this.mode = 'pick'\n    },\n    setKnownLocationMode: function () {\n      this.mode = 'known'\n    },\n    setPickLocation: function (loc) {\n      if (loc.accuracy < 100) {\n        for (const l of this.knownLocations) {\n          const d = swh.getDistanceFromLatLonInM(l.lat, l.lng, loc.lat, loc.lng)\n          if (d < 100) {\n            this.selectKnownLocation(l)\n            return\n          }\n        }\n      }\n      var pos = { lat: loc.lat, lng: loc.lng }\n      this.mapCenter = [pos.lat, pos.lng]\n      this.pickLocation = loc\n      this.setPickLocationMode()\n    },\n    // Called when the user clicks on the small cross button\n    centerOnRealPosition: function () {\n      this.setPickLocation(this.realLocation)\n    },\n    dragEnd: function (event) {\n      var that = this\n      var pos = { lat: event.target._latlng.lat, lng: event.target._latlng.lng, accuracy: 0 }\n      console.log('dragEnd pos: ' + pos.lat + ',' +pos.lng)\n      swh.geoCodePosition(pos, that).then((p) => { that.pickLocation = p; that.setPickLocationMode() })\n      this.$emit('resetLocation', pos.lat, pos.lng)\n    },\n    checkTileServerAvailability: function () {\n      const that = this\n      // 测试本地瓦片服务器是否可用\n      const testTileUrl = this.url.replace('{z}', '1').replace('{x}', '0').replace('{y}', '0')\n      \n      fetch(testTileUrl, { method: 'HEAD', timeout: 3000 })\n        .then(response => {\n          if (response.ok) {\n            console.log('离线瓦片服务器可用')\n            // 使用本地瓦片服务器\n          } else {\n            throw new Error('服务器不可用')\n          }\n        })\n        .catch(error => {\n          console.log('切换到静态瓦片文件:', error)\n          // 切换到静态瓦片文件\n          that.url = that.offlineUrl\n        })\n    },\n    addOfflineSearchControl: function (map) {\n      const that = this\n      \n      // 创建离线搜索控件\n      const searchControl = L.Control.extend({\n        options: {\n          position: 'topleft'\n        },\n        onAdd: function(map) {\n          const container = L.DomUtil.create('div', 'leaflet-control-geocoder leaflet-bar')\n          container.innerHTML = `\n            <div class=\"leaflet-control-geocoder-form\">\n              <input type=\"text\" placeholder=\"输入坐标 (lat,lng)\" />\n              <button type=\"button\">搜索</button>\n            </div>\n          `\n          \n          const input = container.querySelector('input')\n          const button = container.querySelector('button')\n          \n          button.onclick = function() {\n            that.handleOfflineSearch(input.value)\n          }\n          \n          input.onkeypress = function(e) {\n            if (e.key === 'Enter') {\n              that.handleOfflineSearch(input.value)\n            }\n          }\n          \n          return container\n        }\n      })\n      \n      new searchControl().addTo(map)\n    },\n    handleOfflineSearch: function (query) {\n      // 解析坐标输入 (支持多种格式)\n      const coordPattern = /(-?\\d+\\.?\\d*)[,\\s]+(-?\\d+\\.?\\d*)/\n      const match = query.match(coordPattern)\n      \n      if (match) {\n        const lat = parseFloat(match[1])\n        const lng = parseFloat(match[2])\n        \n        if (lat >= -90 && lat <= 90 && lng >= -180 && lng <= 180) {\n          const pos = { lat: lat, lng: lng, accuracy: 0 }\n          this.mapCenter = [lat, lng]\n          \n          const loc = {\n            short_name: `${lat.toFixed(3)}, ${lng.toFixed(3)}`,\n            country: this.$t('Unknown'),\n            lng: lng,\n            lat: lat,\n            alt: 0,\n            accuracy: 0,\n            street_address: ''\n          }\n          \n          this.pickLocation = loc\n          this.setPickLocationMode()\n        } else {\n          alert('坐标范围错误：纬度(-90到90)，经度(-180到180)')\n        }\n      } else {\n        alert('请输入有效的坐标格式：纬度,经度 (例如: 40.1, 116.2)')\n      }\n    }\n  },\n  components: { LMap, LTileLayer, LMarker, LCircle, LTooltip, LControlZoom }\n}\n</script>\n\n<style>\n.leaflet-control-geocoder-form input {\n  caret-color:#000 !important;\n  color: #000 !important;\n}\n</style>\n"],"sourceRoot":"src/components"}]}