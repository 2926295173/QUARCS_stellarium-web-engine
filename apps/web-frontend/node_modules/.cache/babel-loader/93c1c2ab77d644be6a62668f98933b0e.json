{"remainingRequest":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/thread-loader/dist/cjs.js!/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/babel-loader/lib/index.js!/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/src/components/AutomaticPolarAlignmentCalibration.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/src/components/AutomaticPolarAlignmentCalibration.vue","mtime":1756885034407},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1756885033541},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/thread-loader/dist/cjs.js","mtime":1756885034172},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/babel-loader/lib/index.js","mtime":1756885033526},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1756885033541},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/vue-loader/lib/index.js","mtime":1756885034208}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["AutomaticPolarAlignmentCalibration.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <!-- 最小化状态 -->\n  <div v-if=\"visible && isMinimized\" class=\"polar-alignment-minimized\" \n       :class=\"{ 'dragging': isDraggingState }\"\n       :style=\"{ left: position.x + 'px', top: position.y + 'px' }\">\n    <div class=\"minimized-header\">\n      <div class=\"minimized-drag-area\" @mousedown=\"startDrag\" @touchstart=\"startDrag\">\n        <v-icon class=\"minimized-icon\">mdi-compass-rose</v-icon>\n        <span class=\"minimized-title\">{{ $t('Polar Alignment') }}</span>\n      </div>\n      <div class=\"minimized-controls\">\n        <button class=\"minimized-btn\" @click=\"toggleMinimize\" :title=\"$t('Expand')\">\n          <v-icon>mdi-chevron-up</v-icon>\n        </button>\n      </div>\n    </div>\n    <div class=\"minimized-status\">\n      <div class=\"status-indicator\" :class=\"{ 'online': isConnected }\"></div>\n              <span class=\"status-text\">{{ isConnected ? $t('Connected') : $t('Disconnected') }}</span>\n    </div>\n  </div>\n\n  <!-- 完整界面 -->\n  <div v-else-if=\"visible\" class=\"polar-alignment-widget\" \n       :class=\"{ 'collapsed': isCollapsed, 'dragging': isDraggingState }\"\n       :style=\"{ left: position.x + 'px', top: position.y + 'px' }\">\n    \n    <!-- 拖动手柄 -->\n    <div class=\"widget-header\">\n      <div class=\"header-drag-area\" @mousedown=\"startDrag\" @touchstart=\"startDrag\">\n        <div class=\"header-left\">\n          <v-icon class=\"header-icon\">mdi-compass-rose</v-icon>\n          <span class=\"header-title\">{{ $t('Polar Alignment Calibration') }}</span>\n          <div class=\"connection-indicator\">\n            <div class=\"status-dot\" :class=\"{ 'online': isConnected }\"></div>\n          </div>\n        </div>\n      </div>\n      \n      <div class=\"header-controls\">\n        <button class=\"header-btn\" @click=\"toggleCollapse\" :title=\"isCollapsed ? $t('Expand') : $t('Collapse')\">\n          <v-icon>{{ isCollapsed ? 'mdi-chevron-down' : 'mdi-chevron-up' }}</v-icon>\n        </button>\n        <button class=\"header-btn\" @click=\"toggleMinimize\" :title=\"$t('Minimize')\">\n          <v-icon>mdi-minus</v-icon>\n        </button>\n      </div>\n    </div>\n\n    <!-- 收缩状态内容 -->\n    <div v-if=\"isCollapsed\" class=\"widget-content collapsed\" :class=\"{ 'dragging': isDraggingState }\">\n      <div class=\"collapsed-info\">\n        <div class=\"collapsed-progress\">\n          <div class=\"progress-circle\" :style=\"{ '--progress': progressPercentage + '%' }\">\n            <span class=\"progress-text\">{{ Math.round(progressPercentage) }}%</span>\n          </div>\n        </div>\n        <div class=\"collapsed-status\">\n          <div class=\"status-item\">\n            <span class=\"status-label\">方位角:</span>\n            <span class=\"status-value\" :class=\"{ 'needs-adjustment': needsAzimuthAdjustment }\">\n              {{ formatAdjustmentValue(adjustment.azimuth) }}\n            </span>\n          </div>\n          <div class=\"status-item\">\n            <span class=\"status-label\">高度角:</span>\n            <span class=\"status-value\" :class=\"{ 'needs-adjustment': needsAltitudeAdjustment }\">\n              {{ formatAdjustmentValue(adjustment.altitude) }}\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 展开状态内容 -->\n    <div v-else class=\"widget-content expanded\" :class=\"{ 'dragging': isDraggingState }\">\n      <div class=\"content-sections\">\n        <!-- 校准步骤进度条 -->\n        <div class=\"calibration-progress\">\n          <div class=\"progress-header\">\n            <div class=\"progress-title\">{{ $t('Calibration Progress') }}</div>\n            <div v-if=\"progressPercentage >= 75 && progressPercentage < 95\" class=\"calibration-loop-info\">\n              {{ $t('Calibration Round', [calibrationLoopCount]) }}\n            </div>\n          </div>\n          <div class=\"progress-bar\">\n            <div class=\"progress-fill\" :style=\"{ width: progressPercentage + '%' }\"></div>\n            <div class=\"progress-nodes\">\n              <!-- 初始化节点 -->\n              <div class=\"progress-node\" :class=\"getStepClass(0)\">\n                <div class=\"node-circle\">\n                  <v-icon v-if=\"progressPercentage >= 15\">mdi-check</v-icon>\n                  <v-icon v-else>mdi-cog</v-icon>\n                </div>\n                <div class=\"node-label\">{{ $t('Initialization') }}</div>\n              </div>\n              \n              <!-- 第一次校准节点 -->\n              <div class=\"progress-node\" :class=\"getStepClass(1)\">\n                <div class=\"node-circle\">\n                  <v-icon v-if=\"progressPercentage >= 25\">mdi-check</v-icon>\n                  <span v-else>1</span>\n                </div>\n                <div class=\"node-label\">{{ $t('First Calibration') }}</div>\n              </div>\n              \n              <!-- 第二次校准节点 -->\n              <div class=\"progress-node\" :class=\"getStepClass(2)\">\n                <div class=\"node-circle\">\n                  <v-icon v-if=\"progressPercentage >= 50\">mdi-check</v-icon>\n                  <span v-else>2</span>\n                </div>\n                <div class=\"node-label\">{{ $t('Second Calibration') }}</div>\n              </div>\n              \n              <!-- 第三次校准节点 -->\n              <div class=\"progress-node\" :class=\"getStepClass(3)\">\n                <div class=\"node-circle\">\n                  <v-icon v-if=\"progressPercentage >= 75\">mdi-check</v-icon>\n                  <span v-else>3</span>\n                </div>\n                <div class=\"node-label\">{{ $t('Third Calibration') }}</div>\n              </div>\n              \n              <!-- 校准调整节点 -->\n              <div class=\"progress-node calibration-node\" :class=\"{ 'active': progressPercentage >= 75, 'looping': progressPercentage >= 75 && progressPercentage < 95 }\">\n                <div class=\"node-circle\">\n                  <v-icon v-if=\"progressPercentage >= 95\">mdi-check</v-icon>\n                  <v-icon v-else-if=\"progressPercentage >= 75\">mdi-refresh</v-icon>\n                  <v-icon v-else>mdi-tune</v-icon>\n                </div>\n                <div class=\"node-label\">{{ $t('Calibration') }}</div>\n              </div>\n              \n              <!-- 最终验证节点 -->\n              <div class=\"progress-node verification-node\" :class=\"{ 'active': progressPercentage >= 95 }\">\n                <div class=\"node-circle\">\n                  <v-icon v-if=\"isPolarAligned\">mdi-check</v-icon>\n                  <v-icon v-else>mdi-target</v-icon>\n                </div>\n                <div class=\"node-label\">{{ $t('Verification') }}</div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- 日志显示 -->\n        <div class=\"log-section\">\n          <div class=\"log-display\">\n            <div v-if=\"displayLogs.length > 0\" class=\"latest-log\" :class=\"displayLogs[0].level\">\n              <div class=\"log-timestamp\">{{ formatTime(displayLogs[0].timestamp) }}</div>\n              <div class=\"log-message\">{{ displayLogs[0].message }}</div>\n            </div>\n            <div v-else class=\"log-empty\">\n              {{ $t('No activity logs') }}\n            </div>\n          </div>\n        </div>\n        \n        <!-- 位置信息 -->\n        <div class=\"position-section\">\n          <div class=\"position-grid\">\n            <div class=\"position-cell current\">\n              <div class=\"cell-label\">{{ $t('current RA') }}</div>\n              <div class=\"cell-value\">{{ currentPosition.ra }}</div>\n            </div>\n            <div class=\"position-cell current\">\n              <div class=\"cell-label\">{{ $t('current DEC') }}</div>\n              <div class=\"cell-value\">{{ currentPosition.dec }}</div>\n            </div>\n            <div class=\"position-cell target\">\n              <div class=\"cell-label\">{{ $t('target RA') }}</div>\n              <div class=\"cell-value\">{{ targetPosition.ra }}</div>\n            </div>\n            <div class=\"position-cell target\">\n              <div class=\"cell-label\">{{ $t('target DEC') }}</div>\n              <div class=\"cell-value\">{{ targetPosition.dec }}</div>\n            </div>\n          </div>\n        </div>\n        \n        <!-- 调整指导 -->\n        <div class=\"adjustment-section\">\n          <div class=\"adjustment-instructions\">\n            <div class=\"adjustment-item\" :class=\"{ 'active': needsAzimuthAdjustment }\">\n              <div class=\"adjustment-icon\">\n                <v-icon>mdi-compass</v-icon>\n              </div>\n              <div class=\"adjustment-details\">\n                <div class=\"adjustment-header\">\n                  <span class=\"adjustment-type\">{{ $t('Azimuth') }}</span>\n                  <span class=\"adjustment-value\">{{ formatAdjustmentValue(adjustment.azimuth) }}</span>\n                </div>\n                <div class=\"adjustment-action\">\n                  {{ needsAzimuthAdjustment ? getAzimuthAction(adjustment.azimuth) : $t('No adjustment needed') }}\n                </div>\n\n              </div>\n            </div>\n            \n            <div class=\"adjustment-item\" :class=\"{ 'active': needsAltitudeAdjustment }\">\n              <div class=\"adjustment-icon\">\n                <v-icon>mdi-compass</v-icon>\n              </div>\n              <div class=\"adjustment-details\">\n                <div class=\"adjustment-header\">\n                  <span class=\"adjustment-type\">{{ $t('Altitude') }}</span>\n                  <span class=\"adjustment-value\">{{ formatAdjustmentValue(adjustment.altitude) }}</span>\n                </div>\n                <div class=\"adjustment-action\">\n                  {{ needsAltitudeAdjustment ? getAltitudeAction(adjustment.altitude) : $t('No adjustment needed') }}\n                </div>\n\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- 控制按钮 -->\n        <div class=\"control-section\">\n          <div class=\"action-buttons\">\n            <button class=\"action-btn primary\" @click=\"startAutoCalibration\" :disabled=\"!canAutoCalibrate\">\n              <v-icon v-if=\"!isCalibrationRunning\">mdi-play-circle</v-icon>\n              <v-icon v-else>mdi-stop-circle</v-icon>\n              <span>{{ isCalibrationRunning ? $t('Stop Calibration') : $t('Start Auto Calibration') }}</span>\n            </button>\n\n\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n  \n  <script>\n  export default {\n    name: 'AutomaticPolarAlignmentCalibration',\n    \n    props: {\n      visible: {\n        type: Boolean,\n        default: false\n      },\n      autoStart: {\n        type: Boolean,\n        default: false\n      }\n    },\n    \n    data() {\n      return {\n        // 连接状态\n        isConnected: false,\n        \n        // 位置信息\n        currentPosition: {\n          ra: '00h 00m 00s',\n          dec: '+00° 00\\' 00\"'\n        },\n        targetPosition: {\n          ra: '00h 00m 00s',\n          dec: '+00° 00\\' 00\"'\n        },\n        previousPosition: {\n          ra: '00h 00m 00s',\n          dec: '+00° 00\\' 00\"'\n        },\n        \n        // 校准数据\n        isCalibrationComplete: false,\n        isPolarAligned: false,\n        \n        // 调整信息\n        adjustment: {\n          azimuth: 0.0,\n          altitude: 0.0\n        },\n        \n        // 日志系统\n        logs: [],\n        \n        // 校准运行状态\n        isCalibrationRunning: false,\n        \n        // 视场数据\n        fieldData: null,\n        \n        // 当前进度\n        currentProgress: 0,\n        \n        // === 新增：界面控制状态 ===\n        // 拖动状态\n        isDragging: false,\n        dragOffset: { x: 0, y: 0 },\n        \n        // 控件位置\n        position: { x: 50, y: 50 },\n        \n        // 界面状态\n        isMinimized: false,\n        isCollapsed: false,\n        \n        // === 新增：性能优化 ===\n        // 缓存尺寸计算结果\n        cachedDimensions: {\n          width: 350,\n          height: 400\n        },\n        // 拖动状态标记\n        isDraggingState: false,\n        \n        // 极轴偏移量\n        polarAxisOffset: {\n          azimuth: 0,\n          altitude: 0\n        },\n        \n        // 校准循环计数\n        calibrationLoopCount: 0,\n        lastCalibrationProgress: 0,\n        \n        // 校准阶段状态\n        calibrationPhase: 'initial', // 'initial', 'collecting', 'adjusting', 'verifying'\n        calibrationPoints: [], // 存储三个校准点的坐标\n        targetPoint: null, // 存储目标点坐标\n      }\n    },\n    \n    computed: {\n      // 显示的日志\n      displayLogs() {\n        // 返回最近的10条日志，按时间倒序（用于显示最新一条）\n        return this.logs.slice(-10).reverse()\n      },\n      \n      // 校准进度百分比\n      progressPercentage() {\n        // 使用从后端传入的进度\n        return this.currentProgress\n      },\n      \n      // 是否可以自动校准\n      canAutoCalibrate() {\n        return this.isConnected\n      },\n      \n      // 是否需要方位角调整\n      needsAzimuthAdjustment() {\n        const value = this.adjustment.azimuth\n        if (value === null || value === undefined || isNaN(value)) return false\n        return Math.abs(value) > 0.5\n      },\n      \n      // 是否需要高度角调整\n      needsAltitudeAdjustment() {\n        const value = this.adjustment.altitude\n        if (value === null || value === undefined || isNaN(value)) return false\n        return Math.abs(value) > 0.5\n      }\n    },\n    \n    watch: {\n      visible(newVal) {\n        if (newVal && this.autoStart) {\n          this.startAutoCalibration()\n        }\n      }\n    },\n    \n    mounted() {\n      // 实现组件初始化逻辑\n      this.initialize()\n      \n      // 初始化缓存的尺寸信息\n      this.updateCachedDimensions()\n      \n      // 监听信号总线事件\n      this.$bus.$on('showPolarAlignment', this.showInterface)\n      this.$bus.$on('hidePolarAlignment', this.hideInterface)\n      \n      // 监听赤道仪连接状态\n      this.$bus.$on('MountConnected', this.updateMountConnection)\n\n      // 接收状态更新\n      this.$bus.$on('PolarAlignmentState', this.updatePolarAlignmentState)\n      \n      // 监听视场数据更新\n      this.$bus.$on('FieldDataUpdate', this.updateFieldData)\n\n      // 监听卡片信息更新\n      this.$bus.$on('updateCardInfo', this.updateCardInfo)\n    },\n    \n    beforeDestroy() {\n      // 移除信号总线监听\n      this.$bus.$off('showPolarAlignment', this.showInterface)\n      this.$bus.$off('hidePolarAlignment', this.hideInterface)\n      this.$bus.$off('MountConnected', this.updateMountConnection)\n      this.$bus.$off('PolarAlignmentState', this.updatePolarAlignmentState)\n      this.$bus.$off('FieldDataUpdate', this.updateFieldData)\n      this.$bus.$off('updateCardInfo', this.updateCardInfo)\n      \n      // 清理拖动事件监听\n      document.removeEventListener('mousemove', this.onDrag)\n      document.removeEventListener('mouseup', this.stopDrag)\n      \n      // 实现组件销毁逻辑\n      this.cleanup()\n    },\n    \n    methods: {\n      // === 信号总线事件处理 ===\n      showInterface() {\n        this.$emit('update:visible', true)\n      },\n      \n      hideInterface() {\n        this.$emit('update:visible', false)\n      },\n      \n      updateMountConnection(status) {\n        this.isConnected = status === 1\n        const statusText = this.isConnected ? this.$t('Connected') : this.$t('Disconnected')\n        this.addLog(this.$t('Mount Connection Status', [statusText]), this.isConnected ? 'success' : 'warning')\n      },\n      \n      // === 初始化和清理 ===\n      initialize() {\n        this.addLog(this.$t('Polar Alignment Component Initialized'), 'info')\n      },\n      \n      cleanup() {\n        this.addLog(this.$t('Polar Alignment Component Cleaned'), 'info')\n      },\n      \n      // === 拖动控制方法 ===\n      startDrag(event) {\n        if (event.target.closest('.header-controls, .minimized-controls, .header-btn, .minimized-btn')) {\n          return\n        }\n        \n        this.isDragging = true\n        this.isDraggingState = true\n        \n        // 添加dragging类，移除过渡动画\n        this.$el.classList.add('dragging')\n        \n        const rect = event.currentTarget.getBoundingClientRect()\n        const clientX = event.clientX || event.touches?.[0]?.clientX || 0\n        const clientY = event.clientY || event.touches?.[0]?.clientY || 0\n        \n        this.dragOffset = {\n          x: clientX - rect.left,\n          y: clientY - rect.top\n        }\n        \n        // 预计算并缓存尺寸，避免拖动时重复计算\n        this.updateCachedDimensions()\n        \n        // 优化触摸事件处理\n        if (event.type === 'touchstart') {\n          document.addEventListener('touchmove', this.onDrag, { passive: false })\n          document.addEventListener('touchend', this.stopDrag, { passive: false })\n        } else {\n          document.addEventListener('mousemove', this.onDrag)\n          document.addEventListener('mouseup', this.stopDrag)\n        }\n      },\n      \n      onDrag(event) {\n        if (!this.isDragging) return\n        \n        // 阻止默认行为，提高触摸响应性\n        if (event.type === 'touchmove') {\n          event.preventDefault()\n        }\n        \n        // 使用requestAnimationFrame优化拖动性能\n        requestAnimationFrame(() => {\n          const clientX = event.clientX || event.touches?.[0]?.clientX || 0\n          const clientY = event.clientY || event.touches?.[0]?.clientY || 0\n          \n          const newX = clientX - this.dragOffset.x\n          const newY = clientY - this.dragOffset.y\n          \n          // 使用缓存的尺寸，避免重复计算\n          const maxX = window.innerWidth - this.cachedDimensions.width\n          const maxY = window.innerHeight - this.cachedDimensions.height\n          \n          this.position = {\n            x: Math.max(0, Math.min(newX, maxX)),\n            y: Math.max(0, Math.min(newY, maxY))\n          }\n        })\n      },\n      \n      stopDrag() {\n        this.isDragging = false\n        this.isDraggingState = false\n        \n        // 移除dragging类，恢复过渡动画\n        this.$el.classList.remove('dragging')\n        \n        // 清理所有事件监听器\n        document.removeEventListener('mousemove', this.onDrag)\n        document.removeEventListener('mouseup', this.stopDrag)\n        document.removeEventListener('touchmove', this.onDrag)\n        document.removeEventListener('touchend', this.stopDrag)\n      },\n      \n      // 新增：更新缓存的尺寸信息\n      updateCachedDimensions() {\n        if (this.isMinimized) {\n          this.cachedDimensions = { width: 250, height: 80 }\n        } else if (this.isCollapsed) {\n          this.cachedDimensions = { width: 300, height: 120 }\n        } else {\n          // 展开状态，使用基础尺寸\n          this.cachedDimensions = { width: 350, height: 400 }\n        }\n      },\n      \n      // 获取组件高度（优化版本）\n      getComponentHeight() {\n        // 如果正在拖动，使用缓存的尺寸\n        if (this.isDraggingState) {\n          return this.cachedDimensions.height\n        }\n        \n        // 正常状态下的计算\n        if (this.isMinimized) {\n          return 80 // 最小化状态高度\n        } else if (this.isCollapsed) {\n          return 120 // 收缩状态高度\n        } else {\n          // 展开状态，根据内容自适应\n          const baseHeight = 400 // 基础高度\n          const logHeight = this.displayLogs.length > 0 ? 60 : 40\n          const adjustmentHeight = this.needsAzimuthAdjustment || this.needsAltitudeAdjustment ? 120 : 80\n          return Math.min(baseHeight + logHeight + adjustmentHeight, window.innerHeight * 0.8)\n        }\n      },\n      \n      // === 界面状态控制方法 ===\n      toggleMinimize() {\n        this.isMinimized = !this.isMinimized\n        this.isCollapsed = false\n        // 更新缓存的尺寸信息\n        this.updateCachedDimensions()\n        this.addLog(this.isMinimized ? this.$t('Interface Minimized') : this.$t('Interface Expanded'), 'info')\n      },\n      \n      toggleCollapse() {\n        this.isCollapsed = !this.isCollapsed\n        // 更新缓存的尺寸信息\n        this.updateCachedDimensions()\n        this.addLog(this.isCollapsed ? this.$t('Interface Collapsed') : this.$t('Interface Expanded'), 'info')\n      },\n      \n      resetCalibration() {\n        this.calibrationPoints = []\n        this.isCalibrationComplete = false\n        this.isPolarAligned = false\n        this.fieldData = null\n        this.calibrationLoopCount = 0\n        this.lastCalibrationProgress = 0\n        this.calibrationPhase = 'initial'\n        this.targetPoint = null\n        this.addLog(this.$t('Calibration Data Reset'), 'info')\n        this.$bus.$emit('AppSendMessage', 'Vue_Command', 'ResetAutoPolarAlignment')\n        this.$bus.$emit('ClearCalibrationPoints')\n        this.$bus.$emit('ClearStatusTextFromStarMap')\n      },\n      \n      restoreCalibration() {\n        this.addLog(this.$t('Calibration Data Restored'), 'success')\n        this.$bus.$emit('AppSendMessage', 'Vue_Command', 'RestoreAutoPolarAlignment')\n      },\n      \n      startAutoCalibration() {\n        if (!this.isConnected) {\n          this.addLog(this.$t('Error: Mount Not Connected'), 'error')\n          return\n        }\n        if (this.isCalibrationRunning) {\n          this.stopAutoCalibration()\n          return\n        }\n        this.isCalibrationRunning = true\n        this.resetCalibration()\n        this.addLog(this.$t('Starting Auto Calibration'), 'info')\n        this.$bus.$emit('AppSendMessage', 'Vue_Command', 'StartAutoPolarAlignment')\n      },\n      stopAutoCalibration() {\n        this.isCalibrationRunning = false\n        this.addLog(this.$t('Auto Calibration Stopped'), 'warning')\n        this.$bus.$emit('AppSendMessage', 'Vue_Command', 'StopAutoPolarAlignment')\n      },\n      \n      // === 视场数据处理方法 ===\n      updateFieldData(data) {\n        if (data && Array.isArray(data) && data.length >= 8) {\n          const isValidData = data.every(val => typeof val === 'number' && !isNaN(val))\n          if (!isValidData) {\n            this.addLog(this.$t('Warning: Invalid Field Data Received'), 'warning')\n            return\n          }\n\n          this.fieldData = {\n            ra: data[0],\n            dec: data[1],\n            maxra: data[2],\n            minra: data[3],\n            maxdec: data[4],\n            mindec: data[5],\n            targetra: data[6],\n            targetdec: data[7]\n          }\n          \n          // 保存上一次位置（在更新当前位置之前）\n          if (this.currentPosition.ra !== '00h 00m 00s') {\n            this.previousPosition = { ...this.currentPosition }\n          }\n          \n          // 更新当前位置\n          this.currentPosition = {\n            ra: this.formatCoordinate(data[0], 'ra'),\n            dec: this.formatCoordinate(data[1], 'dec')\n          }\n          \n          if (data[6] === -1 && data[7] === -1) {\n            // 校准点收集阶段\n            this.calibrationPhase = 'collecting'\n            const pointNumber = this.calibrationPoints.length + 1\n            \n            // 添加调试信息\n            this.addLog(`准备收集校准点${pointNumber}，当前已有${this.calibrationPoints.length}个点`, 'info')\n            \n            try {\n              this.drawCalibrationPointPolygon(data[0], data[1], pointNumber, this.fieldData)\n              this.addLog(this.$t('Calibration Point', [pointNumber, data[0].toFixed(4), data[1].toFixed(4)]), 'info')\n              \n              // 保存校准点\n              this.calibrationPoints.push({\n                ra: data[0],\n                dec: data[1],\n                index: pointNumber\n              })\n              \n              this.addLog(`校准点${pointNumber}已添加，现在总共有${this.calibrationPoints.length}个点`, 'info')\n              \n              // 如果收集了3个点，进入调整阶段\n              if (this.calibrationPoints.length === 3) {\n                this.calibrationPhase = 'adjusting'\n                this.addLog(this.$t('Three calibration points collected, entering adjustment phase'), 'success')\n              }\n            } catch (error) {\n              this.addLog(this.$t('Error processing calibration point', [error.message]), 'error')\n              console.error('处理校准点错误：', error)\n            }\n          } else if (data[6] !== -1 && data[7] !== -1) {\n            // 调整阶段：显示目标位置\n            this.calibrationPhase = 'adjusting'\n            this.targetPoint = { ra: data[6], dec: data[7] }\n            \n            try {\n              // 不清除校准点，保持校准点显示，同时显示调整信息\n              this.drawAdjustmentPoints(data[0], data[1], data[6], data[7], this.fieldData, false)\n              this.addLog(`调整模式：当前位置(${data[0].toFixed(4)}, ${data[1].toFixed(4)}) 目标位置(${data[6].toFixed(4)}, ${data[7].toFixed(4)})`, 'info')\n            } catch (error) {\n              this.addLog(this.$t('Error processing adjustment data', [error.message]), 'error')\n              console.error('处理调整数据错误：', error)\n            }\n          }\n        } else {\n          this.addLog(this.$t('Error: Invalid Field Data Format'), 'error')\n        }\n      },\n      \n      // 绘制校准点\n      drawCalibrationPointPolygon(ra, dec, pointNumber, fieldData) {\n        this.addLog(this.$t('Drawing Calibration Point', [pointNumber, ra, dec]), 'info')\n        \n        try {\n          const coordinates = this.calculateFieldCorners(ra, dec, fieldData)\n          this.addLog(this.$t('Calculated Field Corner Coordinates', [JSON.stringify(coordinates)]), 'info')\n          \n          // 验证坐标有效性\n          const validCoordinates = coordinates.every((coord, index) => {\n            const isValid = coord && typeof coord.ra === 'number' && typeof coord.dec === 'number' &&\n                          !isNaN(coord.ra) && !isNaN(coord.dec) && isFinite(coord.ra) && isFinite(coord.dec)\n            if (!isValid) {\n              this.addLog(this.$t('Warning: Invalid Coordinate Point', [index, JSON.stringify(coord)]), 'warning')\n            }\n            return isValid\n          })\n          \n          if (!validCoordinates) {\n            this.addLog(this.$t('Invalid Field Coordinates'), 'error')\n            return\n          }\n          \n          const color = {\n            stroke: \"#FFFFFF\",\n            strokeOpacity: 1,\n            fill: \"#FFFFFF\", \n            fillOpacity: 0.2\n          }\n          \n          // 添加文本标签\n          const label = `校准点${pointNumber}`\n          const labelColor = \"#FFFFFF\"\n          \n          this.addLog(this.$t('Sending Draw Calibration Event', [pointNumber]), 'info')\n          this.$bus.$emit('DrawCalibrationPointPolygon', coordinates, color, `Calibration_${pointNumber}`, label, labelColor)\n          \n        } catch (error) {\n          this.addLog(this.$t('Error Drawing Calibration Point', [error.message]), 'error')\n          console.error('绘制校准点错误：', error)\n        }\n      },\n      \n      // 清除所有校准点\n      clearCalibrationPoints() {\n        this.addLog(this.$t('Clearing All Calibration Points'), 'info')\n        this.$bus.$emit('ClearCalibrationPoints')\n        this.$bus.$emit('ClearStatusTextFromStarMap')\n      },\n      \n      /**\n       * 绘制极轴校准调整点\n       * 在星图上绘制当前位置、目标位置、校准点等关键位置标记\n       * @param {number} currentRa - 当前赤经位置\n       * @param {number} currentDec - 当前赤纬位置  \n       * @param {number} targetRa - 目标赤经位置\n       * @param {number} targetDec - 目标赤纬位置\n       * @param {object} fieldData - 视场数据（包含视场边界信息）\n       * @param {boolean} isTimerUpdate - 是否为定时器更新（用于区分手动更新和自动更新）\n       */\n      drawAdjustmentPoints(currentRa, currentDec, targetRa, targetDec, fieldData, isTimerUpdate = false) {\n        // 记录开始绘制调整点的日志\n        this.addLog(this.$t('Starting Draw Adjustment Points', [currentRa, currentDec, targetRa, targetDec]), 'info')\n        \n        try {\n          // 计算当前位置和目标位置的视场角点坐标\n          // 当前位置使用真实视场大小，目标点不需要视场（将绘制为圆）\n          const currentCoordinates = this.calculateFieldCorners(currentRa, currentDec, fieldData, false)\n          // 目标点不需要计算视场角点，将直接绘制为圆\n          \n          // 记录计算得到的坐标信息到日志\n          this.addLog(this.$t('Current Position Field Corners', [JSON.stringify(currentCoordinates)]), 'info')\n          this.addLog(`目标点坐标: RA=${targetRa}, DEC=${targetDec}`, 'info')\n          \n          // 验证当前位置坐标的有效性\n          // 检查每个坐标点是否包含有效的RA和DEC数值\n          const currentValid = currentCoordinates.every((coord, index) => {\n            const isValid = coord && typeof coord.ra === 'number' && typeof coord.dec === 'number' &&\n                          !isNaN(coord.ra) && !isNaN(coord.dec) && isFinite(coord.ra) && isFinite(coord.dec)\n            if (!isValid) {\n              // 如果发现无效坐标，记录警告日志\n              this.addLog(this.$t('Warning: Invalid Current Position Coordinate', [index, JSON.stringify(coord)]), 'warning')\n            }\n            return isValid\n          })\n          \n          // 验证目标位置坐标的有效性（目标点只需要验证中心坐标）\n          const targetValid = typeof targetRa === 'number' && typeof targetDec === 'number' &&\n                            !isNaN(targetRa) && !isNaN(targetDec) && isFinite(targetRa) && isFinite(targetDec)\n          \n          if (!targetValid) {\n            this.addLog(this.$t('Warning: Invalid Target Position Coordinate', [targetRa, targetDec]), 'warning')\n          }\n          \n          // 如果任一位置的坐标无效，则终止绘制\n          if (!currentValid || !targetValid) {\n            this.addLog(this.$t('Error: Invalid Adjustment Point Coordinates'), 'error')\n            return\n          }\n          \n          // 定义不同位置点的颜色方案\n          // 使用不同颜色来区分各种位置，提高可视化效果\n          const currentColor = {\n            stroke: \"#00BFFF\",        // 蓝色边框：当前位置\n            strokeOpacity: 1,         // 边框不透明度\n            fill: \"#00BFFF\",          // 蓝色填充：当前位置\n            fillOpacity: 0.3          // 填充不透明度（半透明）\n          }\n          \n          const targetColor = {\n            stroke: \"#FF8C00\",        // 橙色边框：目标位置\n            strokeOpacity: 1,         // 边框不透明度\n            fill: \"#FF8C00\",          // 橙色填充：目标位置\n            fillOpacity: 0.3          // 填充不透明度（半透明）\n          }\n          \n          const previousColor = {\n            stroke: \"#FFD700\",        // 黄色边框：上一次位置\n            strokeOpacity: 1,         // 边框不透明度\n            fill: \"#FFD700\",          // 黄色填充：上一次位置\n            fillOpacity: 0.2          // 填充不透明度（更透明）\n          }\n          \n          // 判断是否绘制完整的调整视图\n          // 条件：已收集到3个校准点（放宽previousPosition的要求）\n          if (this.calibrationPoints.length === 3) {\n            // 在绘制新元素前，先清除所有之前的元素\n            this.addLog('准备清除之前的校准元素', 'info')\n            this.$bus.$emit('ClearCalibrationPoints')\n            this.addLog('清除命令已发送', 'info')\n            \n            // 绘制完整的校准调整视图，包含所有关键位置点\n            \n            // 1. 绘制三个校准点（白色多边形）\n            // 这些点代表校准过程中收集的参考位置\n            this.calibrationPoints.forEach((point, index) => {\n              // 计算每个校准点的视场角点坐标，使用真实视场大小\n              const pointCoordinates = this.calculateFieldCorners(point.ra, point.dec, fieldData, false)\n              // 定义校准点的颜色（白色）\n              const whiteColor = {\n                stroke: \"#FFFFFF\",        // 白色边框\n                strokeOpacity: 1,         // 边框不透明度\n                fill: \"#FFFFFF\",          // 白色填充\n                fillOpacity: 0.2          // 填充不透明度（较透明）\n              }\n              // 发送绘制校准点多边形的事件\n              this.$bus.$emit('DrawCalibrationPointPolygon', pointCoordinates, whiteColor, \n                             `Calibration_${index + 1}`, `校准点${index + 1}`, \"#FFFFFF\")\n            })\n            \n            // 2. 绘制目标点（橙色圆形）\n            // 这是望远镜应该移动到的目标位置\n            // 目标点使用圆形绘制，不需要视场多边形\n            this.$bus.$emit('DrawTargetPointCircle', targetRa, targetDec, targetColor)\n            \n            // 3. 绘制当前位置（蓝色多边形）\n            // 这是望远镜当前指向的位置\n            this.$bus.$emit('DrawCalibrationPointPolygon', currentCoordinates, currentColor, \n                           'Current_Position', '当前位置', \"#00BFFF\")\n            \n            // 4. 上一次位置点已移除，不再绘制\n            \n            // 5. 在星图上添加状态文本提示\n            // 显示当前校准状态和进度信息\n            this.addStatusTextToStarMap()\n            \n          } else {\n            // 标准调整模式：只绘制当前位置和目标位置\n            // 这种情况通常发生在校准初期或数据不完整时\n            // 在绘制前先清除所有之前的元素\n            this.addLog('标准模式：准备清除之前的校准元素', 'info')\n            this.$bus.$emit('ClearCalibrationPoints')\n            this.addLog('标准模式：清除命令已发送', 'info')\n            \n            // 目标点使用圆形绘制，当前位置使用多边形\n            this.$bus.$emit('DrawAdjustmentPointsPolygon', currentCoordinates, null, currentColor, targetColor, isTimerUpdate)\n            this.$bus.$emit('DrawTargetPointCircle', targetRa, targetDec, targetColor)\n          }\n          \n        } catch (error) {\n          // 捕获并记录绘制过程中的任何错误\n          this.addLog(this.$t('Error Drawing Adjustment Points', [error.message]), 'error')\n          console.error('绘制调整点错误：', error)\n        }\n      },\n      \n      /**\n       * 计算视场的五个角点坐标\n       * @param {number} centerRa - 视场中心的赤经坐标\n       * @param {number} centerDec - 视场中心的赤纬坐标\n       * @param {object} fieldData - 视场数据（包含视场边界信息）\n       * @param {boolean} useDefaultSize - 是否使用默认视场大小（用于目标点等固定位置）\n       * @returns {Array} 包含5个角点坐标的数组，用于绘制多边形\n       */\n      calculateFieldCorners(centerRa, centerDec, fieldData, useDefaultSize = false) {\n        this.addLog(this.$t('Calculating Field Corners', [centerRa, centerDec]), 'info')\n        \n        // 如果指定使用默认大小或者没有视场数据，使用默认的0.5度视场大小\n        if (useDefaultSize || !fieldData) {\n          this.addLog(this.$t('Using Default Field Size: 0.5 Degrees'), 'info')\n          const fieldSize = 0.5\n          const coordinates = [\n            { ra: centerRa + fieldSize/2, dec: centerDec + fieldSize/2 },\n            { ra: centerRa - fieldSize/2, dec: centerDec + fieldSize/2 },\n            { ra: centerRa - fieldSize/2, dec: centerDec - fieldSize/2 },\n            { ra: centerRa + fieldSize/2, dec: centerDec - fieldSize/2 },\n            { ra: centerRa + fieldSize/2, dec: centerDec + fieldSize/2 }\n          ]\n          this.addLog(this.$t('Default Field Corners', [JSON.stringify(coordinates)]), 'info')\n          return coordinates\n        }\n        \n        // 如果有视场数据且不强制使用默认大小，基于传入的中心点坐标计算视场角点\n        // 这种情况主要用于当前位置的显示，需要反映实际的视场大小\n        const { maxra, minra, maxdec, mindec } = fieldData\n        \n        // 计算视场的实际大小（RA和DEC方向的跨度）\n        const raSpan = maxra - minra\n        const decSpan = maxdec - mindec\n        \n        // 基于传入的中心点坐标，计算视场的五个角点\n        const coordinates = [\n          { ra: centerRa + raSpan/2, dec: centerDec + decSpan/2 },     // 右上角\n          { ra: centerRa - raSpan/2, dec: centerDec + decSpan/2 },     // 左上角\n          { ra: centerRa - raSpan/2, dec: centerDec - decSpan/2 },     // 左下角\n          { ra: centerRa + raSpan/2, dec: centerDec - decSpan/2 },     // 右下角\n          { ra: centerRa + raSpan/2, dec: centerDec + decSpan/2 }      // 回到右上角（闭合多边形）\n        ]\n        \n        this.addLog(this.$t('Using Field Data', [raSpan, decSpan]), 'info')\n        this.addLog(this.$t('Field Corner Calculation Result', [JSON.stringify(coordinates)]), 'info')\n        return coordinates\n      },\n      \n\n      \n      // === 格式化方法 ===\n      formatTime(timestamp) {\n        if (!timestamp) return ''\n        const date = new Date(timestamp)\n        return date.toLocaleTimeString('zh-CN', { \n          hour12: false, \n          hour: '2-digit', \n          minute: '2-digit', \n          second: '2-digit' \n        })\n      },\n      \n      formatAdjustmentValue(value) {\n        if (value === null || value === undefined || isNaN(value)) return '0.0\\''\n        return Math.abs(value).toFixed(1) + \"'\"\n      },\n      \n      // 格式化坐标显示\n      formatCoordinate(value, type) {\n        if (value === null || value === undefined || isNaN(value)) {\n          return type === 'ra' ? '00h 00m 00s' : '+00° 00\\' 00\"'\n        }\n        \n        if (type === 'ra') {\n          // 格式化RA为时分秒格式\n          const hours = Math.floor(value / 15)\n          const minutes = Math.floor((value % 15) * 4)\n          const seconds = Math.floor(((value % 15) * 4 - minutes) * 60)\n          return `${hours.toString().padStart(2, '0')}h ${minutes.toString().padStart(2, '0')}m ${seconds.toString().padStart(2, '0')}s`\n        } else {\n          // 格式化DEC为度分秒格式\n          const sign = value >= 0 ? '+' : '-'\n          const absValue = Math.abs(value)\n          const degrees = Math.floor(absValue)\n          const minutes = Math.floor((absValue - degrees) * 60)\n          const seconds = Math.floor(((absValue - degrees) * 60 - minutes) * 60)\n          return `${sign}${degrees.toString().padStart(2, '0')}° ${minutes.toString().padStart(2, '0')}' ${seconds.toString().padStart(2, '0')}\"`\n        }\n      },\n      \n      // === 辅助方法 ===\n      parseCoordinate(value, type) {\n        if (typeof value === 'string') {\n          if (type === 'ra') {\n            // 解析时分秒格式 \"00h 00m 00s\"\n            const match = value.match(/(\\d+)h\\s*(\\d+)m\\s*(\\d+)s/)\n            if (match) {\n              const hours = parseInt(match[1])\n              const minutes = parseInt(match[2])\n              const seconds = parseInt(match[3])\n              return hours + minutes / 60 + seconds / 3600\n            }\n          } else {\n            // 解析度分秒格式 \"+00° 00' 00\"\"\n            const match = value.match(/([+-]?)(\\d+)°\\s*(\\d+)'\\s*(\\d+)\"/)\n            if (match) {\n              const sign = match[1] === '-' ? -1 : 1\n              const degrees = parseInt(match[2])\n              const minutes = parseInt(match[3])\n              const seconds = parseInt(match[4])\n              return sign * (degrees + minutes / 60 + seconds / 3600)\n            }\n          }\n        }\n        return null\n      },\n      \n      addStatusTextToStarMap() {\n        // 添加状态文本到星图\n        const statusText = {\n          text: `极轴校准调整中 - 校准点: ${this.calibrationPoints.length}/3`,\n          position: { ra: this.currentPosition.ra, dec: this.currentPosition.dec },\n          color: \"#FFFFFF\",\n          fontSize: 14,\n          backgroundColor: \"rgba(0, 0, 0, 0.7)\"\n        }\n        \n        // 发送状态文本到星图\n        // this.$bus.$emit('AddStatusTextToStarMap', statusText)\n      },\n      \n      getStepClass(index) {\n        // 根据进度百分比确定节点状态\n        const progress = this.progressPercentage\n        \n        switch(index) {\n          case 0: // 初始化节点\n            if (progress >= 15) return { completed: true }\n            if (progress >= 0) return { current: true }\n            return {}\n            \n          case 1: // 第一次校准节点\n            if (progress >= 25) return { completed: true }\n            if (progress >= 15) return { current: true }\n            return {}\n            \n          case 2: // 第二次校准节点\n            if (progress >= 50) return { completed: true }\n            if (progress >= 25) return { current: true }\n            return {}\n            \n          case 3: // 第三次校准节点\n            if (progress >= 75) return { completed: true }\n            if (progress >= 50) return { current: true }\n            return {}\n            \n          default:\n            return {}\n        }\n      },\n      \n      getAzimuthAction(azimuth) {\n        if (azimuth === null || azimuth === undefined || isNaN(azimuth)) return ''\n        if (azimuth > 0.5) return this.$t('Turn Right')\n        if (azimuth < -0.5) return this.$t('Turn Left')\n        return ''\n      },\n      \n      getAltitudeAction(altitude) {\n        if (altitude === null || altitude === undefined || isNaN(altitude)) return ''\n        if (altitude > 0.5) return this.$t('Raise Up')\n        if (altitude < -0.5) return this.$t('Lower Down')\n        return ''\n      },\n      \n\n      \n      // === 日志方法 ===\n      addLog(message, level = 'info') {\n        const log = {\n          id: Date.now() + Math.random(),\n          message,\n          level,\n          timestamp: new Date()\n        }\n        console.log(log.message)\n        this.logs.push(log)\n        // 限制日志数量\n        if (this.logs.length > 100) {\n          this.logs.shift()\n        }\n      },\n      \n      clearLogs() {\n        this.logs = []\n      },\n      \n      // === 极轴校准状态更新方法 ===\n      calculatePolarAxisOffset() {\n        this.polarAxisOffset = {\n          azimuth: this.adjustment.azimuth,\n          altitude: this.adjustment.altitude\n        }\n      },\n      \n      updatePolarAlignmentState(stateNumber, logMessage, progress) {\n        if (logMessage && typeof logMessage === 'string') {\n          let level = 'info'\n          if (logMessage.toLowerCase().includes('error') || logMessage.toLowerCase().includes('失败')) {\n            level = 'error'\n          } else if (logMessage.toLowerCase().includes('warning') || logMessage.toLowerCase().includes('警告')) {\n            level = 'warning'\n          } else if (logMessage.toLowerCase().includes('success') || logMessage.toLowerCase().includes('成功') || logMessage.toLowerCase().includes('完成')) {\n            level = 'success'\n          }\n          this.addLog(logMessage, level)\n        }\n        \n        if (progress !== undefined && progress !== null) {\n          this.currentProgress = progress\n          \n          if (progress >= 0 && progress <= 100) {\n            // 根据进度更新校准状态\n            if (progress >= 0 && progress < 15) {\n              // 初始化阶段\n              this.calibrationPoints = []\n              this.isCalibrationComplete = false\n              this.isPolarAligned = false\n            } else if (progress >= 15 && progress < 25) {\n              // 第一次校准阶段 - 移除模拟数据添加，实际校准点由updateFieldData处理\n              // 这里只更新状态，不添加模拟校准点\n            } else if (progress >= 25 && progress < 50) {\n              // 第二次校准阶段 - 移除模拟数据添加，实际校准点由updateFieldData处理\n              // 这里只更新状态，不添加模拟校准点\n            } else if (progress >= 50 && progress < 75) {\n              // 第三次校准阶段 - 移除模拟数据添加，实际校准点由updateFieldData处理\n              // 这里只更新状态，不添加模拟校准点\n            } else if (progress >= 75 && progress < 95) {\n              // 循环校准调整阶段\n              this.isCalibrationComplete = true\n              this.calculatePolarAxisOffset()\n              \n              // 检测校准循环\n              if (progress < this.lastCalibrationProgress && this.lastCalibrationProgress >= 75) {\n                this.calibrationLoopCount++\n                this.addLog(this.$t('Calibration Round Started', [this.calibrationLoopCount]), 'info')\n              }\n              \n              // 在循环校准阶段，进度可能会在75-95之间波动\n              // 这表示系统正在进行多次校准调整\n              if (progress > 85) {\n                this.addLog(this.$t('Calibration Progress Info', [Math.round(progress), this.calibrationLoopCount]), 'info')\n              }\n              \n              this.lastCalibrationProgress = progress\n            } else if (progress >= 95 && progress <= 100) {\n              // 最终验证阶段\n              this.isCalibrationComplete = true\n              this.calculatePolarAxisOffset()\n              \n              if (Math.abs(this.polarAxisOffset.azimuth) < 1.0 && Math.abs(this.polarAxisOffset.altitude) < 1.0) {\n                this.isPolarAligned = true\n                this.addLog(this.$t('Polar Alignment Completed'), 'success')\n              } else {\n                this.addLog(this.$t('Polar Alignment Needs Manual Adjustment'), 'warning')\n              }\n            }\n          }\n        }\n      },\n      \n\n      \n      // === 增强的卡片信息更新方法 ===\n      updateCardInfo(currentRa, currentDec, targetRa, targetDec, azimuthDegrees, altitudeDegrees, raAdjustment, decAdjustment) {\n        // 数据类型转换和有效性检查\n        const parseValue = (value) => {\n          if (value === null || value === undefined || value === '') return 0\n          const num = parseFloat(value)\n          return isNaN(num) ? 0 : num\n        }\n        \n        // 转换并验证所有数值\n        const currentRaNum = parseValue(currentRa)\n        const currentDecNum = parseValue(currentDec)\n        const targetRaNum = parseValue(targetRa)\n        const targetDecNum = parseValue(targetDec)\n        const azimuthNum = parseValue(azimuthDegrees)\n        const altitudeNum = parseValue(altitudeDegrees)\n        \n        // 检查数据有效性\n        if (isNaN(currentRaNum) || isNaN(currentDecNum) || isNaN(targetRaNum) || isNaN(targetDecNum) || \n            isNaN(azimuthNum) || isNaN(altitudeNum)) {\n          console.warn('PolarAlignment: 接收到无效的数值数据:', {\n            currentRa, currentDec, targetRa, targetDec, azimuthDegrees, altitudeDegrees\n          })\n          return\n        }\n        \n        // 更新位置信息\n        this.currentPosition.ra = this.formatCoordinate(currentRaNum, 'ra')\n        this.currentPosition.dec = this.formatCoordinate(currentDecNum, 'dec')\n        // 注意：这里的targetRa和targetDec是应该移动到的目标位置，不是真极轴位置\n        this.targetPosition.ra = this.formatCoordinate(targetRaNum, 'ra')\n        this.targetPosition.dec = this.formatCoordinate(targetDecNum, 'dec')\n        \n        // 更新调整信息\n        this.adjustment.azimuth = azimuthNum\n        this.adjustment.altitude = altitudeNum\n        \n        // 更新极轴对齐状态\n        this.isPolarAligned = Math.abs(azimuthNum) < 1.0 && Math.abs(altitudeNum) < 1.0\n        \n        // 添加调试日志\n        console.log('PolarAlignment: 更新卡片信息成功:', {\n          currentPosition: { ra: this.currentPosition.ra, dec: this.currentPosition.dec },\n          targetPosition: { ra: this.targetPosition.ra, dec: this.targetPosition.dec },\n          adjustment: { azimuth: this.adjustment.azimuth, altitude: this.adjustment.altitude },\n          isPolarAligned: this.isPolarAligned\n        })\n        \n      },\n      \n    }\n  }\n  </script>\n  \n  <style scoped>\n  /* === 最小化状态样式 === */\n  .polar-alignment-minimized {\n    position: fixed;\n    width: 250px;\n    max-width: 80vw;\n    background: rgba(35, 35, 45, 0.95);\n    border: 1px solid rgba(255, 255, 255, 0.1);\n    border-radius: 8px;\n    backdrop-filter: blur(10px);\n    z-index: 1000;\n    cursor: move;\n    user-select: none;\n    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);\n    transition: all 0.3s ease;\n    /* 添加背景隔离，防止操作映射到背景 */\n    isolation: isolate;\n    /* 移除contain属性，它可能阻止拖动事件 */\n    touch-action: none;\n    -webkit-tap-highlight-color: transparent;\n    -webkit-touch-callout: none;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n  }\n  \n  /* 拖动状态：移除过渡动画和复杂效果 */\n  .polar-alignment-minimized.dragging {\n    transition: none !important;\n    backdrop-filter: none !important;\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2) !important;\n    touch-action: manipulation;\n  }\n  \n  .polar-alignment-minimized:hover {\n    box-shadow: 0 6px 25px rgba(0, 0, 0, 0.4);\n  }\n  \n  .polar-alignment-minimized.dragging:hover {\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2) !important;\n  }\n  \n  .minimized-header {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 8px 12px;\n    background: rgba(60, 60, 70, 0.9);\n    border-radius: 8px 8px 0 0;\n    border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n  }\n  \n  .minimized-drag-area {\n    display: flex;\n    align-items: center;\n    flex: 1;\n    cursor: move;\n    /* 确保拖动区域有正确的交互 */\n    user-select: none;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    touch-action: none;\n    -webkit-tap-highlight-color: transparent;\n  }\n  \n  .minimized-icon {\n    color: #64b5f6;\n    font-size: 16px;\n    margin-right: 8px;\n  }\n  \n  .minimized-title {\n    font-size: 12px;\n    font-weight: 600;\n    color: #ffffff;\n    flex: 1;\n  }\n  \n  .minimized-controls {\n    display: flex;\n    gap: 4px;\n    /* 确保控制区域可以接收事件 */\n    position: relative;\n    z-index: 20;\n    pointer-events: auto;\n  }\n  \n  .minimized-btn {\n    width: 24px;\n    height: 24px;\n    border: none;\n    background: rgba(255, 255, 255, 0.1);\n    border-radius: 4px;\n    color: #ffffff;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: all 0.2s ease;\n    /* 移动端触摸优化 */\n    touch-action: manipulation;\n    -webkit-tap-highlight-color: transparent;\n    /* 确保按钮可以正确点击 */\n    position: relative;\n    z-index: 10;\n    /* 确保按钮可以接收点击事件 */\n    pointer-events: auto;\n  }\n  \n  .minimized-btn:hover {\n    background: rgba(255, 255, 255, 0.2);\n  }\n  \n  .minimized-btn:active {\n    background: rgba(255, 255, 255, 0.3);\n    transform: scale(0.95);\n  }\n  \n  .minimized-status {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    padding: 8px 12px;\n    font-size: 11px;\n  }\n  \n  .status-indicator {\n    width: 6px;\n    height: 6px;\n    border-radius: 50%;\n    background: #f44336;\n    transition: all 0.3s ease;\n  }\n  \n  .status-indicator.online {\n    background: #4caf50;\n    box-shadow: 0 0 4px rgba(76, 175, 80, 0.6);\n  }\n  \n  .status-text {\n    color: rgba(255, 255, 255, 0.8);\n  }\n  \n  /* === 完整控件样式 === */\n  .polar-alignment-widget {\n    position: fixed;\n    width: 350px;\n    max-width: 90vw;\n    background: rgba(35, 35, 45, 0.95);\n    border: 1px solid rgba(255, 255, 255, 0.1);\n    border-radius: 8px;\n    backdrop-filter: blur(10px);\n    z-index: 1000;\n    cursor: move;\n    user-select: none;\n    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);\n    transition: all 0.3s ease;\n    overflow: hidden;\n    /* 添加背景隔离，防止操作映射到背景 */\n    isolation: isolate;\n    /* 移除contain属性，它可能阻止拖动事件 */\n    touch-action: none;\n    -webkit-tap-highlight-color: transparent;\n    -webkit-touch-callout: none;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n  }\n  \n  /* 拖动状态：移除过渡动画和复杂效果 */\n  .polar-alignment-widget.dragging {\n    transition: none !important;\n    backdrop-filter: none !important;\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2) !important;\n    touch-action: manipulation;\n  }\n  \n  .polar-alignment-widget:hover {\n    box-shadow: 0 6px 25px rgba(0, 0, 0, 0.4);\n  }\n  \n  .polar-alignment-widget.dragging:hover {\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2) !important;\n  }\n  \n  .polar-alignment-widget.collapsed {\n    width: 300px;\n    max-width: 85vw;\n  }\n  \n  /* === 控件头部样式 === */\n  .widget-header {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 12px 16px;\n    background: rgba(60, 60, 70, 0.9);\n    border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n  }\n  \n  .header-drag-area {\n    display: flex;\n    align-items: center;\n    flex: 1;\n    cursor: move;\n    /* 确保拖动区域有正确的交互 */\n    user-select: none;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    /* 添加拖动时的视觉反馈 */\n    transition: background-color 0.2s ease;\n    /* 确保拖动区域有正确的指针事件 */\n    pointer-events: auto;\n    touch-action: none;\n    -webkit-tap-highlight-color: transparent;\n  }\n  \n  .widget-header:hover {\n    background: rgba(60, 60, 70, 0.95);\n  }\n  \n  .header-left {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    flex: 1;\n  }\n  \n  .header-icon {\n    color: #64b5f6;\n    font-size: 18px;\n  }\n  \n  .header-title {\n    font-size: 14px;\n    font-weight: 600;\n    color: #ffffff;\n  }\n  \n  .connection-indicator {\n    display: flex;\n    align-items: center;\n  }\n  \n  .status-dot {\n    width: 8px;\n    height: 8px;\n    border-radius: 50%;\n    background: #f44336;\n    transition: all 0.3s ease;\n  }\n  \n  .status-dot.online {\n    background: #4caf50;\n    box-shadow: 0 0 6px rgba(76, 175, 80, 0.6);\n  }\n  \n  .header-controls {\n    display: flex;\n    gap: 4px;\n    /* 确保控制区域可以接收事件 */\n    position: relative;\n    z-index: 20;\n    pointer-events: auto;\n  }\n  \n  .header-btn {\n    width: 28px;\n    height: 28px;\n    border: none;\n    background: rgba(255, 255, 255, 0.1);\n    border-radius: 4px;\n    color: #ffffff;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: all 0.2s ease;\n    /* 移动端触摸优化 */\n    touch-action: manipulation;\n    -webkit-tap-highlight-color: transparent;\n    /* 确保按钮可以正确点击 */\n    position: relative;\n    z-index: 10;\n    /* 确保按钮可以接收点击事件 */\n    pointer-events: auto;\n  }\n  \n  .header-btn:hover {\n    background: rgba(255, 255, 255, 0.2);\n  }\n  \n  .header-btn:active {\n    background: rgba(255, 255, 255, 0.3);\n    transform: scale(0.95);\n  }\n  \n  .header-btn.close-btn:hover {\n    background: #f44336;\n  }\n  \n  /* === 控件内容样式 === */\n  .widget-content {\n    transition: all 0.3s ease;\n    /* 确保内容区域有适当的背景隔离 */\n    background: rgba(35, 35, 45, 0.95);\n    position: relative;\n    z-index: 1;\n    /* 确保内容区域不会阻止拖动事件 */\n    pointer-events: auto;\n  }\n  \n  /* 拖动状态：移除过渡动画 */\n  .widget-content.dragging {\n    transition: none !important;\n  }\n  \n  .widget-content.collapsed {\n    padding: 12px;\n  }\n  \n  .widget-content.expanded {\n    padding: 16px;\n    max-height: 80vh;\n    overflow-y: auto;\n    /* 优化内容布局，充分利用空间 */\n    display: flex;\n    flex-direction: column;\n    gap: 16px;\n    /* 确保内容充分利用可用空间 */\n    min-height: 0;\n    flex: 1;\n    /* 自适应高度 */\n    height: auto;\n  }\n  \n  /* === 收缩状态样式 === */\n  .collapsed-info {\n    display: flex;\n    align-items: center;\n    gap: 16px;\n  }\n  \n  .collapsed-progress {\n    flex-shrink: 0;\n  }\n  \n  .progress-circle {\n    width: 60px;\n    height: 60px;\n    border-radius: 50%;\n    background: conic-gradient(\n      #64b5f6 0deg var(--progress, 0deg),\n      rgba(255, 255, 255, 0.1) var(--progress, 0deg) 360deg\n    );\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n  }\n  \n  .progress-circle::before {\n    content: '';\n    position: absolute;\n    width: 50px;\n    height: 50px;\n    border-radius: 50%;\n    background: rgba(35, 35, 45, 0.95);\n  }\n  \n  .progress-text {\n    position: relative;\n    z-index: 1;\n    font-size: 12px;\n    font-weight: 600;\n    color: #ffffff;\n  }\n  \n  .collapsed-status {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n  }\n  \n  .status-item {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    font-size: 11px;\n  }\n  \n  .status-label {\n    color: rgba(255, 255, 255, 0.7);\n  }\n  \n  .status-value {\n    color: #ffffff;\n    font-weight: 600;\n    font-family: monospace;\n  }\n  \n  .status-value.needs-adjustment {\n    color: #ff9800;\n  }\n  \n  /* === 展开状态样式 === */\n  .content-sections {\n    display: flex;\n    flex-direction: column;\n    gap: 16px;\n    /* 优化布局，充分利用可用空间 */\n    width: 100%;\n    min-height: 0;\n  }\n  \n  /* === 校准步骤进度条样式 === */\n  .calibration-progress {\n    margin-bottom: 16px;\n  }\n\n  .progress-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 8px;\n  }\n\n  .progress-title {\n    font-size: 12px;\n    font-weight: 600;\n    color: #ffffff;\n  }\n\n  .calibration-loop-info {\n    font-size: 10px;\n    color: #ff9800;\n    font-weight: 500;\n    padding: 2px 6px;\n    background: rgba(255, 152, 0, 0.2);\n    border-radius: 4px;\n    animation: loop-pulse 2s infinite;\n  }\n\n  @keyframes loop-pulse {\n    0%, 100% { opacity: 1; }\n    50% { opacity: 0.7; }\n  }\n\n  .progress-bar {\n    position: relative;\n    width: 100%;\n    height: 8px;\n    background: rgba(255, 255, 255, 0.1);\n    border-radius: 4px;\n    overflow: visible;\n  }\n\n  .progress-fill {\n    height: 100%;\n    background: linear-gradient(90deg, #64b5f6, #4caf50);\n    border-radius: 4px;\n    transition: width 0.1s ease;\n  }\n\n  .progress-nodes {\n    position: absolute;\n    top: 50%;\n    left: 0;\n    right: 0;\n    transform: translateY(-50%);\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  .progress-node {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    z-index: 2;\n  }\n\n  .node-circle {\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    background: rgba(255, 255, 255, 0.2);\n    border: 2px solid rgba(255, 255, 255, 0.3);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 10px;\n    font-weight: bold;\n    color: #ffffff;\n    transition: all 0.3s ease;\n  }\n\n  .progress-node.completed .node-circle {\n    background: #4caf50;\n    border-color: #4caf50;\n    box-shadow: 0 0 8px rgba(76, 175, 80, 0.4);\n  }\n\n  .progress-node.current .node-circle {\n    background: #64b5f6;\n    border-color: #64b5f6;\n    box-shadow: 0 0 8px rgba(100, 181, 246, 0.4);\n  }\n\n  .progress-node.adjustment-node .node-circle {\n    background: rgba(255, 152, 0, 0.3);\n    border-color: rgba(255, 152, 0, 0.5);\n  }\n\n  .progress-node.adjustment-node.active .node-circle {\n    background: #ff9800;\n    border-color: #ff9800;\n    box-shadow: 0 0 8px rgba(255, 152, 0, 0.4);\n  }\n\n  .progress-node.calibration-node .node-circle {\n    background: rgba(255, 152, 0, 0.3);\n    border-color: rgba(255, 152, 0, 0.5);\n  }\n\n  .progress-node.calibration-node.active .node-circle {\n    background: #ff9800;\n    border-color: #ff9800;\n    box-shadow: 0 0 8px rgba(255, 152, 0, 0.4);\n  }\n\n  .progress-node.calibration-node.looping .node-circle {\n    animation: calibration-pulse 2s infinite;\n  }\n\n  @keyframes calibration-pulse {\n    0% { \n      background: #ff9800;\n      box-shadow: 0 0 8px rgba(255, 152, 0, 0.4);\n    }\n    50% { \n      background: #ff5722;\n      box-shadow: 0 0 12px rgba(255, 152, 0, 0.6);\n    }\n    100% { \n      background: #ff9800;\n      box-shadow: 0 0 8px rgba(255, 152, 0, 0.4);\n    }\n  }\n\n  .progress-node.calibration-node.looping .node-circle i {\n    animation: calibration-rotate 2s linear infinite;\n  }\n\n  @keyframes calibration-rotate {\n    from { transform: rotate(0deg); }\n    to { transform: rotate(360deg); }\n  }\n\n  .progress-node.verification-node .node-circle {\n    background: rgba(76, 175, 80, 0.3);\n    border-color: rgba(76, 175, 80, 0.5);\n  }\n\n  .progress-node.verification-node.active .node-circle {\n    background: #4caf50;\n    border-color: #4caf50;\n    box-shadow: 0 0 8px rgba(76, 175, 80, 0.4);\n  }\n\n  .node-label {\n    position: absolute;\n    top: 100%;\n    left: 50%;\n    transform: translateX(-50%);\n    font-size: 9px;\n    color: rgba(255, 255, 255, 0.7);\n    font-weight: 500;\n    margin-top: 4px;\n    white-space: nowrap;\n    text-align: center;\n  }\n\n  .progress-node {\n    position: relative;\n  }\n\n  /* === 位置信息样式 === */\n  .position-section {\n    margin-top: 16px;\n    padding-top: 16px;\n    border-top: 1px solid rgba(255, 255, 255, 0.1);\n  }\n\n  .position-grid {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 1fr 1fr;\n    gap: 8px;\n    background: rgba(255, 255, 255, 0.05);\n    border-radius: 6px;\n    padding: 12px;\n  }\n\n  .position-cell {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 4px;\n    padding: 8px;\n    border-radius: 4px;\n    transition: all 0.3s ease;\n  }\n\n  .position-cell.current {\n    background: rgba(100, 181, 246, 0.1);\n    border: 1px solid rgba(100, 181, 246, 0.2);\n  }\n\n  .position-cell.target {\n    background: rgba(255, 152, 0, 0.1);\n    border: 1px solid rgba(255, 152, 0, 0.2);\n  }\n\n  .cell-label {\n    font-size: 10px;\n    color: rgba(255, 255, 255, 0.7);\n    font-weight: 500;\n    text-transform: uppercase;\n    letter-spacing: 0.5px;\n  }\n\n  .cell-value {\n    font-size: 11px;\n    color: #ffffff;\n    font-family: monospace;\n    font-weight: 600;\n  }\n\n  /* === 调整指导样式 === */\n  .adjustment-section {\n    margin-top: 16px;\n    padding-top: 16px;\n    border-top: 1px solid rgba(255, 255, 255, 0.1);\n  }\n\n  .adjustment-instructions {\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n  }\n\n  .adjustment-item {\n    display: flex;\n    align-items: center;\n    gap: 12px;\n    padding: 12px;\n    background: rgba(255, 255, 255, 0.05);\n    border-radius: 6px;\n    transition: all 0.3s ease;\n    border: 1px solid transparent;\n  }\n\n  .adjustment-item.active {\n    background: rgba(255, 152, 0, 0.15);\n    border-color: #ff9800;\n  }\n\n  .adjustment-icon {\n    width: 28px;\n    height: 28px;\n    border-radius: 50%;\n    background: rgba(255, 255, 255, 0.1);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 14px;\n    color: #ffffff;\n    flex-shrink: 0;\n  }\n\n  .adjustment-item.active .adjustment-icon {\n    background: #ff9800;\n  }\n\n  .adjustment-details {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n  }\n\n  .adjustment-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  .adjustment-type {\n    font-size: 12px;\n    color: #ffffff;\n    font-weight: 500;\n  }\n\n  .adjustment-value {\n    font-size: 18px;\n    color: #ffffff;\n    font-family: monospace;\n    font-weight: 700;\n    text-shadow: 0 0 4px rgba(255, 255, 255, 0.3);\n    letter-spacing: 1px;\n  }\n\n  .adjustment-action {\n    font-size: 10px;\n    color: rgba(255, 255, 255, 0.7);\n    font-weight: 500;\n  }\n\n  .adjustment-item.active .adjustment-action {\n    color: #ff9800;\n  }\n  \n  /* === 操作按钮样式 === */\n  .control-section {\n    margin-top: 16px;\n    padding-top: 16px;\n    border-top: 1px solid rgba(255, 255, 255, 0.1);\n  }\n\n  .action-buttons {\n    display: flex;\n    flex-direction: row;\n    gap: 10px;\n  }\n\n  .action-btn {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 8px;\n    padding: 12px 16px;\n    border: none;\n    border-radius: 6px;\n    cursor: pointer;\n    font-size: 13px;\n    font-weight: 500;\n    transition: all 0.3s ease;\n    pointer-events: auto;\n    min-height: 40px;\n    touch-action: manipulation;\n    position: relative;\n    flex: 1;\n  }\n\n  .action-btn.primary {\n    background: linear-gradient(135deg, #64b5f6, #42a5f5);\n    color: #ffffff;\n    box-shadow: 0 2px 6px rgba(100, 181, 246, 0.3);\n  }\n\n  .action-btn.primary:hover:not(:disabled) {\n    background: linear-gradient(135deg, #42a5f5, #2196f3);\n    transform: translateY(-1px);\n    box-shadow: 0 4px 12px rgba(100, 181, 246, 0.4);\n  }\n\n  .action-btn.secondary {\n    background: rgba(255, 255, 255, 0.1);\n    color: #ffffff;\n    border: 1px solid rgba(255, 255, 255, 0.2);\n  }\n\n  .action-btn.secondary:hover:not(:disabled) {\n    background: rgba(255, 255, 255, 0.2);\n    transform: translateY(-1px);\n  }\n\n  .action-btn.success {\n    background: linear-gradient(135deg, #4caf50, #43a047);\n    color: #ffffff;\n    box-shadow: 0 2px 6px rgba(76, 175, 80, 0.3);\n  }\n\n  .action-btn.success:hover:not(:disabled) {\n    background: linear-gradient(135deg, #43a047, #388e3c);\n    transform: translateY(-1px);\n    box-shadow: 0 4px 12px rgba(76, 175, 80, 0.4);\n  }\n\n  .action-btn.restore {\n    background: linear-gradient(135deg, #ff9800, #f57c00);\n    color: #ffffff;\n    box-shadow: 0 2px 6px rgba(255, 152, 0, 0.3);\n  }\n\n  .action-btn.restore:hover:not(:disabled) {\n    background: linear-gradient(135deg, #f57c00, #ef6c00);\n    transform: translateY(-1px);\n    box-shadow: 0 4px 12px rgba(255, 152, 0, 0.4);\n  }\n\n  .action-btn:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n    transform: none !important;\n    box-shadow: none !important;\n  }\n\n  /* === 日志显示样式 === */\n  .log-section {\n    margin-top: 16px;\n    padding-top: 16px;\n    border-top: 1px solid rgba(255, 255, 255, 0.1);\n  }\n\n  .log-display {\n    background: rgba(255, 255, 255, 0.05);\n    border-radius: 6px;\n    padding: 10px;\n  }\n\n  .latest-log {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    padding: 8px 10px;\n    border-radius: 4px;\n    font-size: 11px;\n    background: rgba(255, 255, 255, 0.05);\n    border-left: 3px solid transparent;\n  }\n\n  .latest-log.info {\n    border-left-color: #64b5f6;\n  }\n\n  .latest-log.warning {\n    border-left-color: #ff9800;\n  }\n\n  .latest-log.success {\n    border-left-color: #4caf50;\n  }\n\n  .latest-log.error {\n    border-left-color: #f44336;\n  }\n\n  .log-timestamp {\n    color: rgba(255, 255, 255, 0.6);\n    font-family: monospace;\n    font-size: 10px;\n    min-width: 65px;\n    flex-shrink: 0;\n  }\n\n  .log-message {\n    color: rgba(255, 255, 255, 0.9);\n    flex: 1;\n    line-height: 1.4;\n  }\n\n  .log-empty {\n    text-align: center;\n    color: rgba(255, 255, 255, 0.5);\n    font-size: 11px;\n    padding: 20px;\n    font-style: italic;\n  }\n  \n  /* === 响应式设计 === */\n  @media (max-width: 768px) {\n    .polar-alignment-widget {\n      width: 320px;\n      max-width: 95vw;\n    }\n    \n    .polar-alignment-widget.collapsed {\n      width: 280px;\n      max-width: 90vw;\n    }\n    \n    .polar-alignment-minimized {\n      width: 240px;\n    }\n    \n    .widget-header {\n      padding: 10px 12px;\n    }\n    \n    .header-title {\n      font-size: 12px;\n    }\n    \n    .widget-content.expanded {\n      padding: 12px;\n      max-height: 500px;\n    }\n    \n    .widget-content.collapsed {\n      padding: 8px;\n    }\n    \n    .action-btn {\n      padding: 10px 12px;\n      font-size: 12px;\n      min-height: 36px;\n    }\n    \n    .adjustment-value {\n      font-size: 16px;\n    }\n    \n    .progress-circle {\n      width: 50px;\n      height: 50px;\n    }\n    \n    .progress-text {\n      font-size: 10px;\n    }\n    \n    .node-label {\n      font-size: 8px;\n      margin-top: 2px;\n    }\n    \n    .node-circle {\n      width: 16px;\n      height: 16px;\n      font-size: 8px;\n    }\n    \n    .progress-header {\n      margin-bottom: 6px;\n    }\n    \n    .progress-title {\n      font-size: 11px;\n    }\n    \n    .calibration-loop-info {\n      font-size: 9px;\n      padding: 1px 4px;\n    }\n  }\n  \n  /* 移动端触摸优化 */\n  @media (hover: none) and (pointer: coarse) {\n    .action-btn {\n      min-height: 48px;\n      padding: 14px 18px;\n      font-size: 14px;\n    }\n    \n    .widget-header {\n      padding: 16px 20px;\n    }\n    \n    .minimized-header {\n      padding: 12px 16px;\n    }\n    \n    .header-btn {\n      width: 32px;\n      height: 32px;\n    }\n    \n    .minimized-btn {\n      width: 28px;\n      height: 28px;\n    }\n  }\n  \n  @media (max-width: 480px) {\n    .polar-alignment-widget {\n      width: 280px;\n      max-width: 98vw;\n    }\n    \n    .polar-alignment-widget.collapsed {\n      width: 240px;\n      max-width: 95vw;\n    }\n    \n    .polar-alignment-minimized {\n      width: 200px;\n    }\n    \n    .widget-header {\n      padding: 8px 10px;\n    }\n    \n    .header-title {\n      font-size: 11px;\n    }\n    \n    .header-btn {\n      width: 20px;\n      height: 20px;\n    }\n    \n    .widget-content.expanded {\n      padding: 10px;\n      max-height: 400px;\n    }\n    \n    .widget-content.collapsed {\n      padding: 6px;\n    }\n    \n    .action-btn {\n      padding: 8px 10px;\n      font-size: 11px;\n      min-height: 32px;\n    }\n    \n    .adjustment-value {\n      font-size: 14px;\n    }\n    \n    .progress-circle {\n      width: 40px;\n      height: 40px;\n    }\n    \n    .progress-text {\n      font-size: 9px;\n    }\n    \n    .minimized-header {\n      padding: 6px 8px;\n    }\n    \n    .minimized-title {\n      font-size: 10px;\n    }\n    \n    .minimized-btn {\n      width: 16px;\n      height: 16px;\n    }\n    \n    .node-label {\n      font-size: 7px;\n      margin-top: 1px;\n    }\n    \n    .node-circle {\n      width: 14px;\n      height: 14px;\n      font-size: 7px;\n    }\n    \n    .progress-nodes {\n      gap: 2px;\n    }\n    \n    .progress-header {\n      margin-bottom: 4px;\n    }\n    \n    .progress-title {\n      font-size: 10px;\n    }\n    \n    .calibration-loop-info {\n      font-size: 8px;\n      padding: 1px 3px;\n    }\n  }\n  \n  /* 面板标题 */\n  .panel-header {\n    margin-bottom: 16px;\n    padding-bottom: 8px;\n    border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    pointer-events: auto;\n  }\n  \n  .panel-header h3 {\n    margin: 0;\n    font-size: 18px;\n    font-weight: 600;\n    color: #ffffff;\n  }\n  \n  .panel-indicator {\n    width: 8px;\n    height: 8px;\n    border-radius: 50%;\n    background: #64b5f6;\n  }\n  \n  .panel-indicator.live {\n    animation: pulse 2s infinite;\n  }\n  \n  .panel-indicator.control {\n    background: #ff9800;\n  }\n  \n  @keyframes pulse {\n    0% { opacity: 1; }\n    50% { opacity: 0.5; }\n    100% { opacity: 1; }\n  }\n  \n\n  \n  .card-header {\n    background: rgba(60, 60, 70, 0.8);\n    padding: 12px 16px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n    pointer-events: auto;\n  }\n  \n  .card-header span {\n    font-size: 14px;\n    font-weight: 500;\n    color: #ffffff;\n  }\n  \n  .card-icon {\n    color: #64b5f6;\n    font-size: 18px;\n  }\n  \n  .card-icon.warning {\n    color: #ff9800;\n  }\n  \n  .card-icon.success {\n    color: #4caf50;\n  }\n  \n\n\n  \n\n  \n    /* === 响应式设计 === */\n  @media (max-width: 1200px) {\n    .info-panel {\n      flex: 0 0 350px;\n    }\n  }\n\n  @media (max-width: 768px) {\n    .polar-alignment-interface {\n      font-size: 12px;\n    }\n\n    .main-layout {\n      flex-direction: column;\n      gap: 8px;\n      padding: 8px;\n    }\n\n    .display-panel {\n      flex: 1;\n      min-height: 300px;\n      padding: 12px;\n    }\n\n    .info-panel {\n      flex: 0 0 auto;\n      max-height: 50vh;\n      overflow-y: auto;\n      padding: 12px;\n    }\n\n    /* 状态相关样式已删除 */\n\n    .calibration-progress {\n      margin-bottom: 12px;\n    }\n\n    .progress-bar {\n      height: 6px;\n    }\n\n    .node-circle {\n      width: 16px;\n      height: 16px;\n      font-size: 8px;\n    }\n\n    .position-section {\n      margin-top: 12px;\n      padding-top: 12px;\n    }\n\n    .position-grid {\n      gap: 6px;\n      padding: 8px;\n    }\n\n    .position-cell {\n      padding: 6px;\n    }\n\n    .adjustment-section {\n      margin-top: 12px;\n      padding-top: 12px;\n    }\n\n    .adjustment-item {\n      padding: 8px;\n    }\n\n    .adjustment-icon {\n      width: 24px;\n      height: 24px;\n    }\n\n    .control-section {\n      margin-top: 12px;\n      padding-top: 12px;\n    }\n\n    .action-btn {\n      padding: 10px 12px;\n      font-size: 12px;\n      min-height: 36px;\n      flex: 1;\n    }\n\n    .log-section {\n      margin-top: 12px;\n      padding-top: 12px;\n    }\n\n    .log-display {\n      padding: 8px;\n    }\n    \n    .panel-header {\n      margin-bottom: 8px;\n      padding-bottom: 8px;\n    }\n    \n    .interface-title {\n      font-size: 14px;\n    }\n    \n    .connection-status {\n      font-size: 10px;\n    }\n    \n    .card-header {\n      padding: 8px 12px;\n    }\n    \n    .card-header span {\n      font-size: 12px;\n    }\n    \n    .card-content {\n      padding: 12px;\n    }\n    \n\n    \n    .node-circle {\n      width: 14px;\n      height: 14px;\n      font-size: 7px;\n    }\n    \n    .log-display {\n      padding: 6px;\n    }\n    \n    .latest-log {\n      font-size: 10px;\n    }\n    \n    .log-timestamp {\n      min-width: 50px;\n    }\n  }\n  \n    @media (max-width: 480px) {\n    .polar-alignment-interface {\n      font-size: 10px;\n    }\n\n    .main-layout {\n      flex-direction: column;\n      gap: 6px;\n      padding: 6px;\n    }\n\n    .display-panel {\n      flex: 1;\n      min-height: 250px;\n      padding: 8px;\n    }\n\n    .info-panel {\n      flex: 0 0 auto;\n      max-height: 45vh;\n      overflow-y: auto;\n      padding: 8px;\n    }\n\n    .card-header {\n      padding: 8px 12px;\n    }\n\n    .card-header span {\n      font-size: 11px;\n    }\n\n    .card-content {\n      padding: 12px;\n    }\n\n    /* 状态相关样式已删除 */\n\n    .calibration-progress {\n      margin-bottom: 8px;\n    }\n\n    .progress-bar {\n      height: 4px;\n    }\n\n    .node-circle {\n      width: 14px;\n      height: 14px;\n      font-size: 7px;\n    }\n\n    .position-section {\n      margin-top: 8px;\n      padding-top: 8px;\n    }\n\n    .position-grid {\n      gap: 4px;\n      padding: 6px;\n    }\n\n    .position-cell {\n      padding: 4px;\n    }\n\n    .cell-label {\n      font-size: 8px;\n    }\n\n    .cell-value {\n      font-size: 9px;\n    }\n\n    .adjustment-section {\n      margin-top: 8px;\n      padding-top: 8px;\n    }\n\n    .adjustment-item {\n      padding: 6px;\n    }\n\n    .adjustment-icon {\n      width: 20px;\n      height: 20px;\n    }\n\n    .adjustment-type {\n      font-size: 10px;\n    }\n\n    .adjustment-value {\n      font-size: 10px;\n    }\n\n    .adjustment-action {\n      font-size: 8px;\n    }\n\n    .control-section {\n      margin-top: 8px;\n      padding-top: 8px;\n    }\n\n    .action-btn {\n      padding: 8px 10px;\n      font-size: 10px;\n      min-height: 32px;\n      flex: 1;\n    }\n\n    .log-section {\n      margin-top: 8px;\n      padding-top: 8px;\n    }\n\n    .log-display {\n      padding: 6px;\n    }\n\n    .latest-log {\n      font-size: 9px;\n    }\n\n    .log-timestamp {\n      font-size: 8px;\n      min-width: 45px;\n    }\n    \n    .panel-header {\n      margin-bottom: 6px;\n      padding-bottom: 6px;\n    }\n    \n  }\n  \n  /* === 触摸优化 === */\n  .polar-alignment-widget,\n  .polar-alignment-minimized {\n    /* 触摸优化 */\n    touch-action: none;\n    -webkit-tap-highlight-color: transparent;\n    -webkit-touch-callout: none;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n  }\n  \n  .header-drag-area,\n  .minimized-drag-area {\n    /* 触摸优化 */\n    touch-action: none;\n    -webkit-tap-highlight-color: transparent;\n  }\n  \n  /* 拖动状态：移除触摸优化，允许正常触摸 */\n  .polar-alignment-widget.dragging,\n  .polar-alignment-minimized.dragging {\n    touch-action: manipulation;\n  }\n  \n  /* === 性能优化 === */\n  /* 拖动时禁用不必要的动画和效果 */\n  .dragging * {\n    animation: none !important;\n    transition: none !important;\n  }\n  \n  /* 拖动时简化阴影和模糊效果 */\n  .dragging .progress-circle::before,\n  .dragging .node-circle,\n  .dragging .status-indicator {\n    box-shadow: none !important;\n    filter: none !important;\n  }\n  </style>"],"sourceRoot":"src/components"}]}