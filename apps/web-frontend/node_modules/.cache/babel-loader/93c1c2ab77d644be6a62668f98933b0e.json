{"remainingRequest":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/thread-loader/dist/cjs.js!/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/babel-loader/lib/index.js!/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/src/components/AutomaticPolarAlignmentCalibration.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/src/components/AutomaticPolarAlignmentCalibration.vue","mtime":1758790387000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1707125360000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/thread-loader/dist/cjs.js","mtime":1707125360000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/babel-loader/lib/index.js","mtime":1707125360000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1707125360000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/vue-loader/lib/index.js","mtime":1707125450000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["AutomaticPolarAlignmentCalibration.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <!-- 最小化状态 -->\n  <div v-if=\"visible && isMinimized\" class=\"polar-alignment-minimized\" :class=\"{ 'dragging': isDraggingState }\"\n    :style=\"{ left: position.x + 'px', top: position.y + 'px' }\">\n    <div class=\"minimized-header\">\n      <div class=\"minimized-drag-area\" @mousedown=\"startDrag\" @touchstart=\"startDrag\">\n        <v-icon class=\"minimized-icon\">mdi-compass-rose</v-icon>\n        <span class=\"minimized-title\">{{ $t('Polar Alignment') }}</span>\n      </div>\n      <div class=\"minimized-controls\">\n        <button class=\"minimized-btn\" @click=\"toggleMinimize\" :title=\"$t('Expand')\">\n          <v-icon>mdi-chevron-up</v-icon>\n        </button>\n      </div>\n    </div>\n    <div class=\"minimized-status\">\n      <div class=\"status-indicator\" :class=\"{ 'online': isConnected }\"></div>\n      <span class=\"status-text\">{{ isConnected ? $t('Connected') : $t('Disconnected') }}</span>\n    </div>\n  </div>\n\n  <!-- 完整界面 -->\n  <div v-else-if=\"visible\" class=\"polar-alignment-widget\"\n    :class=\"{ 'collapsed': isCollapsed, 'dragging': isDraggingState }\"\n    :style=\"{ left: position.x + 'px', top: position.y + 'px' }\">\n\n    <!-- 拖动手柄 -->\n    <div class=\"widget-header\">\n      <div class=\"header-drag-area\" @mousedown=\"startDrag\" @touchstart=\"startDrag\">\n        <div class=\"header-left\">\n          <v-icon class=\"header-icon\">mdi-compass-rose</v-icon>\n          <span class=\"header-title\">{{ $t('Polar Alignment Calibration') }}</span>\n          <div class=\"connection-indicator\">\n            <div class=\"status-dot\" :class=\"{ 'online': isConnected }\"></div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"header-controls\">\n        <button class=\"header-btn\" @click=\"toggleCollapse\" :title=\"isCollapsed ? $t('Expand') : $t('Collapse')\">\n          <v-icon>{{ isCollapsed ? 'mdi-chevron-down' : 'mdi-chevron-up' }}</v-icon>\n        </button>\n        <button class=\"header-btn\" @click=\"toggleMinimize\" :title=\"$t('Minimize')\">\n          <v-icon>mdi-minus</v-icon>\n        </button>\n      </div>\n    </div>\n\n    <!-- 收缩状态内容 -->\n    <div v-if=\"isCollapsed\" class=\"widget-content collapsed\" :class=\"{ 'dragging': isDraggingState }\">\n      <div class=\"collapsed-info\">\n        <div class=\"collapsed-progress\">\n          <div class=\"progress-circle\" :style=\"{ '--progress': progressPercentage + '%' }\">\n            <span class=\"progress-text\">{{ Math.round(progressPercentage) }}%</span>\n          </div>\n        </div>\n        <div class=\"collapsed-status\">\n          <div class=\"status-item\">\n            <span class=\"status-label\">方位角:</span>\n            <span class=\"status-value\" :class=\"{ 'needs-adjustment': needsAzimuthAdjustment }\">\n              {{ formatAdjustmentValue(adjustment.azimuth) }}\n            </span>\n          </div>\n          <div class=\"status-item\">\n            <span class=\"status-label\">高度角:</span>\n            <span class=\"status-value\" :class=\"{ 'needs-adjustment': needsAltitudeAdjustment }\">\n              {{ formatAdjustmentValue(adjustment.altitude) }}\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 展开状态内容 -->\n    <div v-else class=\"widget-content expanded\" :class=\"{ 'dragging': isDraggingState }\">\n      <div class=\"content-sections\">\n        <!-- 校准步骤进度条 -->\n        <div class=\"calibration-progress\">\n          <div class=\"progress-header\">\n            <div class=\"progress-title\">{{ $t('Calibration Progress') }}</div>\n            <div v-if=\"progressPercentage >= 75 && progressPercentage < 95\" class=\"calibration-loop-info\">\n              {{ $t('Calibration Round', [calibrationLoopCount]) }}\n            </div>\n          </div>\n          <div class=\"progress-bar\">\n            <div class=\"progress-fill\" :style=\"{ width: progressPercentage + '%' }\"></div>\n            <div class=\"progress-nodes\">\n              <!-- 初始化节点 -->\n              <div class=\"progress-node\" :class=\"getStepClass(0)\">\n                <div class=\"node-circle\">\n                  <v-icon v-if=\"progressPercentage >= 15\">mdi-check</v-icon>\n                  <v-icon v-else>mdi-cog</v-icon>\n                </div>\n                <div class=\"node-label\">{{ $t('Initialization') }}</div>\n              </div>\n\n              <!-- 第一次校准节点 -->\n              <div class=\"progress-node\" :class=\"getStepClass(1)\">\n                <div class=\"node-circle\">\n                  <v-icon v-if=\"progressPercentage >= 25\">mdi-check</v-icon>\n                  <span v-else>1</span>\n                </div>\n                <div class=\"node-label\">{{ $t('First Calibration') }}</div>\n              </div>\n\n              <!-- 第二次校准节点 -->\n              <div class=\"progress-node\" :class=\"getStepClass(2)\">\n                <div class=\"node-circle\">\n                  <v-icon v-if=\"progressPercentage >= 50\">mdi-check</v-icon>\n                  <span v-else>2</span>\n                </div>\n                <div class=\"node-label\">{{ $t('Second Calibration') }}</div>\n              </div>\n\n              <!-- 第三次校准节点 -->\n              <div class=\"progress-node\" :class=\"getStepClass(3)\">\n                <div class=\"node-circle\">\n                  <v-icon v-if=\"progressPercentage >= 75\">mdi-check</v-icon>\n                  <span v-else>3</span>\n                </div>\n                <div class=\"node-label\">{{ $t('Third Calibration') }}</div>\n              </div>\n\n              <!-- 校准调整节点 -->\n              <div class=\"progress-node calibration-node\"\n                :class=\"{ 'active': progressPercentage >= 75, 'looping': progressPercentage >= 75 && progressPercentage < 95 }\">\n                <div class=\"node-circle\">\n                  <v-icon v-if=\"progressPercentage >= 95\">mdi-check</v-icon>\n                  <v-icon v-else-if=\"progressPercentage >= 75\">mdi-refresh</v-icon>\n                  <v-icon v-else>mdi-tune</v-icon>\n                </div>\n                <div class=\"node-label\">{{ $t('Calibration') }}</div>\n              </div>\n\n              <!-- 最终验证节点 -->\n              <div class=\"progress-node verification-node\" :class=\"{ 'active': progressPercentage >= 95 }\">\n                <div class=\"node-circle\">\n                  <v-icon v-if=\"isPolarAligned\">mdi-check</v-icon>\n                  <v-icon v-else>mdi-target</v-icon>\n                </div>\n                <div class=\"node-label\">{{ $t('Verification') }}</div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- 日志显示 -->\n        <div class=\"log-section\">\n          <div class=\"log-display\">\n            <div v-if=\"displayLogs.length > 0\" class=\"latest-log\" :class=\"displayLogs[0].level\">\n              <div class=\"log-timestamp\">{{ formatTime(displayLogs[0].timestamp) }}</div>\n              <div class=\"log-message\">{{ displayLogs[0].message }}</div>\n            </div>\n            <div v-else class=\"log-empty\">\n              {{ $t('No activity logs') }}\n            </div>\n          </div>\n        </div>\n\n        <!-- 位置信息 -->\n        <div class=\"position-section\">\n          <div class=\"position-grid\">\n            <div class=\"position-cell current\">\n              <div class=\"cell-label\">{{ $t('current RA') }}</div>\n              <div class=\"cell-value\">{{ currentPosition.ra }}</div>\n            </div>\n            <div class=\"position-cell current\">\n              <div class=\"cell-label\">{{ $t('current DEC') }}</div>\n              <div class=\"cell-value\">{{ currentPosition.dec }}</div>\n            </div>\n            <div class=\"position-cell target\">\n              <div class=\"cell-label\">{{ $t('target RA') }}</div>\n              <div class=\"cell-value\">{{ targetPosition.ra }}</div>\n            </div>\n            <div class=\"position-cell target\">\n              <div class=\"cell-label\">{{ $t('target DEC') }}</div>\n              <div class=\"cell-value\">{{ targetPosition.dec }}</div>\n            </div>\n          </div>\n        </div>\n\n        <!-- 调整指导 -->\n        <div class=\"adjustment-section\">\n          <div class=\"adjustment-instructions\">\n            <div class=\"adjustment-item\" :class=\"{ 'active': needsAzimuthAdjustment }\">\n              <div class=\"adjustment-icon\">\n                <v-icon>mdi-compass</v-icon>\n              </div>\n              <div class=\"adjustment-details\">\n                <div class=\"adjustment-header\">\n                  <span class=\"adjustment-type\">{{ $t('Azimuth') }}</span>\n                  <span class=\"adjustment-value\">{{ formatAdjustmentValue(adjustment.azimuth) }}</span>\n                </div>\n                <div class=\"adjustment-action\">\n                  {{ needsAzimuthAdjustment ? getAzimuthAction(adjustment.azimuth) : $t('No adjustment needed') }}\n                </div>\n\n              </div>\n            </div>\n\n            <div class=\"adjustment-item\" :class=\"{ 'active': needsAltitudeAdjustment }\">\n              <div class=\"adjustment-icon\">\n                <v-icon>mdi-compass</v-icon>\n              </div>\n              <div class=\"adjustment-details\">\n                <div class=\"adjustment-header\">\n                  <span class=\"adjustment-type\">{{ $t('Altitude') }}</span>\n                  <span class=\"adjustment-value\">{{ formatAdjustmentValue(adjustment.altitude) }}</span>\n                </div>\n                <div class=\"adjustment-action\">\n                  {{ needsAltitudeAdjustment ? getAltitudeAction(adjustment.altitude) : $t('No adjustment needed') }}\n                </div>\n\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- 控制按钮 -->\n        <div class=\"control-section\">\n          <div class=\"action-buttons\">\n            <button class=\"action-btn primary\" @click=\"startAutoCalibration\" :disabled=\"!canAutoCalibrate\">\n              <v-icon v-if=\"!isCalibrationRunning\">mdi-play-circle</v-icon>\n              <v-icon v-else>mdi-stop-circle</v-icon>\n              <span>{{ isCalibrationRunning ? $t('Stop Calibration') : $t('Start Auto Calibration') }}</span>\n            </button>\n\n\n\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n// 常量定义\nconst COLORS = {\n  PRIMARY: '#64b5f6',\n  SUCCESS: '#4caf50',\n  WARNING: '#ff9800',\n  ERROR: '#f44336',\n  INFO: '#2196f3',\n  WHITE: '#ffffff',\n  BACKGROUND: 'rgba(35, 35, 45, 0.95)',\n  SURFACE: 'rgba(60, 60, 70, 0.9)'\n}\n\nconst CALIBRATION_PHASES = {\n  INITIAL: 'initial',\n  COLLECTING: 'collecting',\n  ADJUSTING: 'adjusting',\n  VERIFYING: 'verifying'\n}\n\nconst PROGRESS_THRESHOLDS = {\n  INITIALIZATION: 15,\n  FIRST_CALIBRATION: 25,\n  SECOND_CALIBRATION: 50,\n  THIRD_CALIBRATION: 75,\n  CALIBRATION_LOOP: 95,\n  COMPLETION: 100\n}\n\nconst DIMENSIONS = {\n  MINIMIZED: { width: 250, height: 80 },\n  COLLAPSED: { width: 300, height: 120 },\n  EXPANDED: { width: 350, height: 400 }\n}\n\nconst LOG_LIMIT = 100\nconst DISPLAY_LOG_LIMIT = 10\n\nexport default {\n  name: 'AutomaticPolarAlignmentCalibration',\n\n  props: {\n    visible: {\n      type: Boolean,\n      default: false\n    },\n    autoStart: {\n      type: Boolean,\n      default: false\n    },\n    // 新增：传入调整数据的单位（'deg' | 'arcmin' | 'arcsec'）\n    adjustmentUnit: { type: String, default: 'arcmin' },\n\n    // 新增：用户站位视角（'north' | 'south'），用于左右映射\n    facingPole: { type: String, default: 'north' },\n\n    // 新增：动作死区（以角分定义，UI判定是否需要动作）\n    deadbandArcmin: { type: Number, default: 0.5 }\n  },\n\n  data() {\n    return {\n      // 连接状态\n      isConnected: false,\n\n      // 位置信息\n      currentPosition: {\n        ra: '00h 00m 00s',\n        dec: '+00° 00\\' 00\"'\n      },\n      targetPosition: {\n        ra: '00h 00m 00s',\n        dec: '+00° 00\\' 00\"'\n      },\n      previousPosition: {\n        ra: '00h 00m 00s',\n        dec: '+00° 00\\' 00\"'\n      },\n\n      // 校准数据\n      isCalibrationComplete: false,\n      isPolarAligned: false,\n\n      // 调整信息\n      adjustment: {\n        azimuth: 0.0,\n        altitude: 0.0\n      },\n\n      // 日志系统 - 使用循环数组优化内存\n      logs: [],\n      logIndex: 0,\n      logCapacity: LOG_LIMIT,\n\n      // 校准运行状态\n      isCalibrationRunning: false,\n\n      // 视场数据\n      fieldData: null,\n\n      // 当前进度\n      currentProgress: 0,\n\n      // === 新增：界面控制状态 ===\n      // 拖动状态\n      isDragging: false,\n      dragOffset: { x: 0, y: 0 },\n\n      // 控件位置\n      position: { x: 50, y: 50 },\n\n      // 界面状态\n      isMinimized: false,\n      isCollapsed: false,\n\n      // === 新增：性能优化 ===\n      // 缓存尺寸计算结果\n      cachedDimensions: {\n        width: 350,\n        height: 400\n      },\n      // 拖动状态标记\n      isDraggingState: false,\n\n      // 内存清理定时器\n      memoryCleanupTimer: null,\n\n      // 计算缓存\n      cachedAzimuthArcmin: null,\n      cachedAltitudeArcmin: null,\n      lastAzimuthValue: null,\n      lastAltitudeValue: null,\n\n      // 拖动性能优化\n      lastDragTime: 0,\n\n      // 极轴偏移量\n      polarAxisOffset: {\n        azimuth: 0,\n        altitude: 0\n      },\n\n      // 校准循环计数\n      calibrationLoopCount: 0,\n      lastCalibrationProgress: 0,\n\n      // 校准阶段状态\n      calibrationPhase: 'initial', // 'initial', 'collecting', 'adjusting', 'verifying'\n      calibrationPoints: [], // 存储三个校准点的坐标\n      maxCalibrationPoints: 3, // 最大校准点数量\n      targetPoint: null, // 存储目标点坐标\n\n      // 移除假极轴相关数据\n      // fakePolarAxis: {\n      //   ra: null,\n      //   dec: null,\n      //   calculated: false\n      // },\n    }\n  },\n\n  computed: {\n    // 显示的日志 - 使用缓存优化\n    displayLogs() {\n      // 返回最近的10条日志，按时间倒序（用于显示最新一条）\n      const logs = this.logs\n      if (logs.length <= DISPLAY_LOG_LIMIT) {\n        return logs.slice().reverse()\n      }\n      return logs.slice(-DISPLAY_LOG_LIMIT).reverse()\n    },\n\n    // 校准进度百分比\n    progressPercentage() {\n      // 使用从后端传入的进度\n      return this.currentProgress\n    },\n\n    // 是否可以自动校准\n    canAutoCalibrate() {\n      return this.isConnected\n    },\n\n    // 是否需要方位角调整 - 使用缓存避免重复计算\n    needsAzimuthAdjustment() {\n      const v = this.adjustment?.azimuth\n      if (!Number.isFinite(v)) return false\n      // 使用缓存的值，避免重复计算\n      return this.cachedAzimuthArcmin !== null ? \n        Math.abs(this.cachedAzimuthArcmin) > this.deadbandArcmin : \n        Math.abs(this.unitToArcmin(v, this.adjustmentUnit)) > this.deadbandArcmin\n    },\n\n    // 是否需要高度角调整 - 使用缓存避免重复计算\n    needsAltitudeAdjustment() {\n      const v = this.adjustment?.altitude\n      if (!Number.isFinite(v)) return false\n      // 使用缓存的值，避免重复计算\n      return this.cachedAltitudeArcmin !== null ? \n        Math.abs(this.cachedAltitudeArcmin) > this.deadbandArcmin : \n        Math.abs(this.unitToArcmin(v, this.adjustmentUnit)) > this.deadbandArcmin\n    }\n  },\n\n  watch: {\n    visible(newVal) {\n      if (newVal && this.autoStart) {\n        this.startAutoCalibration()\n      }\n    },\n    \n    // 监听当前坐标变化，自动更新朝向极点\n    '$store.state.currentLocation.lat': {\n      handler(newLat, oldLat) {\n        if (newLat !== oldLat && newLat !== undefined) {\n          const facingPole = this.calculateFacingPole()\n          this.addLog(this.$t('Location Changed', [facingPole, newLat]), 'info')\n          \n          // 如果正在调整阶段，重新计算调整建议\n          if (this.calibrationPhase === 'adjusting') {\n            this.addLog(this.$t('Recalculating Adjustment Directions'), 'info')\n          }\n        }\n      },\n      immediate: false\n    },\n\n    // 监听调整值变化，更新缓存 - 使用防抖避免频繁更新\n    'adjustment.azimuth': {\n      handler: function(newVal) {\n        if (Number.isFinite(newVal)) {\n          // 清除之前的定时器\n          if (this._azimuthUpdateTimer) {\n            clearTimeout(this._azimuthUpdateTimer)\n          }\n          // 使用防抖，延迟100ms更新\n          this._azimuthUpdateTimer = setTimeout(() => {\n            this.cachedAzimuthArcmin = this.unitToArcmin(newVal, this.adjustmentUnit)\n            this.lastAzimuthValue = newVal\n          }, 100)\n        }\n      },\n      immediate: true\n    },\n\n    'adjustment.altitude': {\n      handler: function(newVal) {\n        if (Number.isFinite(newVal)) {\n          // 清除之前的定时器\n          if (this._altitudeUpdateTimer) {\n            clearTimeout(this._altitudeUpdateTimer)\n          }\n          // 使用防抖，延迟100ms更新\n          this._altitudeUpdateTimer = setTimeout(() => {\n            this.cachedAltitudeArcmin = this.unitToArcmin(newVal, this.adjustmentUnit)\n            this.lastAltitudeValue = newVal\n          }, 100)\n        }\n      },\n      immediate: true\n    }\n  },\n\n    mounted() {\n      // 实现组件初始化逻辑\n      this.initialize()\n\n      // 初始化缓存的尺寸信息\n      this.updateCachedDimensions()\n\n      // 监听信号总线事件\n      this.$bus.$on('showPolarAlignment', this.showInterface)\n      this.$bus.$on('hidePolarAlignment', this.hideInterface)\n\n      // 监听赤道仪连接状态\n      this.$bus.$on('MountConnected', this.updateMountConnection)\n\n      // 接收状态更新\n      this.$bus.$on('PolarAlignmentState', this.updatePolarAlignmentState)\n\n      // 监听视场数据更新\n      this.$bus.$on('FieldDataUpdate', this.updateFieldData)\n\n      // 监听卡片信息更新\n      this.$bus.$on('updateCardInfo', this.updateCardInfo)\n\n      // 启动定期内存清理（每5分钟清理一次）\n      this.startMemoryCleanup()\n    },\n\n    beforeDestroy() {\n      // 移除信号总线监听\n      this.$bus.$off('showPolarAlignment', this.showInterface)\n      this.$bus.$off('hidePolarAlignment', this.hideInterface)\n      this.$bus.$off('MountConnected', this.updateMountConnection)\n      this.$bus.$off('PolarAlignmentState', this.updatePolarAlignmentState)\n      this.$bus.$off('FieldDataUpdate', this.updateFieldData)\n      this.$bus.$off('updateCardInfo', this.updateCardInfo)\n\n      // 清理拖动事件监听\n      this.cleanupDragListeners()\n\n      // 清理缓存数据\n      this.clearCachedData()\n\n      // 停止内存清理定时器\n      this.stopMemoryCleanup()\n\n      // 清理防抖定时器\n      this.clearDebounceTimers()\n\n      // 实现组件销毁逻辑\n      this.cleanup()\n    },\n\n    methods: {\n      // ========================================\n      // 信号总线事件处理\n      // ========================================\n      showInterface() {\n        this.$emit('update:visible', true)\n      },\n\n      hideInterface() {\n        this.$emit('update:visible', false)\n      },\n\n      updateMountConnection(status) {\n        this.isConnected = status === 1\n        const statusText = this.isConnected ? this.$t('Connected') : this.$t('Disconnected')\n        this.addLog(this.$t('Mount Connection Status', [statusText]), this.isConnected ? 'success' : 'warning')\n      },\n\n      // ========================================\n      // 初始化和清理\n      // ========================================\n      initialize() {\n        this.addLog(this.$t('Polar Alignment Component Initialized'), 'info')\n        \n        // 记录当前朝向极点\n        const facingPole = this.calculateFacingPole()\n        const lat = this.$store?.state?.currentLocation?.lat || 'unknown'\n        this.addLog(this.$t('Facing Pole', [facingPole, lat]), 'info')\n      },\n\n      cleanup() {\n        this.addLog(this.$t('Polar Alignment Component Cleaned'), 'info')\n      },\n\n      // 内存使用监控（仅在开发环境）\n      getMemoryUsage() {\n        if (process.env.NODE_ENV === 'development' && performance.memory) {\n          return {\n            usedJSHeapSize: Math.round(performance.memory.usedJSHeapSize / 1024 / 1024) + 'MB',\n            totalJSHeapSize: Math.round(performance.memory.totalJSHeapSize / 1024 / 1024) + 'MB',\n            jsHeapSizeLimit: Math.round(performance.memory.jsHeapSizeLimit / 1024 / 1024) + 'MB',\n            logsCount: this.logs.length,\n            calibrationPointsCount: this.calibrationPoints.length\n          }\n        }\n        return null\n      },\n\n      // 启动定期内存清理\n      startMemoryCleanup() {\n        this.memoryCleanupTimer = setInterval(() => {\n          this.performMemoryCleanup()\n        }, 5 * 60 * 1000) // 每5分钟清理一次\n      },\n\n      // 停止内存清理定时器\n      stopMemoryCleanup() {\n        if (this.memoryCleanupTimer) {\n          clearInterval(this.memoryCleanupTimer)\n          this.memoryCleanupTimer = null\n        }\n      },\n\n      // 执行内存清理\n      performMemoryCleanup() {\n        // 清理过期的日志（保留最近50条）\n        if (this.logs.length > 50) {\n          this.logs = this.logs.slice(-50)\n          this.logIndex = Math.min(this.logIndex, 50)\n        }\n\n        // 清理过期的校准点（如果超过最大数量）\n        if (this.calibrationPoints.length > this.maxCalibrationPoints) {\n          this.calibrationPoints = this.calibrationPoints.slice(-this.maxCalibrationPoints)\n        }\n\n        // 强制垃圾回收（如果可用）\n        if (window.gc && typeof window.gc === 'function') {\n          window.gc()\n        }\n\n        // 在开发环境输出内存使用情况\n        if (process.env.NODE_ENV === 'development') {\n          const memoryInfo = this.getMemoryUsage()\n          if (memoryInfo) {\n            console.log('Memory cleanup performed:', memoryInfo)\n          }\n        }\n      },\n\n      // 清理拖动事件监听器\n      cleanupDragListeners() {\n        document.removeEventListener('mousemove', this.onDrag)\n        document.removeEventListener('mouseup', this.stopDrag)\n        document.removeEventListener('touchmove', this.onDrag)\n        document.removeEventListener('touchend', this.stopDrag)\n      },\n\n      // 清理防抖定时器\n      clearDebounceTimers() {\n        if (this._azimuthUpdateTimer) {\n          clearTimeout(this._azimuthUpdateTimer)\n          this._azimuthUpdateTimer = null\n        }\n        if (this._altitudeUpdateTimer) {\n          clearTimeout(this._altitudeUpdateTimer)\n          this._altitudeUpdateTimer = null\n        }\n      },\n\n      // 清理缓存数据\n      clearCachedData() {\n        // 清理计算缓存\n        this.cachedAzimuthArcmin = null\n        this.cachedAltitudeArcmin = null\n        this.lastAzimuthValue = null\n        this.lastAltitudeValue = null\n        this.lastDragTime = 0\n        \n        // 清理日志数据\n        this.logs = []\n        this.logIndex = 0\n        \n        // 清理校准数据\n        this.calibrationPoints = []\n        this.targetPoint = null\n        this.fieldData = null\n        \n        // 清理位置数据\n        this.currentPosition = { ra: '00h 00m 00s', dec: '+00° 00\\' 00\"' }\n        this.targetPosition = { ra: '00h 00m 00s', dec: '+00° 00\\' 00\"' }\n        this.previousPosition = { ra: '00h 00m 00s', dec: '+00° 00\\' 00\"' }\n        \n        // 清理调整数据\n        this.adjustment = { azimuth: 0.0, altitude: 0.0 }\n        this.polarAxisOffset = { azimuth: 0, altitude: 0 }\n        \n        // 重置状态\n        this.isCalibrationComplete = false\n        this.isPolarAligned = false\n        this.calibrationLoopCount = 0\n        this.lastCalibrationProgress = 0\n        this.calibrationPhase = 'initial'\n      },\n\n      // ========================================\n      // 拖动控制方法\n      // ========================================\n      startDrag(event) {\n        if (event.target.closest('.header-controls, .minimized-controls, .header-btn, .minimized-btn')) {\n          return\n        }\n\n        this.isDragging = true\n        this.isDraggingState = true\n\n        // 添加dragging类，移除过渡动画\n        this.$el.classList.add('dragging')\n\n        const rect = event.currentTarget.getBoundingClientRect()\n        const clientX = event.clientX || event.touches?.[0]?.clientX || 0\n        const clientY = event.clientY || event.touches?.[0]?.clientY || 0\n\n        this.dragOffset = {\n          x: clientX - rect.left,\n          y: clientY - rect.top\n        }\n\n        // 预计算并缓存尺寸，避免拖动时重复计算\n        this.updateCachedDimensions()\n\n        // 优化触摸事件处理\n        if (event.type === 'touchstart') {\n          document.addEventListener('touchmove', this.onDrag, { passive: false })\n          document.addEventListener('touchend', this.stopDrag, { passive: false })\n        } else {\n          document.addEventListener('mousemove', this.onDrag)\n          document.addEventListener('mouseup', this.stopDrag)\n        }\n      },\n\n      onDrag(event) {\n        if (!this.isDragging) return\n\n        // 阻止默认行为，提高触摸响应性\n        if (event.type === 'touchmove') {\n          event.preventDefault()\n        }\n\n        // 使用更高效的节流机制\n        const now = Date.now()\n        if (this.lastDragTime && now - this.lastDragTime < 16) return // 60fps限制\n        this.lastDragTime = now\n        \n        const clientX = event.clientX || event.touches?.[0]?.clientX || 0\n        const clientY = event.clientY || event.touches?.[0]?.clientY || 0\n\n        const newX = clientX - this.dragOffset.x\n        const newY = clientY - this.dragOffset.y\n\n        // 使用缓存的尺寸，避免重复计算\n        const maxX = window.innerWidth - this.cachedDimensions.width\n        const maxY = window.innerHeight - this.cachedDimensions.height\n\n        this.position = {\n          x: Math.max(0, Math.min(newX, maxX)),\n          y: Math.max(0, Math.min(newY, maxY))\n        }\n      },\n\n      stopDrag() {\n        this.isDragging = false\n        this.isDraggingState = false\n\n        // 移除dragging类，恢复过渡动画\n        this.$el.classList.remove('dragging')\n\n        // 清理所有事件监听器\n        this.cleanupDragListeners()\n      },\n\n      // 新增：更新缓存的尺寸信息\n      updateCachedDimensions() {\n        if (this.isMinimized) {\n          this.cachedDimensions = { ...DIMENSIONS.MINIMIZED }\n        } else if (this.isCollapsed) {\n          this.cachedDimensions = { ...DIMENSIONS.COLLAPSED }\n        } else {\n          // 展开状态，使用基础尺寸\n          this.cachedDimensions = { ...DIMENSIONS.EXPANDED }\n        }\n      },\n\n      // 获取组件高度（优化版本）\n      getComponentHeight() {\n        // 如果正在拖动，使用缓存的尺寸\n        if (this.isDraggingState) {\n          return this.cachedDimensions.height\n        }\n\n        // 正常状态下的计算\n        if (this.isMinimized) {\n          return 80 // 最小化状态高度\n        } else if (this.isCollapsed) {\n          return 120 // 收缩状态高度\n        } else {\n          // 展开状态，根据内容自适应\n          const baseHeight = 400 // 基础高度\n          const logHeight = this.displayLogs.length > 0 ? 60 : 40\n          const adjustmentHeight = this.needsAzimuthAdjustment || this.needsAltitudeAdjustment ? 120 : 80\n          return Math.min(baseHeight + logHeight + adjustmentHeight, window.innerHeight * 0.8)\n        }\n      },\n\n      // ========================================\n      // 界面状态控制方法\n      // ========================================\n      toggleMinimize() {\n        this.isMinimized = !this.isMinimized\n        this.isCollapsed = false\n        // 更新缓存的尺寸信息\n        this.updateCachedDimensions()\n        this.addLog(this.isMinimized ? this.$t('Interface Minimized') : this.$t('Interface Expanded'), 'info')\n      },\n\n      toggleCollapse() {\n        this.isCollapsed = !this.isCollapsed\n        // 更新缓存的尺寸信息\n        this.updateCachedDimensions()\n        this.addLog(this.isCollapsed ? this.$t('Interface Collapsed') : this.$t('Interface Expanded'), 'info')\n      },\n\n      resetCalibration() {\n        // 使用统一的内存清理方法\n        this.clearCachedData()\n\n        this.addLog(this.$t('Calibration Data Reset'), 'info')\n        this.$bus.$emit('AppSendMessage', 'Vue_Command', 'ResetAutoPolarAlignment')\n        this.$bus.$emit('ClearCalibrationPoints')\n        this.$bus.$emit('ClearStatusTextFromStarMap')\n      },\n\n      restoreCalibration() {\n        this.addLog(this.$t('Calibration Data Restored'), 'success')\n        this.$bus.$emit('AppSendMessage', 'Vue_Command', 'RestoreAutoPolarAlignment')\n      },\n\n      // ========================================\n      // 校准控制方法\n      // ========================================\n      startAutoCalibration() {\n        if (!this.isConnected) {\n          this.addLog(this.$t('Error: Mount Not Connected'), 'error')\n          return\n        }\n        if (this.isCalibrationRunning) {\n          this.stopAutoCalibration()\n          return\n        }\n        this.isCalibrationRunning = true\n        this.resetCalibration()\n        this.addLog(this.$t('Starting Auto Calibration'), 'info')\n        this.$bus.$emit('AppSendMessage', 'Vue_Command', 'StartAutoPolarAlignment')\n      },\n\n      stopAutoCalibration() {\n        this.isCalibrationRunning = false\n        this.addLog(this.$t('Auto Calibration Stopped'), 'warning')\n        this.$bus.$emit('AppSendMessage', 'Vue_Command', 'StopAutoPolarAlignment')\n      },\n      // ========================================\n      // 视场数据处理方法\n      // ========================================\n      updateFieldData(data) {\n        if (data && Array.isArray(data) && data.length >= 12) { // 修改长度检查，确保包含假极轴数据\n          const isValidData = data.every(val => typeof val === 'number' && !isNaN(val))\n          if (!isValidData) {\n            this.addLog(this.$t('Warning: Invalid Field Data Received'), 'warning')\n            return\n          }\n\n          this.fieldData = {\n            ra: data[0],\n            dec: data[1],\n            ra0: data[2],\n            dec0: data[3],\n            ra1: data[4],\n            dec1: data[5],\n            ra2: data[6],\n            dec2: data[7],\n            ra3: data[8],\n            dec3: data[9],\n            targetra: data[10],\n            targetdec: data[11],\n            fakePolarRA: data[12],\n            fakePolarDEC: data[13],\n            realPolarRA: data[14],\n            realPolarDEC: data[15]\n          }\n\n          // 保存上一次位置（在更新当前位置之前）\n          if (this.currentPosition.ra !== '00h 00m 00s') {\n            this.previousPosition = { ...this.currentPosition }\n          }\n\n          // 更新当前位置\n          this.currentPosition = {\n            ra: this.formatCoordinate(data[0], 'ra'),\n            dec: this.formatCoordinate(data[1], 'dec')\n          }\n\n          if (data[10] === -1 && data[11] === -1) {\n            // 校准点收集阶段\n            this.calibrationPhase = 'collecting'\n            const pointNumber = this.calibrationPoints.length + 1\n\n            // 添加调试信息\n            this.addLog(`准备收集校准点${pointNumber}，当前已有${this.calibrationPoints.length}个点`, 'info')\n\n            try {\n              this.drawCalibrationPointPolygon(data[0], data[1], pointNumber, this.fieldData)\n              this.addLog(this.$t('Calibration Point', [pointNumber, data[0].toFixed(4), data[1].toFixed(4)]), 'info')\n\n              // 保存校准点 - 限制最大数量\n              if (this.calibrationPoints.length < this.maxCalibrationPoints) {\n                this.calibrationPoints.push({\n                  ra: data[0],\n                  dec: data[1],\n                  index: pointNumber\n                })\n              } else {\n                // 如果超过最大数量，替换最旧的点\n                const oldestIndex = (pointNumber - 1) % this.maxCalibrationPoints\n                this.calibrationPoints[oldestIndex] = {\n                  ra: data[0],\n                  dec: data[1],\n                  index: pointNumber\n                }\n              }\n\n              this.addLog(`校准点${pointNumber}已添加，现在总共有${this.calibrationPoints.length}个点`, 'info')\n\n              // 如果收集了3个点，进入调整阶段\n              if (this.calibrationPoints.length === this.maxCalibrationPoints) {\n                this.calibrationPhase = 'adjusting'\n                this.addLog(this.$t('Three calibration points collected, entering adjustment phase'), 'success')\n              }\n            } catch (error) {\n              this.addLog(this.$t('Error processing calibration point', [error.message]), 'error')\n              console.error('处理校准点错误：', error)\n            }\n          } else if (data[10] !== -1 && data[11] !== -1) {\n            // 调整阶段：显示目标位置和假极轴\n            this.calibrationPhase = 'adjusting'\n            this.targetPoint = { ra: data[10], dec: data[11] }\n\n            try {\n              // 先清除所有之前的元素\n              this.addLog('调整模式：准备清除之前的校准元素', 'info')\n              this.$bus.$emit('ClearCalibrationPoints')\n              this.addLog('调整模式：清除命令已发送', 'info')\n\n              // 绘制校准点（如果已收集3个点）\n              if (this.calibrationPoints.length === this.maxCalibrationPoints) {\n                this.calibrationPoints.forEach((point, index) => {\n                  const pointCoordinates = this.calculateFieldCorners(point.ra, point.dec, this.fieldData, false)\n                  const pointColor = {\n                    stroke: \"#FFD700\",        // 金色边框：校准点\n                    strokeOpacity: 1,         // 边框不透明度\n                    fill: \"#FFD700\",          // 金色填充：校准点\n                    fillOpacity: 0.3          // 填充不透明度（半透明）\n                  }\n\n                  this.$bus.$emit('DrawCalibrationPointPolygon', pointCoordinates, pointColor,\n                    `Calibration_Point_${index + 1}`, `校准点${index + 1}`, \"#FFD700\")\n                })\n              }\n\n              // 绘制当前位置（蓝色）\n              const currentCoordinates = this.calculateFieldCorners(data[0], data[1], this.fieldData, false)\n              const currentColor = {\n                stroke: \"#00BFFF\",        // 蓝色边框：当前位置\n                strokeOpacity: 1,         // 边框不透明度\n                fill: \"#00BFFF\",          // 蓝色填充：当前位置\n                fillOpacity: 0.3          // 填充不透明度（半透明）\n              }\n\n              this.$bus.$emit('DrawCalibrationPointPolygon', currentCoordinates, currentColor,\n                'Current_Position', '当前位置', \"#00BFFF\")\n\n              // 绘制目标点（绿色圆形）\n              const targetColor = {\n                stroke: \"#4CAF50\",        // 绿色边框：目标点\n                strokeOpacity: 1,         // 边框不透明度\n                fill: \"#4CAF50\",          // 绿色填充：目标点\n                fillOpacity: 0.3          // 填充不透明度（半透明）\n              }\n\n              const { az, alt } = this.equatorialToHorizontal(data[10], data[11], new Date(Date.now()), this.$store.state.currentLocation.lat, this.$store.state.currentLocation.lng)\n              // console.log('当前位置目标点', data[6], data[7] + ' 转化为地平坐标为' + az + ' ' + alt);\n              // console.log('使用时间和地点', new Date(Date.now()), $store.state.currentLocation.lat, $store.state.currentLocation.lng);\n\n              this.$bus.$emit('DrawTargetPointCircle',\n                az,\n                alt,\n                targetColor,\n                'Target_Point',\n                '目标点'\n              )\n\n              // 绘制假极轴（紫色圆形）\n              if (data[12] !== -1 && data[13] !== -1 && !isNaN(data[12]) && !isNaN(data[13])) {\n                const { az, alt } = this.equatorialToHorizontal(data[12], data[13], new Date(Date.now()), this.$store.state.currentLocation.lat, this.$store.state.currentLocation.lng)\n                this.drawFakePolarAxis(az, alt)\n              }\n\n              this.addLog(`调整模式：当前位置(${data[0].toFixed(4)}, ${data[1].toFixed(4)}) 目标位置(${data[6].toFixed(4)}, ${data[7].toFixed(4)}) 假极轴(${data[8].toFixed(4)}, ${data[9].toFixed(4)})`, 'info')\n            } catch (error) {\n              this.addLog(this.$t('Error processing adjustment data', [error.message]), 'error')\n              console.error('处理调整数据错误：', error)\n            }\n          }\n        } else {\n          this.addLog(this.$t('Error: Invalid Field Data Format'), 'error')\n        }\n      },\n\n      // 绘制校准点\n      drawCalibrationPointPolygon(ra, dec, pointNumber, fieldData) {\n        this.addLog(this.$t('Drawing Calibration Point', [pointNumber, ra, dec]), 'info')\n\n        try {\n          const coordinates = this.calculateFieldCorners(ra, dec, fieldData)\n          this.addLog(this.$t('Calculated Field Corner Coordinates', [JSON.stringify(coordinates)]), 'info')\n\n          // 验证坐标有效性\n          const validCoordinates = coordinates.every((coord, index) => {\n            const isValid = coord && typeof coord.ra === 'number' && typeof coord.dec === 'number' &&\n              !isNaN(coord.ra) && !isNaN(coord.dec) && isFinite(coord.ra) && isFinite(coord.dec)\n            if (!isValid) {\n              this.addLog(this.$t('Warning: Invalid Coordinate Point', [index, JSON.stringify(coord)]), 'warning')\n            }\n            return isValid\n          })\n\n          if (!validCoordinates) {\n            this.addLog(this.$t('Invalid Field Coordinates'), 'error')\n            return\n          }\n\n          const color = this.getCalibrationPointColor()\n\n          // 添加文本标签\n          const label = `校准点${pointNumber}`\n          const labelColor = \"#FFFFFF\"\n\n          this.addLog(this.$t('Sending Draw Calibration Event', [pointNumber]), 'info')\n          this.$bus.$emit('DrawCalibrationPointPolygon', coordinates, color, `Calibration_${pointNumber}`, label, labelColor)\n\n        } catch (error) {\n          this.addLog(this.$t('Error Drawing Calibration Point', [error.message]), 'error')\n          console.error('绘制校准点错误：', error)\n        }\n      },\n\n      // 清除所有校准点\n      clearCalibrationPoints() {\n        this.addLog(this.$t('Clearing All Calibration Points'), 'info')\n        this.$bus.$emit('ClearCalibrationPoints')\n        this.$bus.$emit('ClearStatusTextFromStarMap')\n      },\n\n      /**\n       * 绘制极轴校准调整点\n       * 在星图上绘制当前位置、目标位置、校准点等关键位置标记\n       * @param {number} currentRa - 当前赤经位置\n       * @param {number} currentDec - 当前赤纬位置  \n       * @param {number} targetRa - 目标赤经位置\n       * @param {number} targetDec - 目标赤纬位置\n       * @param {object} fieldData - 视场数据（包含视场边界信息）\n       * @param {boolean} isTimerUpdate - 是否为定时器更新（用于区分手动更新和自动更新）\n       */\n      drawAdjustmentPoints(currentRa, currentDec, targetRa, targetDec, fieldData, isTimerUpdate = false) {\n        // 这个方法现在主要用于校准点收集阶段\n        // 调整阶段的绘制逻辑已经移到updateFieldData方法中\n\n        this.addLog(this.$t('Starting Draw Adjustment Points', [currentRa, currentDec, targetRa, targetDec]), 'info')\n\n        try {\n          // 只在校准点收集阶段使用这个方法\n          if (this.calibrationPhase === 'collecting') {\n            // 绘制校准点收集阶段的逻辑\n            const currentCoordinates = this.calculateFieldCorners(currentRa, currentDec, fieldData, false)\n            const currentColor = {\n              stroke: \"#00BFFF\",        // 蓝色边框：当前位置\n              strokeOpacity: 1,         // 边框不透明度\n              fill: \"#00BFFF\",          // 蓝色填充：当前位置\n              fillOpacity: 0.3          // 填充不透明度（半透明）\n            }\n\n            this.$bus.$emit('DrawCalibrationPointPolygon', currentCoordinates, currentColor,\n              'Current_Position', '当前位置', \"#00BFFF\")\n          }\n\n        } catch (error) {\n          this.addLog(this.$t('Error Drawing Adjustment Points', [error.message]), 'error')\n          console.error('绘制调整点错误：', error)\n        }\n      },\n\n      /**\n       * 计算视场的五个角点坐标\n       * @param {number} centerRa - 视场中心的赤经坐标\n       * @param {number} centerDec - 视场中心的赤纬坐标\n       * @param {object} fieldData - 视场数据（包含视场边界信息）\n       * @param {boolean} useDefaultSize - 是否使用默认视场大小（用于目标点等固定位置）\n       * @returns {Array} 包含5个角点坐标的数组，用于绘制多边形\n       */\n      calculateFieldCorners(centerRa, centerDec, fieldData, useDefaultSize = false) {\n        this.addLog(this.$t('Calculating Field Corners', [centerRa, centerDec]), 'info')\n\n        // 如果指定使用默认大小或者没有视场数据，使用默认的0.5度视场大小\n        if (useDefaultSize || !fieldData) {\n          this.addLog(this.$t('Using Default Field Size: 0.5 Degrees'), 'info')\n          const fieldSize = 0.5\n          const coordinates = [\n            { ra: centerRa + fieldSize / 2, dec: centerDec + fieldSize / 2 },\n            { ra: centerRa - fieldSize / 2, dec: centerDec + fieldSize / 2 },\n            { ra: centerRa - fieldSize / 2, dec: centerDec - fieldSize / 2 },\n            { ra: centerRa + fieldSize / 2, dec: centerDec - fieldSize / 2 },\n            { ra: centerRa + fieldSize / 2, dec: centerDec + fieldSize / 2 }\n          ]\n          this.addLog(this.$t('Default Field Corners', [JSON.stringify(coordinates)]), 'info')\n          return coordinates\n        }\n\n        // 如果有视场数据且不强制使用默认大小，基于传入的中心点坐标计算视场角点\n        // 这种情况主要用于当前位置的显示，需要反映实际的视场大小\n        const { ra0, dec0, ra1, dec1, ra2, dec2, ra3, dec3 } = fieldData\n\n        // 计算视场的实际大小（RA和DEC方向的跨度）\n   \n\n        // 基于传入的中心点坐标，计算视场的五个角点\n        const coordinates = [\n          { ra: ra0, dec: dec0 },     // 右上角\n          { ra: ra1, dec: dec1 },     // 左上角\n          { ra: ra2, dec: dec2 },     // 左下角\n          { ra: ra3, dec: dec3 },     // 右下角\n          { ra: ra0, dec: dec0 }      // 回到右上角（闭合多边形）\n        ]\n\n        this.addLog(this.$t('Using Field Data', [ra0, dec0, ra1, dec1, ra2, dec2, ra3, dec3]), 'info')\n        this.addLog(this.$t('Field Corner Calculation Result', [JSON.stringify(coordinates)]), 'info')\n        return coordinates\n      },\n\n\n\n      // ========================================\n      // 格式化方法\n      // ========================================\n      formatTime(timestamp) {\n        if (!timestamp) return ''\n        const date = new Date(timestamp)\n        return date.toLocaleTimeString('zh-CN', {\n          hour12: false,\n          hour: '2-digit',\n          minute: '2-digit',\n          second: '2-digit'\n        })\n      },\n\n      formatAdjustmentValue(value) {\n        if (!Number.isFinite(value)) return `0.0${this.unitGlyph(this.adjustmentUnit)}`\n        // value 的单位 = props.adjustmentUnit\n        const valArcmin = this.unitToArcmin(value, this.adjustmentUnit)\n        // 展示单位仍然用 props.adjustmentUnit（也可改成固定‘arcmin’）\n        return this.formatWithUnit(valArcmin, this.adjustmentUnit, 1)\n      },\n\n      // 格式化坐标显示\n      formatCoordinate(value, type) {\n        if (value === null || value === undefined || isNaN(value)) {\n          return type === 'ra' ? '00h 00m 00s' : '+00° 00\\' 00\"'\n        }\n\n        if (type === 'ra') {\n          // 格式化RA为时分秒格式\n          const hours = Math.floor(value / 15)\n          const minutes = Math.floor((value % 15) * 4)\n          const seconds = Math.floor(((value % 15) * 4 - minutes) * 60)\n          return `${hours.toString().padStart(2, '0')}h ${minutes.toString().padStart(2, '0')}m ${seconds.toString().padStart(2, '0')}s`\n        } else {\n          // 格式化DEC为度分秒格式\n          const sign = value >= 0 ? '+' : '-'\n          const absValue = Math.abs(value)\n          const degrees = Math.floor(absValue)\n          const minutes = Math.floor((absValue - degrees) * 60)\n          const seconds = Math.floor(((absValue - degrees) * 60 - minutes) * 60)\n          return `${sign}${degrees.toString().padStart(2, '0')}° ${minutes.toString().padStart(2, '0')}' ${seconds.toString().padStart(2, '0')}\"`\n        }\n      },\n\n\n      // ========================================\n      // 辅助方法\n      // ========================================\n      parseCoordinate(value, type) {\n        if (typeof value === 'string') {\n          if (type === 'ra') {\n            // 解析时分秒格式 \"00h 00m 00s\"\n            const match = value.match(/(\\d+)h\\s*(\\d+)m\\s*(\\d+)s/)\n            if (match) {\n              const hours = parseInt(match[1])\n              const minutes = parseInt(match[2])\n              const seconds = parseInt(match[3])\n              return hours + minutes / 60 + seconds / 3600\n            }\n          } else {\n            // 解析度分秒格式 \"+00° 00' 00\"\"\n            const match = value.match(/([+-]?)(\\d+)°\\s*(\\d+)'\\s*(\\d+)\"/)\n            if (match) {\n              const sign = match[1] === '-' ? -1 : 1\n              const degrees = parseInt(match[2])\n              const minutes = parseInt(match[3])\n              const seconds = parseInt(match[4])\n              return sign * (degrees + minutes / 60 + seconds / 3600)\n            }\n          }\n        }\n        return null\n      },\n\n      addStatusTextToStarMap() {\n        // 添加状态文本到星图\n        const statusText = {\n          text: `极轴校准调整中 - 校准点: ${this.calibrationPoints.length}/3`,\n          position: { ra: this.currentPosition.ra, dec: this.currentPosition.dec },\n          color: \"#FFFFFF\",\n          fontSize: 14,\n          backgroundColor: \"rgba(0, 0, 0, 0.7)\"\n        }\n\n        // 发送状态文本到星图\n        // this.$bus.$emit('AddStatusTextToStarMap', statusText)\n      },\n\n      getStepClass(index) {\n        // 根据进度百分比确定节点状态\n        const progress = this.progressPercentage\n\n        switch (index) {\n          case 0: // 初始化节点\n            if (progress >= PROGRESS_THRESHOLDS.INITIALIZATION) return { completed: true }\n            if (progress >= 0) return { current: true }\n            return {}\n\n          case 1: // 第一次校准节点\n            if (progress >= PROGRESS_THRESHOLDS.FIRST_CALIBRATION) return { completed: true }\n            if (progress >= PROGRESS_THRESHOLDS.INITIALIZATION) return { current: true }\n            return {}\n\n          case 2: // 第二次校准节点\n            if (progress >= PROGRESS_THRESHOLDS.SECOND_CALIBRATION) return { completed: true }\n            if (progress >= PROGRESS_THRESHOLDS.FIRST_CALIBRATION) return { current: true }\n            return {}\n\n          case 3: // 第三次校准节点\n            if (progress >= PROGRESS_THRESHOLDS.THIRD_CALIBRATION) return { completed: true }\n            if (progress >= PROGRESS_THRESHOLDS.SECOND_CALIBRATION) return { current: true }\n            return {}\n\n          default:\n            return {}\n        }\n      },\n\n      getAzimuthAction(azVal) {\n        if (!Number.isFinite(azVal)) return ''\n        const arcmin = this.unitToArcmin(azVal, this.adjustmentUnit)\n        if (Math.abs(arcmin) <= this.deadbandArcmin) return this.$t('No adjustment needed')\n        const dir = this.azLabelBySign(arcmin)\n        // 输出单位与 props.adjustmentUnit 保持一致\n        return `${dir} ${this.formatWithUnit(arcmin, this.adjustmentUnit, 1)}`\n      },\n\n      getAltitudeAction(altVal) {\n        if (!Number.isFinite(altVal)) return ''\n        const arcmin = this.unitToArcmin(altVal, this.adjustmentUnit)\n        if (Math.abs(arcmin) <= this.deadbandArcmin) return this.$t('No adjustment needed')\n        const dir = this.altLabelBySign(arcmin)\n        return `${dir} ${this.formatWithUnit(arcmin, this.adjustmentUnit, 1)}`\n      },\n\n\n\n      // ========================================\n      // 日志方法\n      // ========================================\n      addLog(message, level = 'info') {\n        const log = {\n          id: Date.now() + Math.random(),\n          message,\n          level,\n          timestamp: new Date()\n        }\n        \n        // 生产环境减少console输出\n        if (process.env.NODE_ENV === 'development') {\n          console.log(log.message)\n        }\n        \n        // 使用循环数组优化内存使用\n        if (this.logs.length < this.logCapacity) {\n          this.logs.push(log)\n        } else {\n          // 循环覆盖旧日志\n          this.logs[this.logIndex] = log\n          this.logIndex = (this.logIndex + 1) % this.logCapacity\n        }\n      },\n\n      clearLogs() {\n        this.logs = []\n        this.logIndex = 0\n      },\n\n      // ========================================\n      // 极轴校准状态更新方法\n      // ========================================\n      calculatePolarAxisOffset() {\n        this.polarAxisOffset = {\n          azimuth: this.adjustment.azimuth,\n          altitude: this.adjustment.altitude\n        }\n      },\n\n      updatePolarAlignmentState(stateNumber, logMessage, progress) {\n        if (logMessage && typeof logMessage === 'string') {\n          let level = 'info'\n          if (logMessage.toLowerCase().includes('error') || logMessage.toLowerCase().includes('失败')) {\n            level = 'error'\n          } else if (logMessage.toLowerCase().includes('warning') || logMessage.toLowerCase().includes('警告')) {\n            level = 'warning'\n          } else if (logMessage.toLowerCase().includes('success') || logMessage.toLowerCase().includes('成功') || logMessage.toLowerCase().includes('完成')) {\n            level = 'success'\n          }\n          this.addLog(logMessage, level)\n        }\n\n        if (progress !== undefined && progress !== null) {\n          this.currentProgress = progress\n\n          if (progress >= 0 && progress <= 100) {\n            // 根据进度更新校准状态\n            if (progress >= 0 && progress < 15) {\n              // 初始化阶段\n              this.calibrationPoints = []\n              this.isCalibrationComplete = false\n              this.isPolarAligned = false\n            } else if (progress >= 15 && progress < 25) {\n              // 第一次校准阶段 - 移除模拟数据添加，实际校准点由updateFieldData处理\n              // 这里只更新状态，不添加模拟校准点\n            } else if (progress >= 25 && progress < 50) {\n              // 第二次校准阶段 - 移除模拟数据添加，实际校准点由updateFieldData处理\n              // 这里只更新状态，不添加模拟校准点\n            } else if (progress >= 50 && progress < 75) {\n              // 第三次校准阶段 - 移除模拟数据添加，实际校准点由updateFieldData处理\n              // 这里只更新状态，不添加模拟校准点\n            } else if (progress >= 75 && progress < 95) {\n              // 循环校准调整阶段\n              this.isCalibrationComplete = true\n              this.calculatePolarAxisOffset()\n\n              // 检测校准循环\n              if (progress < this.lastCalibrationProgress && this.lastCalibrationProgress >= 75) {\n                this.calibrationLoopCount++\n                this.addLog(this.$t('Calibration Round Started', [this.calibrationLoopCount]), 'info')\n              }\n\n              // 在循环校准阶段，进度可能会在75-95之间波动\n              // 这表示系统正在进行多次校准调整\n              if (progress > 85) {\n                this.addLog(this.$t('Calibration Progress Info', [Math.round(progress), this.calibrationLoopCount]), 'info')\n              }\n\n              this.lastCalibrationProgress = progress\n            } else if (progress >= 95 && progress <= 100) {\n              // 最终验证阶段\n              this.isCalibrationComplete = true\n              this.calculatePolarAxisOffset()\n\n              if (Math.abs(this.polarAxisOffset.azimuth) < 1.0 && Math.abs(this.polarAxisOffset.altitude) < 1.0) {\n                this.isPolarAligned = true\n                this.addLog(this.$t('Polar Alignment Completed'), 'success')\n              } else {\n                this.addLog(this.$t('Polar Alignment Needs Manual Adjustment'), 'warning')\n              }\n            }\n          }\n        }\n      },\n\n      // ========================================\n      // 坐标转换方法\n      // ========================================\n      /**\n       * 赤道坐标 (RA, Dec) → 地平坐标 (Az, Alt)\n       * @param {number} raDeg 赤经 (度, 0~360)\n       * @param {number} decDeg 赤纬 (度, -90~+90)\n       * @param {Date} dateUTC 观测时间 (UTC 时间)\n       * @param {number} latDeg 观测点纬度 (度, 北正南负)\n       * @param {number} lonDeg 观测点经度 (度, 东正西负)\n       * @returns {{az: number, alt: number}} 方位角/高度角 (度)\n       */\n      equatorialToHorizontal(raDeg, decDeg, dateUTC, latDeg, lonDeg) {\n        // 工具\n        const toJD = d => (Number(d) / 86400000) + 2440587.5; // Date/ms → JD\n        const d2r = x => x * Math.PI / 180, r2d = x => x * 180 / Math.PI;\n        const norm360 = a => ((a % 360) + 360) % 360;\n        const clamp = (x, lo = -1, hi = 1) => Math.min(hi, Math.max(lo, x));\n\n        // 入参归一化 + 硬校验\n        raDeg = Number(raDeg);\n        decDeg = Number(decDeg);\n        latDeg = Number(latDeg);\n        lonDeg = Number(lonDeg);\n        const tms = Number(dateUTC); // Date 或时间戳都可\n\n        if (process.env.NODE_ENV === 'development') {\n          console.log('EQ→HOR 入参:', { raDeg, decDeg, latDeg, lonDeg, dateUTC, tms });\n        }\n\n        if (![raDeg, decDeg, latDeg, lonDeg, tms].every(Number.isFinite)) {\n          console.error('EQ→HOR 入参非法:', { raDeg, decDeg, latDeg, lonDeg, dateUTC, tms });\n          return { az: NaN, alt: NaN };\n        }\n\n        try {\n          // 1) JD & GMST\n          const JD = toJD(tms);\n          const d = JD - 2451545.0;\n          let GMST = norm360(280.46061837 + 360.98564736629 * d); // 度\n\n          // 2) LST（东经为正）\n          let LST = norm360(GMST + lonDeg);\n\n          // 3) HA（-180~180 更稳）\n          let HA = LST - raDeg;\n          HA = ((HA + 180) % 360) - 180;\n\n          // 4) Alt / Az（稳定形式）\n          const ha = d2r(HA);\n          const dec = d2r(decDeg);\n          const lat = d2r(latDeg);\n\n          const sinAlt = clamp(\n            Math.sin(dec) * Math.sin(lat) + Math.cos(dec) * Math.cos(lat) * Math.cos(ha)\n          );\n          const alt = Math.asin(sinAlt);\n          const y = -Math.sin(ha) * Math.cos(dec);\n          const x = Math.sin(dec) * Math.cos(lat) - Math.cos(dec) * Math.sin(lat) * Math.cos(ha);\n          const az = Math.atan2(y, x);\n\n          const altDeg = r2d(alt);\n          const azDeg = norm360(r2d(az));\n\n          if (process.env.NODE_ENV === 'development') {\n            console.log('EQ→HOR 结果:', {\n              JD, GMST, LST, HA,\n              haRad: ha, decRad: dec, latRad: lat,\n              az: azDeg, alt: altDeg\n            });\n          }\n\n          return { az: azDeg, alt: altDeg };\n        } catch (e) {\n          console.error('EQ→HOR 计算异常:', e, {\n            raDeg, decDeg, latDeg, lonDeg, dateUTC, tms\n          });\n          return { az: NaN, alt: NaN };\n        }\n      },\n\n\n\n\n\n      // === 增强的卡片信息更新方法 ===\n      updateCardInfo(currentRa, currentDec, targetRa, targetDec, azimuthVal, altitudeVal, raAdjustment, decAdjustment, unitHint) {\n        const parseValue = v => (v === null || v === '' || v === undefined) ? 0 : (Number(v) || 0)\n\n        const currentRaNum = parseValue(currentRa)\n        const currentDecNum = parseValue(currentDec)\n        const targetRaNum = parseValue(targetRa)\n        const targetDecNum = parseValue(targetDec)\n        const azVal = parseValue(azimuthVal)\n        const altVal = parseValue(altitudeVal)\n\n        // 1) 位置显示（原样）\n        this.currentPosition.ra = this.formatCoordinate(currentRaNum, 'ra')\n        this.currentPosition.dec = this.formatCoordinate(currentDecNum, 'dec')\n        this.targetPosition.ra = this.formatCoordinate(targetRaNum, 'ra')\n        this.targetPosition.dec = this.formatCoordinate(targetDecNum, 'dec')\n\n        // 2) 调整量：以传入单位为准写入（默认用 props.adjustmentUnit）\n        const inUnit = unitHint || this.adjustmentUnit\n        // 如果传入是\"度\"，但你 props 设为了\"arcmin\"，也没关系——显示会自动换算\n        // 这里保存\"原始数 + 它的单位（通过 props）\"\n        this.adjustment.azimuth = azVal\n        this.adjustment.altitude = altVal\n        this.adjustmentUnit = inUnit  // 如果希望每次随数据切换单位，可加入这一行\n\n        // 3) 在调整阶段，每次接收到调整数据时增加校准轮数\n        if (this.calibrationPhase === 'adjusting') {\n          this.calibrationLoopCount++\n          this.addLog(this.$t('Calibration Round Started', [this.calibrationLoopCount]), 'info')\n        }\n\n        // 4) 极轴完成判定（用角分比较）\n        const azArcmin = this.unitToArcmin(azVal, inUnit)\n        const altArcmin = this.unitToArcmin(altVal, inUnit)\n        this.isPolarAligned = Math.abs(azArcmin) < 1.0 && Math.abs(altArcmin) < 1.0\n\n        if (process.env.NODE_ENV === 'development') {\n          console.log('PolarAlignment update:', {\n            unit: inUnit,\n            adj_raw: { azimuth: azVal, altitude: altVal },\n            adj_arcmin: { az: azArcmin, alt: altArcmin },\n            isPolarAligned: this.isPolarAligned,\n            calibrationRound: this.calibrationLoopCount\n          })\n        }\n      },\n\n\n      /**\n       * 根据三个校准点计算假极轴位置\n       * 使用三点极轴校准算法\n       */\n      calculateFakePolarAxis() {\n        if (this.calibrationPoints.length !== this.maxCalibrationPoints) {\n          this.addLog('需要3个校准点才能计算假极轴位置', 'warning')\n          return false\n        }\n\n        try {\n          const [p1, p2, p3] = this.calibrationPoints\n\n          // 将三个点转换为笛卡尔坐标\n          const cart1 = this.equatorialToCartesian(p1.ra, p1.dec)\n          const cart2 = this.equatorialToCartesian(p2.ra, p2.dec)\n          const cart3 = this.equatorialToCartesian(p3.ra, p3.dec)\n\n          // 计算两个向量\n          const v1 = {\n            x: cart2.x - cart1.x,\n            y: cart2.y - cart1.y,\n            z: cart2.z - cart1.z\n          }\n          const v2 = {\n            x: cart3.x - cart1.x,\n            y: cart3.y - cart1.y,\n            z: cart3.z - cart1.z\n          }\n\n          // 计算法向量（叉积）\n          const normal = this.crossProduct(v1, v2)\n\n          // 检查法向量是否为零向量\n          const normalLength = this.vectorLength(normal)\n          if (normalLength < 1e-10) {\n            this.addLog('三个校准点共线，无法计算假极轴位置', 'error')\n            return false\n          }\n\n          // 归一化法向量\n          const unitNormal = this.normalizeVector(normal)\n\n          // 计算与单位球面的交点（假极点）\n          const fakePolarPoint = {\n            x: unitNormal.x,\n            y: unitNormal.y,\n            z: unitNormal.z\n          }\n\n          // 选择正确的交点（z坐标为正的）\n          if (fakePolarPoint.z < 0) {\n            fakePolarPoint.x = -fakePolarPoint.x\n            fakePolarPoint.y = -fakePolarPoint.y\n            fakePolarPoint.z = -fakePolarPoint.z\n          }\n\n          // 将假极点转换为赤道坐标\n          const fakePolarEquatorial = this.cartesianToEquatorial(fakePolarPoint)\n\n          // 保存假极轴位置\n          this.fakePolarAxis.ra = fakePolarEquatorial.ra\n          this.fakePolarAxis.dec = fakePolarEquatorial.dec\n          this.fakePolarAxis.calculated = true\n\n          this.addLog(`假极轴位置计算完成: RA=${fakePolarEquatorial.ra.toFixed(4)}°, DEC=${fakePolarEquatorial.dec.toFixed(4)}°`, 'success')\n\n          return true\n        } catch (error) {\n          this.addLog(`计算假极轴位置时出错: ${error.message}`, 'error')\n          console.error('计算假极轴位置错误：', error)\n          return false\n        }\n      },\n\n      /**\n       * 将赤道坐标转换为笛卡尔坐标\n       */\n      equatorialToCartesian(ra, dec, radius = 1) {\n        const raRad = ra * Math.PI / 180.0\n        const decRad = dec * Math.PI / 180.0\n\n        return {\n          x: radius * Math.cos(decRad) * Math.cos(raRad),\n          y: radius * Math.cos(decRad) * Math.sin(raRad),\n          z: radius * Math.sin(decRad)\n        }\n      },\n\n      /**\n       * 将笛卡尔坐标转换为赤道坐标\n       */\n      cartesianToEquatorial(cart) {\n        const radius = Math.sqrt(cart.x * cart.x + cart.y * cart.y + cart.z * cart.z)\n\n        const dec = Math.asin(cart.z / radius) * 180.0 / Math.PI\n        let ra = Math.atan2(cart.y, cart.x) * 180.0 / Math.PI\n\n        // 确保RA在0-360度范围内\n        if (ra < 0) ra += 360.0\n\n        return { ra, dec }\n      },\n\n      /**\n       * 计算两个向量的叉积\n       */\n      crossProduct(v1, v2) {\n        return {\n          x: v1.y * v2.z - v1.z * v2.y,\n          y: v1.z * v2.x - v1.x * v2.z,\n          z: v1.x * v2.y - v1.y * v2.x\n        }\n      },\n\n      /**\n       * 计算向量长度\n       */\n      vectorLength(v) {\n        return Math.sqrt(v.x * v.x + v.y * v.y + v.z * v.z)\n      },\n\n      /**\n       * 归一化向量\n       */\n      normalizeVector(v) {\n        const length = this.vectorLength(v)\n        return {\n          x: v.x / length,\n          y: v.y / length,\n          z: v.z / length\n        }\n      },\n\n      /**\n       * 绘制假极轴位置\n       */\n      drawFakePolarAxis(fakePolarRA, fakePolarDEC) {\n        this.addLog(`绘制假极轴位置: RA=${fakePolarRA.toFixed(4)}°, DEC=${fakePolarDEC.toFixed(4)}°`, 'info')\n\n        try {\n          // 定义假极轴的颜色（紫色）\n          const fakePolarColor = {\n            stroke: \"#9C27B0\",        // 紫色边框\n            strokeOpacity: 1,         // 边框不透明度\n            fill: \"#9C27B0\",          // 紫色填充\n            fillOpacity: 0.3          // 填充不透明度（半透明）\n          }\n\n          // 使用专门的假极轴绘制事件，避免与目标点冲突\n          this.$bus.$emit('DrawFakePolarAxisCircle',\n            fakePolarRA,\n            fakePolarDEC,\n            fakePolarColor,\n            'FakePolarAxis',\n            '假极轴'\n          )\n\n          this.addLog(`假极轴位置已绘制: RA=${fakePolarRA.toFixed(4)}°, DEC=${fakePolarDEC.toFixed(4)}°`, 'info')\n\n        } catch (error) {\n          this.addLog(`绘制假极轴位置时出错: ${error.message}`, 'error')\n          console.error('绘制假极轴位置错误：', error)\n        }\n      },\n      // ========================================\n      // 单位换算方法\n      // ========================================\n      unitToArcmin(val, unit) {\n        if (!Number.isFinite(val)) return NaN\n        if (unit === 'deg') return val * 60\n        if (unit === 'arcsec') return val / 60\n        return val // 'arcmin'\n      },\n      arcminToUnit(valArcmin, unit) {\n        if (!Number.isFinite(valArcmin)) return NaN\n        if (unit === 'deg') return valArcmin / 60\n        if (unit === 'arcsec') return valArcmin * 60\n        return valArcmin\n      },\n      unitGlyph(unit) {\n        if (unit === 'deg') return '°'\n        if (unit === 'arcsec') return '″'\n        return '′' // arcmin\n      },\n\n      // ========================================\n      // 左右/上下映射（面向极点）方法\n      // ========================================\n      // 根据当前坐标计算朝向哪个极点\n      calculateFacingPole() {\n        if (!this.$store || !this.$store.state.currentLocation) {\n          return 'north' // 默认返回北极\n        }\n        \n        const lat = this.$store.state.currentLocation.lat\n        // 北半球（纬度 > 0）面向北极，南半球（纬度 < 0）面向南极\n        return lat >= 0 ? 'north' : 'south'\n      },\n\n      // azSign > 0 = 朝东；azSign < 0 = 朝西\n      azLabelBySign(azSign) {\n        // 动态计算朝向极点，而不是使用 props\n        const facingPole = this.calculateFacingPole()\n        // 面向北极点：东=→右，西=←左；面向南极点则相反\n        const east = (facingPole === 'north') ? this.$t('→ Right (East)') : this.$t('← Left (East)')\n        const west = (facingPole === 'north') ? this.$t('← Left (West)') : this.$t('→ Right (West)')\n        return azSign >= 0 ? east : west\n      },\n      // altSign > 0 = 抬高；altSign < 0 = 降低\n      altLabelBySign(altSign) {\n        return altSign >= 0 ? this.$t('↑ Up (Raise)') : this.$t('↓ Down (Lower)')\n      },\n\n      // ========================================\n      // 统一格式化\"数值 + 单位\"方法\n      // ========================================\n      formatWithUnit(valInArcmin, unit, digits = 1) {\n        const v = this.arcminToUnit(Math.abs(valInArcmin), unit)\n        const glyph = this.unitGlyph(unit)\n        return `${v.toFixed(digits)}${glyph}`\n      },\n\n      // ========================================\n      // 颜色工具方法\n      // ========================================\n      getCalibrationPointColor() {\n        return {\n          stroke: COLORS.WHITE,\n          strokeOpacity: 1,\n          fill: COLORS.WHITE,\n          fillOpacity: 0.2\n        }\n      },\n\n      getCurrentPositionColor() {\n        return {\n          stroke: \"#00BFFF\",\n          strokeOpacity: 1,\n          fill: \"#00BFFF\",\n          fillOpacity: 0.3\n        }\n      },\n\n      getTargetPointColor() {\n        return {\n          stroke: COLORS.SUCCESS,\n          strokeOpacity: 1,\n          fill: COLORS.SUCCESS,\n          fillOpacity: 0.3\n        }\n      },\n\n      getFakePolarAxisColor() {\n        return {\n          stroke: \"#9C27B0\",\n          strokeOpacity: 1,\n          fill: \"#9C27B0\",\n          fillOpacity: 0.3\n        }\n      },\n    },\n  }\n</script>\n\n<style scoped>\n/* === 最小化状态样式 === */\n.polar-alignment-minimized {\n  position: fixed;\n  width: 250px;\n  max-width: 80vw;\n  background: rgba(35, 35, 45, 0.95);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  border-radius: 8px;\n  backdrop-filter: blur(10px);\n  z-index: 1000;\n  cursor: move;\n  user-select: none;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);\n  transition: all 0.3s ease;\n  /* 添加背景隔离，防止操作映射到背景 */\n  isolation: isolate;\n  /* 移除contain属性，它可能阻止拖动事件 */\n  touch-action: none;\n  -webkit-tap-highlight-color: transparent;\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n\n/* 拖动状态：移除过渡动画和复杂效果 */\n.polar-alignment-minimized.dragging {\n  transition: none !important;\n  backdrop-filter: none !important;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2) !important;\n  touch-action: manipulation;\n}\n\n.polar-alignment-minimized:hover {\n  box-shadow: 0 6px 25px rgba(0, 0, 0, 0.4);\n}\n\n.polar-alignment-minimized.dragging:hover {\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2) !important;\n}\n\n.minimized-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 8px 12px;\n  background: rgba(60, 60, 70, 0.9);\n  border-radius: 8px 8px 0 0;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.minimized-drag-area {\n  display: flex;\n  align-items: center;\n  flex: 1;\n  cursor: move;\n  /* 确保拖动区域有正确的交互 */\n  user-select: none;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  touch-action: none;\n  -webkit-tap-highlight-color: transparent;\n}\n\n.minimized-icon {\n  color: #64b5f6;\n  font-size: 16px;\n  margin-right: 8px;\n}\n\n.minimized-title {\n  font-size: 12px;\n  font-weight: 600;\n  color: #ffffff;\n  flex: 1;\n}\n\n.minimized-controls {\n  display: flex;\n  gap: 4px;\n  /* 确保控制区域可以接收事件 */\n  position: relative;\n  z-index: 20;\n  pointer-events: auto;\n}\n\n.minimized-btn {\n  width: 24px;\n  height: 24px;\n  border: none;\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 4px;\n  color: #ffffff;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.2s ease;\n  /* 移动端触摸优化 */\n  touch-action: manipulation;\n  -webkit-tap-highlight-color: transparent;\n  /* 确保按钮可以正确点击 */\n  position: relative;\n  z-index: 10;\n  /* 确保按钮可以接收点击事件 */\n  pointer-events: auto;\n}\n\n.minimized-btn:hover {\n  background: rgba(255, 255, 255, 0.2);\n}\n\n.minimized-btn:active {\n  background: rgba(255, 255, 255, 0.3);\n  transform: scale(0.95);\n}\n\n.minimized-status {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 8px 12px;\n  font-size: 11px;\n}\n\n.status-indicator {\n  width: 6px;\n  height: 6px;\n  border-radius: 50%;\n  background: #f44336;\n  transition: all 0.3s ease;\n}\n\n.status-indicator.online {\n  background: #4caf50;\n  box-shadow: 0 0 4px rgba(76, 175, 80, 0.6);\n}\n\n.status-text {\n  color: rgba(255, 255, 255, 0.8);\n}\n\n/* === 完整控件样式 === */\n.polar-alignment-widget {\n  position: fixed;\n  width: 350px;\n  max-width: 90vw;\n  background: rgba(35, 35, 45, 0.95);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  border-radius: 8px;\n  backdrop-filter: blur(10px);\n  z-index: 1000;\n  cursor: move;\n  user-select: none;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);\n  transition: all 0.3s ease;\n  overflow: hidden;\n  /* 添加背景隔离，防止操作映射到背景 */\n  isolation: isolate;\n  /* 移除contain属性，它可能阻止拖动事件 */\n  touch-action: none;\n  -webkit-tap-highlight-color: transparent;\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n\n/* 拖动状态：移除过渡动画和复杂效果 */\n.polar-alignment-widget.dragging {\n  transition: none !important;\n  backdrop-filter: none !important;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2) !important;\n  touch-action: manipulation;\n}\n\n.polar-alignment-widget:hover {\n  box-shadow: 0 6px 25px rgba(0, 0, 0, 0.4);\n}\n\n.polar-alignment-widget.dragging:hover {\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2) !important;\n}\n\n.polar-alignment-widget.collapsed {\n  width: 300px;\n  max-width: 85vw;\n}\n\n/* === 控件头部样式 === */\n.widget-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 12px 16px;\n  background: rgba(60, 60, 70, 0.9);\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.header-drag-area {\n  display: flex;\n  align-items: center;\n  flex: 1;\n  cursor: move;\n  /* 确保拖动区域有正确的交互 */\n  user-select: none;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  /* 添加拖动时的视觉反馈 */\n  transition: background-color 0.2s ease;\n  /* 确保拖动区域有正确的指针事件 */\n  pointer-events: auto;\n  touch-action: none;\n  -webkit-tap-highlight-color: transparent;\n}\n\n.widget-header:hover {\n  background: rgba(60, 60, 70, 0.95);\n}\n\n.header-left {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  flex: 1;\n}\n\n.header-icon {\n  color: #64b5f6;\n  font-size: 18px;\n}\n\n.header-title {\n  font-size: 14px;\n  font-weight: 600;\n  color: #ffffff;\n}\n\n.connection-indicator {\n  display: flex;\n  align-items: center;\n}\n\n.status-dot {\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  background: #f44336;\n  transition: all 0.3s ease;\n}\n\n.status-dot.online {\n  background: #4caf50;\n  box-shadow: 0 0 6px rgba(76, 175, 80, 0.6);\n}\n\n.header-controls {\n  display: flex;\n  gap: 4px;\n  /* 确保控制区域可以接收事件 */\n  position: relative;\n  z-index: 20;\n  pointer-events: auto;\n}\n\n.header-btn {\n  width: 28px;\n  height: 28px;\n  border: none;\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 4px;\n  color: #ffffff;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.2s ease;\n  /* 移动端触摸优化 */\n  touch-action: manipulation;\n  -webkit-tap-highlight-color: transparent;\n  /* 确保按钮可以正确点击 */\n  position: relative;\n  z-index: 10;\n  /* 确保按钮可以接收点击事件 */\n  pointer-events: auto;\n}\n\n.header-btn:hover {\n  background: rgba(255, 255, 255, 0.2);\n}\n\n.header-btn:active {\n  background: rgba(255, 255, 255, 0.3);\n  transform: scale(0.95);\n}\n\n.header-btn.close-btn:hover {\n  background: #f44336;\n}\n\n/* === 控件内容样式 === */\n.widget-content {\n  transition: all 0.3s ease;\n  /* 确保内容区域有适当的背景隔离 */\n  background: rgba(35, 35, 45, 0.95);\n  position: relative;\n  z-index: 1;\n  /* 确保内容区域不会阻止拖动事件 */\n  pointer-events: auto;\n}\n\n/* 拖动状态：移除过渡动画 */\n.widget-content.dragging {\n  transition: none !important;\n}\n\n.widget-content.collapsed {\n  padding: 12px;\n}\n\n.widget-content.expanded {\n  padding: 16px;\n  max-height: 80vh;\n  overflow-y: auto;\n  /* 优化内容布局，充分利用空间 */\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  /* 确保内容充分利用可用空间 */\n  min-height: 0;\n  flex: 1;\n  /* 自适应高度 */\n  height: auto;\n}\n\n/* === 收缩状态样式 === */\n.collapsed-info {\n  display: flex;\n  align-items: center;\n  gap: 16px;\n}\n\n.collapsed-progress {\n  flex-shrink: 0;\n}\n\n.progress-circle {\n  width: 60px;\n  height: 60px;\n  border-radius: 50%;\n  background: conic-gradient(#64b5f6 0deg var(--progress, 0deg),\n      rgba(255, 255, 255, 0.1) var(--progress, 0deg) 360deg);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n}\n\n.progress-circle::before {\n  content: '';\n  position: absolute;\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  background: rgba(35, 35, 45, 0.95);\n}\n\n.progress-text {\n  position: relative;\n  z-index: 1;\n  font-size: 12px;\n  font-weight: 600;\n  color: #ffffff;\n}\n\n.collapsed-status {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n}\n\n.status-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 11px;\n}\n\n.status-label {\n  color: rgba(255, 255, 255, 0.7);\n}\n\n.status-value {\n  color: #ffffff;\n  font-weight: 600;\n  font-family: monospace;\n}\n\n.status-value.needs-adjustment {\n  color: #ff9800;\n}\n\n/* === 展开状态样式 === */\n.content-sections {\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  /* 优化布局，充分利用可用空间 */\n  width: 100%;\n  min-height: 0;\n}\n\n/* === 校准步骤进度条样式 === */\n.calibration-progress {\n  margin-bottom: 16px;\n}\n\n.progress-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 8px;\n}\n\n.progress-title {\n  font-size: 12px;\n  font-weight: 600;\n  color: #ffffff;\n}\n\n.calibration-loop-info {\n  font-size: 10px;\n  color: #ff9800;\n  font-weight: 500;\n  padding: 2px 6px;\n  background: rgba(255, 152, 0, 0.2);\n  border-radius: 4px;\n  animation: loop-pulse 2s infinite;\n}\n\n@keyframes loop-pulse {\n\n  0%,\n  100% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0.7;\n  }\n}\n\n.progress-bar {\n  position: relative;\n  width: 100%;\n  height: 8px;\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 4px;\n  overflow: visible;\n}\n\n.progress-fill {\n  height: 100%;\n  background: linear-gradient(90deg, #64b5f6, #4caf50);\n  border-radius: 4px;\n  transition: width 0.1s ease;\n}\n\n.progress-nodes {\n  position: absolute;\n  top: 50%;\n  left: 0;\n  right: 0;\n  transform: translateY(-50%);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.progress-node {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 2;\n}\n\n.node-circle {\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  background: rgba(255, 255, 255, 0.2);\n  border: 2px solid rgba(255, 255, 255, 0.3);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 10px;\n  font-weight: bold;\n  color: #ffffff;\n  transition: all 0.3s ease;\n}\n\n.progress-node.completed .node-circle {\n  background: #4caf50;\n  border-color: #4caf50;\n  box-shadow: 0 0 8px rgba(76, 175, 80, 0.4);\n}\n\n.progress-node.current .node-circle {\n  background: #64b5f6;\n  border-color: #64b5f6;\n  box-shadow: 0 0 8px rgba(100, 181, 246, 0.4);\n}\n\n.progress-node.adjustment-node .node-circle {\n  background: rgba(255, 152, 0, 0.3);\n  border-color: rgba(255, 152, 0, 0.5);\n}\n\n.progress-node.adjustment-node.active .node-circle {\n  background: #ff9800;\n  border-color: #ff9800;\n  box-shadow: 0 0 8px rgba(255, 152, 0, 0.4);\n}\n\n.progress-node.calibration-node .node-circle {\n  background: rgba(255, 152, 0, 0.3);\n  border-color: rgba(255, 152, 0, 0.5);\n}\n\n.progress-node.calibration-node.active .node-circle {\n  background: #ff9800;\n  border-color: #ff9800;\n  box-shadow: 0 0 8px rgba(255, 152, 0, 0.4);\n}\n\n.progress-node.calibration-node.looping .node-circle {\n  animation: calibration-pulse 2s infinite;\n}\n\n@keyframes calibration-pulse {\n  0% {\n    background: #ff9800;\n    box-shadow: 0 0 8px rgba(255, 152, 0, 0.4);\n  }\n\n  50% {\n    background: #ff5722;\n    box-shadow: 0 0 12px rgba(255, 152, 0, 0.6);\n  }\n\n  100% {\n    background: #ff9800;\n    box-shadow: 0 0 8px rgba(255, 152, 0, 0.4);\n  }\n}\n\n.progress-node.calibration-node.looping .node-circle i {\n  animation: calibration-rotate 2s linear infinite;\n}\n\n@keyframes calibration-rotate {\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n.progress-node.verification-node .node-circle {\n  background: rgba(76, 175, 80, 0.3);\n  border-color: rgba(76, 175, 80, 0.5);\n}\n\n.progress-node.verification-node.active .node-circle {\n  background: #4caf50;\n  border-color: #4caf50;\n  box-shadow: 0 0 8px rgba(76, 175, 80, 0.4);\n}\n\n.node-label {\n  position: absolute;\n  top: 100%;\n  left: 50%;\n  transform: translateX(-50%);\n  font-size: 9px;\n  color: rgba(255, 255, 255, 0.7);\n  font-weight: 500;\n  margin-top: 4px;\n  white-space: nowrap;\n  text-align: center;\n}\n\n.progress-node {\n  position: relative;\n}\n\n/* === 位置信息样式 === */\n.position-section {\n  margin-top: 16px;\n  padding-top: 16px;\n  border-top: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.position-grid {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: 1fr 1fr;\n  gap: 8px;\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 6px;\n  padding: 12px;\n}\n\n.position-cell {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 4px;\n  padding: 8px;\n  border-radius: 4px;\n  transition: all 0.3s ease;\n}\n\n.position-cell.current {\n  background: rgba(100, 181, 246, 0.1);\n  border: 1px solid rgba(100, 181, 246, 0.2);\n}\n\n.position-cell.target {\n  background: rgba(255, 152, 0, 0.1);\n  border: 1px solid rgba(255, 152, 0, 0.2);\n}\n\n.cell-label {\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.7);\n  font-weight: 500;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n}\n\n.cell-value {\n  font-size: 11px;\n  color: #ffffff;\n  font-family: monospace;\n  font-weight: 600;\n}\n\n/* === 调整指导样式 === */\n.adjustment-section {\n  margin-top: 16px;\n  padding-top: 16px;\n  border-top: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.adjustment-instructions {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.adjustment-item {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  padding: 12px;\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 6px;\n  transition: all 0.3s ease;\n  border: 1px solid transparent;\n}\n\n.adjustment-item.active {\n  background: rgba(255, 152, 0, 0.15);\n  border-color: #ff9800;\n}\n\n.adjustment-icon {\n  width: 28px;\n  height: 28px;\n  border-radius: 50%;\n  background: rgba(255, 255, 255, 0.1);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 14px;\n  color: #ffffff;\n  flex-shrink: 0;\n}\n\n.adjustment-item.active .adjustment-icon {\n  background: #ff9800;\n}\n\n.adjustment-details {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n}\n\n.adjustment-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.adjustment-type {\n  font-size: 12px;\n  color: #ffffff;\n  font-weight: 500;\n}\n\n.adjustment-value {\n  font-size: 18px;\n  color: #ffffff;\n  font-family: monospace;\n  font-weight: 700;\n  text-shadow: 0 0 4px rgba(255, 255, 255, 0.3);\n  letter-spacing: 1px;\n}\n\n.adjustment-action {\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.7);\n  font-weight: 500;\n}\n\n.adjustment-item.active .adjustment-action {\n  color: #ff9800;\n}\n\n/* === 操作按钮样式 === */\n.control-section {\n  margin-top: 16px;\n  padding-top: 16px;\n  border-top: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.action-buttons {\n  display: flex;\n  flex-direction: row;\n  gap: 10px;\n}\n\n.action-btn {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  padding: 12px 16px;\n  border: none;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 13px;\n  font-weight: 500;\n  transition: all 0.3s ease;\n  pointer-events: auto;\n  min-height: 40px;\n  touch-action: manipulation;\n  position: relative;\n  flex: 1;\n}\n\n.action-btn.primary {\n  background: linear-gradient(135deg, #64b5f6, #42a5f5);\n  color: #ffffff;\n  box-shadow: 0 2px 6px rgba(100, 181, 246, 0.3);\n}\n\n.action-btn.primary:hover:not(:disabled) {\n  background: linear-gradient(135deg, #42a5f5, #2196f3);\n  transform: translateY(-1px);\n  box-shadow: 0 4px 12px rgba(100, 181, 246, 0.4);\n}\n\n.action-btn.secondary {\n  background: rgba(255, 255, 255, 0.1);\n  color: #ffffff;\n  border: 1px solid rgba(255, 255, 255, 0.2);\n}\n\n.action-btn.secondary:hover:not(:disabled) {\n  background: rgba(255, 255, 255, 0.2);\n  transform: translateY(-1px);\n}\n\n.action-btn.success {\n  background: linear-gradient(135deg, #4caf50, #43a047);\n  color: #ffffff;\n  box-shadow: 0 2px 6px rgba(76, 175, 80, 0.3);\n}\n\n.action-btn.success:hover:not(:disabled) {\n  background: linear-gradient(135deg, #43a047, #388e3c);\n  transform: translateY(-1px);\n  box-shadow: 0 4px 12px rgba(76, 175, 80, 0.4);\n}\n\n.action-btn.restore {\n  background: linear-gradient(135deg, #ff9800, #f57c00);\n  color: #ffffff;\n  box-shadow: 0 2px 6px rgba(255, 152, 0, 0.3);\n}\n\n.action-btn.restore:hover:not(:disabled) {\n  background: linear-gradient(135deg, #f57c00, #ef6c00);\n  transform: translateY(-1px);\n  box-shadow: 0 4px 12px rgba(255, 152, 0, 0.4);\n}\n\n.action-btn:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n  transform: none !important;\n  box-shadow: none !important;\n}\n\n/* === 日志显示样式 === */\n.log-section {\n  margin-top: 16px;\n  padding-top: 16px;\n  border-top: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.log-display {\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 6px;\n  padding: 10px;\n}\n\n.latest-log {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 8px 10px;\n  border-radius: 4px;\n  font-size: 11px;\n  background: rgba(255, 255, 255, 0.05);\n  border-left: 3px solid transparent;\n}\n\n.latest-log.info {\n  border-left-color: #64b5f6;\n}\n\n.latest-log.warning {\n  border-left-color: #ff9800;\n}\n\n.latest-log.success {\n  border-left-color: #4caf50;\n}\n\n.latest-log.error {\n  border-left-color: #f44336;\n}\n\n.log-timestamp {\n  color: rgba(255, 255, 255, 0.6);\n  font-family: monospace;\n  font-size: 10px;\n  min-width: 65px;\n  flex-shrink: 0;\n}\n\n.log-message {\n  color: rgba(255, 255, 255, 0.9);\n  flex: 1;\n  line-height: 1.4;\n}\n\n.log-empty {\n  text-align: center;\n  color: rgba(255, 255, 255, 0.5);\n  font-size: 11px;\n  padding: 20px;\n  font-style: italic;\n}\n\n/* === 响应式设计 === */\n@media (max-width: 768px) {\n  .polar-alignment-widget {\n    width: 320px;\n    max-width: 95vw;\n  }\n\n  .polar-alignment-widget.collapsed {\n    width: 280px;\n    max-width: 90vw;\n  }\n\n  .polar-alignment-minimized {\n    width: 240px;\n  }\n\n  .widget-header {\n    padding: 10px 12px;\n  }\n\n  .header-title {\n    font-size: 12px;\n  }\n\n  .widget-content.expanded {\n    padding: 12px;\n    max-height: 500px;\n  }\n\n  .widget-content.collapsed {\n    padding: 8px;\n  }\n\n  .action-btn {\n    padding: 10px 12px;\n    font-size: 12px;\n    min-height: 36px;\n  }\n\n  .adjustment-value {\n    font-size: 16px;\n  }\n\n  .progress-circle {\n    width: 50px;\n    height: 50px;\n  }\n\n  .progress-text {\n    font-size: 10px;\n  }\n\n  .node-label {\n    font-size: 8px;\n    margin-top: 2px;\n  }\n\n  .node-circle {\n    width: 16px;\n    height: 16px;\n    font-size: 8px;\n  }\n\n  .progress-header {\n    margin-bottom: 6px;\n  }\n\n  .progress-title {\n    font-size: 11px;\n  }\n\n  .calibration-loop-info {\n    font-size: 9px;\n    padding: 1px 4px;\n  }\n}\n\n/* 移动端触摸优化 */\n@media (hover: none) and (pointer: coarse) {\n  .action-btn {\n    min-height: 48px;\n    padding: 14px 18px;\n    font-size: 14px;\n  }\n\n  .widget-header {\n    padding: 16px 20px;\n  }\n\n  .minimized-header {\n    padding: 12px 16px;\n  }\n\n  .header-btn {\n    width: 32px;\n    height: 32px;\n  }\n\n  .minimized-btn {\n    width: 28px;\n    height: 28px;\n  }\n}\n\n@media (max-width: 480px) {\n  .polar-alignment-widget {\n    width: 280px;\n    max-width: 98vw;\n  }\n\n  .polar-alignment-widget.collapsed {\n    width: 240px;\n    max-width: 95vw;\n  }\n\n  .polar-alignment-minimized {\n    width: 200px;\n  }\n\n  .widget-header {\n    padding: 8px 10px;\n  }\n\n  .header-title {\n    font-size: 11px;\n  }\n\n  .header-btn {\n    width: 20px;\n    height: 20px;\n  }\n\n  .widget-content.expanded {\n    padding: 10px;\n    max-height: 400px;\n  }\n\n  .widget-content.collapsed {\n    padding: 6px;\n  }\n\n  .action-btn {\n    padding: 8px 10px;\n    font-size: 11px;\n    min-height: 32px;\n  }\n\n  .adjustment-value {\n    font-size: 14px;\n  }\n\n  .progress-circle {\n    width: 40px;\n    height: 40px;\n  }\n\n  .progress-text {\n    font-size: 9px;\n  }\n\n  .minimized-header {\n    padding: 6px 8px;\n  }\n\n  .minimized-title {\n    font-size: 10px;\n  }\n\n  .minimized-btn {\n    width: 16px;\n    height: 16px;\n  }\n\n  .node-label {\n    font-size: 7px;\n    margin-top: 1px;\n  }\n\n  .node-circle {\n    width: 14px;\n    height: 14px;\n    font-size: 7px;\n  }\n\n  .progress-nodes {\n    gap: 2px;\n  }\n\n  .progress-header {\n    margin-bottom: 4px;\n  }\n\n  .progress-title {\n    font-size: 10px;\n  }\n\n  .calibration-loop-info {\n    font-size: 8px;\n    padding: 1px 3px;\n  }\n}\n\n/* 面板标题 */\n.panel-header {\n  margin-bottom: 16px;\n  padding-bottom: 8px;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  pointer-events: auto;\n}\n\n.panel-header h3 {\n  margin: 0;\n  font-size: 18px;\n  font-weight: 600;\n  color: #ffffff;\n}\n\n.panel-indicator {\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  background: #64b5f6;\n}\n\n.panel-indicator.live {\n  animation: pulse 2s infinite;\n}\n\n.panel-indicator.control {\n  background: #ff9800;\n}\n\n@keyframes pulse {\n  0% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0.5;\n  }\n\n  100% {\n    opacity: 1;\n  }\n}\n\n\n\n.card-header {\n  background: rgba(60, 60, 70, 0.8);\n  padding: 12px 16px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n  pointer-events: auto;\n}\n\n.card-header span {\n  font-size: 14px;\n  font-weight: 500;\n  color: #ffffff;\n}\n\n.card-icon {\n  color: #64b5f6;\n  font-size: 18px;\n}\n\n.card-icon.warning {\n  color: #ff9800;\n}\n\n.card-icon.success {\n  color: #4caf50;\n}\n\n\n\n\n\n\n/* === 响应式设计 === */\n@media (max-width: 1200px) {\n  .info-panel {\n    flex: 0 0 350px;\n  }\n}\n\n@media (max-width: 768px) {\n  .polar-alignment-interface {\n    font-size: 12px;\n  }\n\n  .main-layout {\n    flex-direction: column;\n    gap: 8px;\n    padding: 8px;\n  }\n\n  .display-panel {\n    flex: 1;\n    min-height: 300px;\n    padding: 12px;\n  }\n\n  .info-panel {\n    flex: 0 0 auto;\n    max-height: 50vh;\n    overflow-y: auto;\n    padding: 12px;\n  }\n\n  /* 状态相关样式已删除 */\n\n  .calibration-progress {\n    margin-bottom: 12px;\n  }\n\n  .progress-bar {\n    height: 6px;\n  }\n\n  .node-circle {\n    width: 16px;\n    height: 16px;\n    font-size: 8px;\n  }\n\n  .position-section {\n    margin-top: 12px;\n    padding-top: 12px;\n  }\n\n  .position-grid {\n    gap: 6px;\n    padding: 8px;\n  }\n\n  .position-cell {\n    padding: 6px;\n  }\n\n  .adjustment-section {\n    margin-top: 12px;\n    padding-top: 12px;\n  }\n\n  .adjustment-item {\n    padding: 8px;\n  }\n\n  .adjustment-icon {\n    width: 24px;\n    height: 24px;\n  }\n\n  .control-section {\n    margin-top: 12px;\n    padding-top: 12px;\n  }\n\n  .action-btn {\n    padding: 10px 12px;\n    font-size: 12px;\n    min-height: 36px;\n    flex: 1;\n  }\n\n  .log-section {\n    margin-top: 12px;\n    padding-top: 12px;\n  }\n\n  .log-display {\n    padding: 8px;\n  }\n\n  .panel-header {\n    margin-bottom: 8px;\n    padding-bottom: 8px;\n  }\n\n  .interface-title {\n    font-size: 14px;\n  }\n\n  .connection-status {\n    font-size: 10px;\n  }\n\n  .card-header {\n    padding: 8px 12px;\n  }\n\n  .card-header span {\n    font-size: 12px;\n  }\n\n  .card-content {\n    padding: 12px;\n  }\n\n\n\n  .node-circle {\n    width: 14px;\n    height: 14px;\n    font-size: 7px;\n  }\n\n  .log-display {\n    padding: 6px;\n  }\n\n  .latest-log {\n    font-size: 10px;\n  }\n\n  .log-timestamp {\n    min-width: 50px;\n  }\n}\n\n@media (max-width: 480px) {\n  .polar-alignment-interface {\n    font-size: 10px;\n  }\n\n  .main-layout {\n    flex-direction: column;\n    gap: 6px;\n    padding: 6px;\n  }\n\n  .display-panel {\n    flex: 1;\n    min-height: 250px;\n    padding: 8px;\n  }\n\n  .info-panel {\n    flex: 0 0 auto;\n    max-height: 45vh;\n    overflow-y: auto;\n    padding: 8px;\n  }\n\n  .card-header {\n    padding: 8px 12px;\n  }\n\n  .card-header span {\n    font-size: 11px;\n  }\n\n  .card-content {\n    padding: 12px;\n  }\n\n  /* 状态相关样式已删除 */\n\n  .calibration-progress {\n    margin-bottom: 8px;\n  }\n\n  .progress-bar {\n    height: 4px;\n  }\n\n  .node-circle {\n    width: 14px;\n    height: 14px;\n    font-size: 7px;\n  }\n\n  .position-section {\n    margin-top: 8px;\n    padding-top: 8px;\n  }\n\n  .position-grid {\n    gap: 4px;\n    padding: 6px;\n  }\n\n  .position-cell {\n    padding: 4px;\n  }\n\n  .cell-label {\n    font-size: 8px;\n  }\n\n  .cell-value {\n    font-size: 9px;\n  }\n\n  .adjustment-section {\n    margin-top: 8px;\n    padding-top: 8px;\n  }\n\n  .adjustment-item {\n    padding: 6px;\n  }\n\n  .adjustment-icon {\n    width: 20px;\n    height: 20px;\n  }\n\n  .adjustment-type {\n    font-size: 10px;\n  }\n\n  .adjustment-value {\n    font-size: 10px;\n  }\n\n  .adjustment-action {\n    font-size: 8px;\n  }\n\n  .control-section {\n    margin-top: 8px;\n    padding-top: 8px;\n  }\n\n  .action-btn {\n    padding: 8px 10px;\n    font-size: 10px;\n    min-height: 32px;\n    flex: 1;\n  }\n\n  .log-section {\n    margin-top: 8px;\n    padding-top: 8px;\n  }\n\n  .log-display {\n    padding: 6px;\n  }\n\n  .latest-log {\n    font-size: 9px;\n  }\n\n  .log-timestamp {\n    font-size: 8px;\n    min-width: 45px;\n  }\n\n  .panel-header {\n    margin-bottom: 6px;\n    padding-bottom: 6px;\n  }\n\n}\n\n/* === 触摸优化 === */\n.polar-alignment-widget,\n.polar-alignment-minimized {\n  /* 触摸优化 */\n  touch-action: none;\n  -webkit-tap-highlight-color: transparent;\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n\n.header-drag-area,\n.minimized-drag-area {\n  /* 触摸优化 */\n  touch-action: none;\n  -webkit-tap-highlight-color: transparent;\n}\n\n/* 拖动状态：移除触摸优化，允许正常触摸 */\n.polar-alignment-widget.dragging,\n.polar-alignment-minimized.dragging {\n  touch-action: manipulation;\n}\n\n/* === 性能优化 === */\n/* 拖动时禁用不必要的动画和效果 */\n.dragging * {\n  animation: none !important;\n  transition: none !important;\n}\n\n/* 拖动时简化阴影和模糊效果 */\n.dragging .progress-circle::before,\n.dragging .node-circle,\n.dragging .status-indicator {\n  box-shadow: none !important;\n  filter: none !important;\n}\n</style>"],"sourceRoot":"src/components"}]}