{"remainingRequest":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/thread-loader/dist/cjs.js!/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/babel-loader/lib/index.js!/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/src/components/planets-visibility.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/src/components/planets-visibility.vue","mtime":1756885034408},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1756885033541},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/thread-loader/dist/cjs.js","mtime":1756885034172},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/babel-loader/lib/index.js","mtime":1756885033526},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1756885033541},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/vue-loader/lib/index.js","mtime":1756885034208}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IE1vbWVudCBmcm9tICdtb21lbnQnOwppbXBvcnQgc3doIGZyb20gJ0AvYXNzZXRzL3N3X2hlbHBlcnMuanMnOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIG9ianM6IFt0aGlzLiRzdGVsLmdldE9iaignTkFNRSBTdW4nKSwgdGhpcy4kc3RlbC5nZXRPYmooJ05BTUUgTW9vbicpLCB0aGlzLiRzdGVsLmdldE9iaignTkFNRSBNZXJjdXJ5JyksIHRoaXMuJHN0ZWwuZ2V0T2JqKCdOQU1FIFZlbnVzJyksIHRoaXMuJHN0ZWwuZ2V0T2JqKCdOQU1FIE1hcnMnKSwgdGhpcy4kc3RlbC5nZXRPYmooJ05BTUUgSnVwaXRlcicpLCB0aGlzLiRzdGVsLmdldE9iaignTkFNRSBTYXR1cm4nKV0KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBmb3JtYXRUaW1lOiBmdW5jdGlvbiBmb3JtYXRUaW1lKGpkbSkgewogICAgICB2YXIgZCA9IG5ldyBEYXRlKCk7CiAgICAgIGQuc2V0TUpEKGpkbSk7CiAgICAgIHZhciB1dGMgPSBNb21lbnQudXRjKGQpOwogICAgICB1dGMubG9jYWwoKTsKICAgICAgcmV0dXJuIHV0Yy5mb3JtYXQoJ0hIOm1tJyk7CiAgICB9LAogICAgY2xlYW5OYW1lOiBmdW5jdGlvbiBjbGVhbk5hbWUob2JqKSB7CiAgICAgIHJldHVybiBzd2guY2xlYW51cE9uZVNreVNvdXJjZU5hbWUob2JqLmRlc2lnbmF0aW9ucygpWzBdKTsKICAgIH0sCiAgICBwbGFuZXRCYWNrZ3JvdW5kU3RyOiBmdW5jdGlvbiBwbGFuZXRCYWNrZ3JvdW5kU3RyKG9iaikgewogICAgICB2YXIgZCA9IG5ldyBEYXRlKCk7CiAgICAgIGQuc2V0TUpEKG9iai5jb21wdXRlVmlzaWJpbGl0eSgpWzBdLnJpc2UpOwogICAgICB2YXIgcmlzZSA9IE1vbWVudC51dGMoZCk7CiAgICAgIHJpc2UubG9jYWwoKTsKICAgICAgZC5zZXRNSkQob2JqLmNvbXB1dGVWaXNpYmlsaXR5KClbMF0uc2V0KTsKICAgICAgdmFyIHNldCA9IE1vbWVudC51dGMoZCk7CiAgICAgIHNldC5sb2NhbCgpOwoKICAgICAgdmFyIGhvdXJUb1BlcmNlbnQgPSBmdW5jdGlvbiBob3VyVG9QZXJjZW50KGgpIHsKICAgICAgICByZXR1cm4gaCA+PSAxMiA/IE1hdGgucm91bmQoKGggLSAxMikgLyAyNCAqIDEwMCkgOiBNYXRoLnJvdW5kKChoICsgMTIpIC8gMjQgKiAxMDApOwogICAgICB9OwoKICAgICAgdmFyIHJpc2VQID0gaG91clRvUGVyY2VudChyaXNlLmhvdXJzKCkpOwogICAgICB2YXIgc2V0UCA9IGhvdXJUb1BlcmNlbnQoc2V0LmhvdXJzKCkpOwoKICAgICAgaWYgKHNldFAgPiByaXNlUCkgewogICAgICAgIHJldHVybiAiPGRpdiBzdHlsZT0nei1pbmRleDogMTAwOyBwb3NpdGlvbjogYWJzb2x1dGU7IGJhY2tncm91bmQtY29sb3I6IHJnYigyMDAsIDIwMCwgNTApOyBsZWZ0OiAiICsgcmlzZVAgKyAnJTsgbWluLXdpZHRoOiAnICsgKHNldFAgLSByaXNlUCkgKyAiJTsgdG9wOiA3cHg7IGhlaWdodDogOHB4Oyc+PC9kaXY+IjsKICAgICAgfSBlbHNlIHsKICAgICAgICB2YXIgcmV0ID0gIjxkaXYgc3R5bGU9J3otaW5kZXg6IDEwMDsgcG9zaXRpb246IGFic29sdXRlOyBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjAwLCAyMDAsIDUwKTsgbGVmdDogMCU7IG1pbi13aWR0aDogIiArIHNldFAgKyAiJTsgdG9wOiA3cHg7IGhlaWdodDogOHB4Oyc+PC9kaXY+IjsKICAgICAgICByZXQgKz0gIjxkaXYgc3R5bGU9J3otaW5kZXg6IDEwMDsgcG9zaXRpb246IGFic29sdXRlOyBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjAwLCAyMDAsIDUwKTsgcmlnaHQ6IDAlOyBtaW4td2lkdGg6ICIgKyAoMTAwIC0gcmlzZVApICsgIiU7IHRvcDogN3B4OyBoZWlnaHQ6IDhweDsnPjwvZGl2PiI7CiAgICAgICAgcmV0dXJuIHJldDsKICAgICAgfQogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHN1bkJhY2tncm91bmRTdHI6IGZ1bmN0aW9uIHN1bkJhY2tncm91bmRTdHIoKSB7CiAgICAgIHZhciBzdW4gPSB0aGlzLiRzdGVsLmdldE9iaignTkFNRSBTdW4nKTsKICAgICAgdmFyIGJyaWdodG5lc3MgPSBbXTsKICAgICAgdmFyIGQgPSBuZXcgTW9tZW50KHRoaXMuc3RhcnREYXRlKTsKICAgICAgdmFyIG9icyA9IHRoaXMuJHN0ZWwuY29yZS5vYnNlcnZlci5jbG9uZSgpOwoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCAyNTsgaSsrKSB7CiAgICAgICAgb2JzLnV0YyA9IGQudG9EYXRlKCkuZ2V0TUpEKCk7CiAgICAgICAgZC5sb2NhbCgpOwogICAgICAgIHZhciBhemFsdCA9IHRoaXMuJHN0ZWwuY29udmVydEZyYW1lKG9icywgJ0lDUkYnLCAnT0JTRVJWRUQnLCBzdW4uZ2V0SW5mbygncmFkZWMnLCBvYnMpKTsKICAgICAgICB2YXIgYWx0ID0gdGhpcy4kc3RlbC5hbnBtKHRoaXMuJHN0ZWwuYzJzKGF6YWx0KVsxXSkgKiAxODAuMCAvIE1hdGguUEk7CiAgICAgICAgYnJpZ2h0bmVzcy5wdXNoKGFsdCAvIChNYXRoLlBJIC8gMikpOwogICAgICAgIGQuYWRkKDEsICdob3VycycpOwogICAgICB9CgogICAgICBvYnMuZGVzdHJveSgpOwogICAgICB2YXIgdHh0ID0gJ3Bvc2l0aW9uOiByZWxhdGl2ZTsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCAnOwoKICAgICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IDI1OyBfaSsrKSB7CiAgICAgICAgdmFyIGJpID0gKGJyaWdodG5lc3NbX2ldICsgMC4xKSAqIDU7CiAgICAgICAgYmkgPSBiaSA+IDEgPyAxIDogYmk7CiAgICAgICAgYmkgPSBiaSA8IDAgPyAwIDogYmk7CiAgICAgICAgdHh0ICs9ICdyZ2IoJyArIE1hdGgucm91bmQoNTMgKiBiaSkgKyAnLCAnICsgTWF0aC5yb3VuZCgxNzMgKiBiaSkgKyAnLCAnICsgTWF0aC5yb3VuZCgyMTEgKiBiaSkgKyAnKSAnICsgTWF0aC5yb3VuZChfaSAvIDI0ICogMTAwKSArICclICc7CgogICAgICAgIGlmIChfaSAhPT0gMjQpIHsKICAgICAgICAgIHR4dCArPSAnLCc7CiAgICAgICAgfQogICAgICB9CgogICAgICB0eHQgKz0gJyk7IG1pbi13aWR0aDogMTAwJTsgaGVpZ2h0OiAxMDAlJzsKICAgICAgcmV0dXJuIHR4dDsKICAgIH0sCiAgICBzdGFydERhdGU6IGZ1bmN0aW9uIHN0YXJ0RGF0ZSgpIHsKICAgICAgdmFyIHN1biA9IHRoaXMuJHN0ZWwuZ2V0T2JqKCdOQU1FIFN1bicpOwogICAgICB2YXIgdSA9IHRoaXMuJHN0b3JlLnN0YXRlLnN0ZWwub2JzZXJ2ZXIudXRjOwoKICAgICAgaWYgKHUgPCBzdW4ucmlzZSkgewogICAgICAgIC8vIEl0J3Mgc3RpbGwgbmlnaHQgKGluIHRoZSBtb3JuaW5nKSwgZGlzcGxheSBsYXN0IG5pZ2h0J3MgcGxhbmV0cyB2aXNpYmlsaXR5CiAgICAgICAgdSA9IHUgLSAxOwogICAgICB9CgogICAgICB2YXIgZCA9IG5ldyBEYXRlKCk7CiAgICAgIGQuc2V0TUpEKHUpOwogICAgICBkID0gbmV3IE1vbWVudChkKTsKICAgICAgZC5sb2NhbCgpOwogICAgICBkLmhvdXJzKDEyKTsKICAgICAgZC5taW51dGVzKDApOwogICAgICBkLnNlY29uZHMoMCk7CiAgICAgIHJldHVybiBkOwogICAgfSwKICAgIGVuZERhdGU6IGZ1bmN0aW9uIGVuZERhdGUoKSB7CiAgICAgIHZhciBkID0gbmV3IE1vbWVudCh0aGlzLnN0YXJ0RGF0ZSk7CiAgICAgIGQuYWRkKDEsICdkJyk7CiAgICAgIHJldHVybiBkOwogICAgfQogIH0KfTs="},{"version":3,"sources":["planets-visibility.vue"],"names":[],"mappings":"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","sourcesContent":["// Stellarium Web - Copyright (c) 2022 - Stellarium Labs SRL\n//\n// This program is licensed under the terms of the GNU AGPL v3, or\n// alternatively under a commercial licence.\n//\n// The terms of the AGPL v3 license can be found in the main directory of this\n// repository.\n\n<template>\n<v-dialog max-width='600' v-model=\"$store.state.showPlanetsVisibilityDialog\">\n  <v-card v-if=\"$store.state.showPlanetsVisibilityDialog\" transparent class=\"secondary white--text\">\n    <v-card-title><div class=\"text-h5\">{{ $t('Planets Visibility') }}</div></v-card-title>\n    <v-card-text>{{ $t('Night from {0} to {1}', [startDate.format('MMMM Do'), endDate.format('MMMM Do')]) }}</v-card-text>\n    <v-card-text>\n      <div>\n        <v-row no-gutters>\n          <v-col cols=\"1\" offset=\"2\"><span>{{ $t('Rise') }}</span></v-col>\n          <v-col cols=\"1\"><span>{{ $t('Set') }}</span></v-col>\n          <v-col cols=\"8\">\n            <v-row justify=\"space-between\">\n              <span>12:00</span><span>18:00</span><span>00:00</span><span>06:00</span><span>12:00</span>\n            </v-row>\n          </v-col>\n        </v-row>\n        <template v-for=\"obj in objs\">\n        <v-row no-gutters :key=\"obj.v\">\n          <v-col cols=\"2\">{{cleanName(obj)}}</v-col>\n          <v-col cols=\"1\">{{formatTime(obj.computeVisibility()[0].rise)}}</v-col>\n          <v-col cols=\"1\">{{formatTime(obj.computeVisibility()[0].set)}}</v-col>\n          <v-col cols=\"8\">\n            <div :style='sunBackgroundStr'>&nbsp;\n              <div v-html=\"planetBackgroundStr(obj)\"></div>\n            </div>\n          </v-col>\n        </v-row>\n        </template>\n      </div>\n    </v-card-text>\n    <v-card-actions>\n      <v-spacer></v-spacer><v-btn class=\"blue--text darken-1\" text @click.native=\"$store.state.showPlanetsVisibilityDialog = false\">Close</v-btn>\n    </v-card-actions>\n  </v-card>\n</v-dialog>\n</template>\n\n<script>\n\nimport Moment from 'moment'\nimport swh from '@/assets/sw_helpers.js'\n\nexport default {\n  data: function () {\n    return {\n      objs: [\n        this.$stel.getObj('NAME Sun'),\n        this.$stel.getObj('NAME Moon'),\n        this.$stel.getObj('NAME Mercury'),\n        this.$stel.getObj('NAME Venus'),\n        this.$stel.getObj('NAME Mars'),\n        this.$stel.getObj('NAME Jupiter'),\n        this.$stel.getObj('NAME Saturn')\n      ]\n    }\n  },\n  methods: {\n    formatTime: function (jdm) {\n      const d = new Date()\n      d.setMJD(jdm)\n      const utc = Moment.utc(d)\n      utc.local()\n      return utc.format('HH:mm')\n    },\n    cleanName: function (obj) {\n      return swh.cleanupOneSkySourceName(obj.designations()[0])\n    },\n    planetBackgroundStr: function (obj) {\n      const d = new Date()\n      d.setMJD(obj.computeVisibility()[0].rise)\n      const rise = Moment.utc(d)\n      rise.local()\n      d.setMJD(obj.computeVisibility()[0].set)\n      const set = Moment.utc(d)\n      set.local()\n\n      var hourToPercent = function (h) {\n        return (h >= 12) ? Math.round((h - 12) / 24 * 100) : Math.round((h + 12) / 24 * 100)\n      }\n\n      const riseP = hourToPercent(rise.hours())\n      const setP = hourToPercent(set.hours())\n      if (setP > riseP) {\n        return \"<div style='z-index: 100; position: absolute; background-color: rgb(200, 200, 50); left: \" + riseP + '%; min-width: ' + (setP - riseP) + \"%; top: 7px; height: 8px;'></div>\"\n      } else {\n        let ret = \"<div style='z-index: 100; position: absolute; background-color: rgb(200, 200, 50); left: 0%; min-width: \" + setP + \"%; top: 7px; height: 8px;'></div>\"\n        ret += \"<div style='z-index: 100; position: absolute; background-color: rgb(200, 200, 50); right: 0%; min-width: \" + (100 - riseP) + \"%; top: 7px; height: 8px;'></div>\"\n        return ret\n      }\n    }\n  },\n  computed: {\n    sunBackgroundStr: function () {\n      var sun = this.$stel.getObj('NAME Sun')\n      const brightness = []\n      const d = new Moment(this.startDate)\n\n      const obs = this.$stel.core.observer.clone()\n      for (let i = 0; i < 25; i++) {\n        obs.utc = d.toDate().getMJD()\n        d.local()\n        const azalt = this.$stel.convertFrame(obs, 'ICRF', 'OBSERVED', sun.getInfo('radec', obs))\n        const alt = this.$stel.anpm(this.$stel.c2s(azalt)[1]) * 180.0 / Math.PI\n        brightness.push(alt / (Math.PI / 2))\n        d.add(1, 'hours')\n      }\n      obs.destroy()\n\n      var txt = 'position: relative; background: linear-gradient(to right, '\n      for (let i = 0; i < 25; i++) {\n        let bi = (brightness[i] + 0.1) * 5\n        bi = bi > 1 ? 1 : bi\n        bi = bi < 0 ? 0 : bi\n        txt += 'rgb(' + Math.round(53 * bi) + ', ' + Math.round(173 * bi) + ', ' + Math.round(211 * bi) + ') ' + Math.round(i / 24 * 100) + '% '\n        if (i !== 24) {\n          txt += ','\n        }\n      }\n      txt += '); min-width: 100%; height: 100%'\n      return txt\n    },\n    startDate: function () {\n      var sun = this.$stel.getObj('NAME Sun')\n      let u = this.$store.state.stel.observer.utc\n      if (u < sun.rise) {\n        // It's still night (in the morning), display last night's planets visibility\n        u = u - 1\n      }\n      let d = new Date()\n      d.setMJD(u)\n      d = new Moment(d)\n      d.local()\n      d.hours(12)\n      d.minutes(0)\n      d.seconds(0)\n      return d\n    },\n    endDate: function () {\n      const d = new Moment(this.startDate)\n      d.add(1, 'd')\n      return d\n    }\n  }\n}\n</script>\n\n<style>\n.input-group {\n  margin: 0px;\n}\n</style>\n"],"sourceRoot":"src/components"}]}