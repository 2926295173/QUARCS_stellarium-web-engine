{"remainingRequest":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/thread-loader/dist/cjs.js!/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/babel-loader/lib/index.js!/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/src/components/AutomaticPolarAlignmentCalibration.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/src/components/AutomaticPolarAlignmentCalibration.vue","mtime":1753257074349},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1707125360000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/thread-loader/dist/cjs.js","mtime":1707125360000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/babel-loader/lib/index.js","mtime":1707125360000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1707125360000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/vue-loader/lib/index.js","mtime":1707125450000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["AutomaticPolarAlignmentCalibration.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <!-- 最小化状态 -->\n  <div v-if=\"visible && isMinimized\" class=\"polar-alignment-minimized\" \n       :style=\"{ left: position.x + 'px', top: position.y + 'px' }\">\n    <div class=\"minimized-header\">\n      <div class=\"minimized-drag-area\" @mousedown=\"startDrag\" @touchstart=\"startDrag\">\n        <v-icon class=\"minimized-icon\">mdi-compass-rose</v-icon>\n        <span class=\"minimized-title\">{{ $t('Polar Alignment') }}</span>\n      </div>\n      <div class=\"minimized-controls\">\n        <button class=\"minimized-btn\" @click=\"toggleMinimize\" title=\"展开\">\n          <v-icon>mdi-chevron-up</v-icon>\n        </button>\n      </div>\n    </div>\n    <div class=\"minimized-status\">\n      <div class=\"status-indicator\" :class=\"{ 'online': isConnected }\"></div>\n              <span class=\"status-text\">{{ isConnected ? $t('Connected') : $t('Disconnected') }}</span>\n    </div>\n  </div>\n\n  <!-- 完整界面 -->\n  <div v-else-if=\"visible\" class=\"polar-alignment-widget\" \n       :class=\"{ 'collapsed': isCollapsed }\"\n       :style=\"{ left: position.x + 'px', top: position.y + 'px' }\">\n    \n    <!-- 拖动手柄 -->\n    <div class=\"widget-header\">\n      <div class=\"header-drag-area\" @mousedown=\"startDrag\" @touchstart=\"startDrag\">\n        <div class=\"header-left\">\n          <v-icon class=\"header-icon\">mdi-compass-rose</v-icon>\n          <span class=\"header-title\">{{ $t('Polar Alignment Calibration') }}</span>\n          <div class=\"connection-indicator\">\n            <div class=\"status-dot\" :class=\"{ 'online': isConnected }\"></div>\n          </div>\n        </div>\n      </div>\n      \n      <div class=\"header-controls\">\n        <button class=\"header-btn\" @click=\"toggleCollapse\" :title=\"isCollapsed ? '展开' : '收缩'\">\n          <v-icon>{{ isCollapsed ? 'mdi-chevron-down' : 'mdi-chevron-up' }}</v-icon>\n        </button>\n        <button class=\"header-btn\" @click=\"toggleMinimize\" title=\"最小化\">\n          <v-icon>mdi-minus</v-icon>\n        </button>\n      </div>\n    </div>\n\n    <!-- 收缩状态内容 -->\n    <div v-if=\"isCollapsed\" class=\"widget-content collapsed\">\n      <div class=\"collapsed-info\">\n        <div class=\"collapsed-progress\">\n          <div class=\"progress-circle\" :style=\"{ '--progress': progressPercentage + '%' }\">\n            <span class=\"progress-text\">{{ Math.round(progressPercentage) }}%</span>\n          </div>\n        </div>\n        <div class=\"collapsed-status\">\n          <div class=\"status-item\">\n            <span class=\"status-label\">方位角:</span>\n            <span class=\"status-value\" :class=\"{ 'needs-adjustment': needsAzimuthAdjustment }\">\n              {{ formatAdjustmentValue(adjustment.azimuth) }}\n            </span>\n          </div>\n          <div class=\"status-item\">\n            <span class=\"status-label\">高度角:</span>\n            <span class=\"status-value\" :class=\"{ 'needs-adjustment': needsAltitudeAdjustment }\">\n              {{ formatAdjustmentValue(adjustment.altitude) }}\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 展开状态内容 -->\n    <div v-else class=\"widget-content expanded\">\n      <div class=\"content-sections\">\n        <!-- 校准步骤进度条 -->\n        <div class=\"calibration-progress\">\n          <div class=\"progress-header\">\n            <div class=\"progress-title\">{{ $t('Calibration Progress') }}</div>\n            <div v-if=\"progressPercentage >= 75 && progressPercentage < 95\" class=\"calibration-loop-info\">\n              {{ $t('Calibration Round', [calibrationLoopCount]) }}\n            </div>\n          </div>\n          <div class=\"progress-bar\">\n            <div class=\"progress-fill\" :style=\"{ width: progressPercentage + '%' }\"></div>\n            <div class=\"progress-nodes\">\n              <!-- 初始化节点 -->\n              <div class=\"progress-node\" :class=\"getStepClass(0)\">\n                <div class=\"node-circle\">\n                  <v-icon v-if=\"progressPercentage >= 15\">mdi-check</v-icon>\n                  <v-icon v-else>mdi-cog</v-icon>\n                </div>\n                <div class=\"node-label\">{{ $t('Initialization') }}</div>\n              </div>\n              \n              <!-- 第一次校准节点 -->\n              <div class=\"progress-node\" :class=\"getStepClass(1)\">\n                <div class=\"node-circle\">\n                  <v-icon v-if=\"progressPercentage >= 25\">mdi-check</v-icon>\n                  <span v-else>1</span>\n                </div>\n                <div class=\"node-label\">{{ $t('First Calibration') }}</div>\n              </div>\n              \n              <!-- 第二次校准节点 -->\n              <div class=\"progress-node\" :class=\"getStepClass(2)\">\n                <div class=\"node-circle\">\n                  <v-icon v-if=\"progressPercentage >= 50\">mdi-check</v-icon>\n                  <span v-else>2</span>\n                </div>\n                <div class=\"node-label\">{{ $t('Second Calibration') }}</div>\n              </div>\n              \n              <!-- 第三次校准节点 -->\n              <div class=\"progress-node\" :class=\"getStepClass(3)\">\n                <div class=\"node-circle\">\n                  <v-icon v-if=\"progressPercentage >= 75\">mdi-check</v-icon>\n                  <span v-else>3</span>\n                </div>\n                <div class=\"node-label\">{{ $t('Third Calibration') }}</div>\n              </div>\n              \n              <!-- 校准调整节点 -->\n              <div class=\"progress-node calibration-node\" :class=\"{ 'active': progressPercentage >= 75, 'looping': progressPercentage >= 75 && progressPercentage < 95 }\">\n                <div class=\"node-circle\">\n                  <v-icon v-if=\"progressPercentage >= 95\">mdi-check</v-icon>\n                  <v-icon v-else-if=\"progressPercentage >= 75\">mdi-refresh</v-icon>\n                  <v-icon v-else>mdi-tune</v-icon>\n                </div>\n                <div class=\"node-label\">{{ $t('Calibration') }}</div>\n              </div>\n              \n              <!-- 最终验证节点 -->\n              <div class=\"progress-node verification-node\" :class=\"{ 'active': progressPercentage >= 95 }\">\n                <div class=\"node-circle\">\n                  <v-icon v-if=\"isPolarAligned\">mdi-check</v-icon>\n                  <v-icon v-else>mdi-target</v-icon>\n                </div>\n                <div class=\"node-label\">{{ $t('Verification') }}</div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- 日志显示 -->\n        <div class=\"log-section\">\n          <div class=\"log-display\">\n            <div v-if=\"displayLogs.length > 0\" class=\"latest-log\" :class=\"displayLogs[0].level\">\n              <div class=\"log-timestamp\">{{ formatTime(displayLogs[0].timestamp) }}</div>\n              <div class=\"log-message\">{{ displayLogs[0].message }}</div>\n            </div>\n            <div v-else class=\"log-empty\">\n              {{ $t('No activity logs') }}\n            </div>\n          </div>\n        </div>\n        \n        <!-- 位置信息 -->\n        <div class=\"position-section\">\n          <div class=\"position-grid\">\n            <div class=\"position-cell current\">\n              <div class=\"cell-label\">{{ $t('current RA') }}</div>\n              <div class=\"cell-value\">{{ currentPosition.ra }}</div>\n            </div>\n            <div class=\"position-cell current\">\n              <div class=\"cell-label\">{{ $t('current DEC') }}</div>\n              <div class=\"cell-value\">{{ currentPosition.dec }}</div>\n            </div>\n            <div class=\"position-cell target\">\n              <div class=\"cell-label\">{{ $t('target RA') }}</div>\n              <div class=\"cell-value\">{{ targetPosition.ra }}</div>\n            </div>\n            <div class=\"position-cell target\">\n              <div class=\"cell-label\">{{ $t('target DEC') }}</div>\n              <div class=\"cell-value\">{{ targetPosition.dec }}</div>\n            </div>\n          </div>\n        </div>\n        \n        <!-- 调整指导 -->\n        <div class=\"adjustment-section\">\n          <div class=\"adjustment-instructions\">\n            <div class=\"adjustment-item\" :class=\"{ 'active': needsAzimuthAdjustment }\">\n              <div class=\"adjustment-icon\">\n                <v-icon>mdi-compass</v-icon>\n              </div>\n              <div class=\"adjustment-details\">\n                <div class=\"adjustment-header\">\n                  <span class=\"adjustment-type\">{{ $t('Azimuth') }}</span>\n                  <span class=\"adjustment-value\">{{ formatAdjustmentValue(adjustment.azimuth) }}</span>\n                </div>\n                <div class=\"adjustment-action\">\n                  {{ needsAzimuthAdjustment ? getAzimuthAction(adjustment.azimuth) : $t('No adjustment needed') }}\n                </div>\n\n              </div>\n            </div>\n            \n            <div class=\"adjustment-item\" :class=\"{ 'active': needsAltitudeAdjustment }\">\n              <div class=\"adjustment-icon\">\n                <v-icon>mdi-compass</v-icon>\n              </div>\n              <div class=\"adjustment-details\">\n                <div class=\"adjustment-header\">\n                  <span class=\"adjustment-type\">{{ $t('Altitude') }}</span>\n                  <span class=\"adjustment-value\">{{ formatAdjustmentValue(adjustment.altitude) }}</span>\n                </div>\n                <div class=\"adjustment-action\">\n                  {{ needsAltitudeAdjustment ? getAltitudeAction(adjustment.altitude) : $t('No adjustment needed') }}\n                </div>\n\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- 控制按钮 -->\n        <div class=\"control-section\">\n          <div class=\"action-buttons\">\n            <button class=\"action-btn primary\" @click=\"startAutoCalibration\" :disabled=\"!canAutoCalibrate\">\n              <v-icon v-if=\"!isCalibrationRunning\">mdi-play-circle</v-icon>\n              <v-icon v-else>mdi-stop-circle</v-icon>\n              <span>{{ isCalibrationRunning ? $t('Stop Calibration') : $t('Start Auto Calibration') }}</span>\n            </button>\n\n            <button class=\"action-btn restore\" @click=\"restoreCalibration\" :disabled=\"!canRestore\">\n              <v-icon>mdi-restore</v-icon>\n              <span>{{ $t('Restore') }}</span>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n  \n  <script>\n  export default {\n    name: 'AutomaticPolarAlignmentCalibration',\n    \n    props: {\n      visible: {\n        type: Boolean,\n        default: false\n      },\n      autoStart: {\n        type: Boolean,\n        default: false\n      }\n    },\n    \n    data() {\n      return {\n        // 连接状态\n        isConnected: false,\n        \n        // 位置信息\n        currentPosition: {\n          ra: '00h 00m 00s',\n          dec: '+00° 00\\' 00\"'\n        },\n        targetPosition: {\n          ra: '00h 00m 00s',\n          dec: '+00° 00\\' 00\"'\n        },\n        \n        // 校准数据\n        calibrationPoints: [],\n        isCalibrationComplete: false,\n        isPolarAligned: false,\n        \n        // 调整信息\n        adjustment: {\n          azimuth: 0,\n          altitude: 0\n        },\n        \n        // 日志系统\n        logs: [],\n        \n        // 校准运行状态\n        isCalibrationRunning: false,\n        \n        // 视场数据\n        fieldData: null,\n        \n        // 当前进度\n        currentProgress: 0,\n        \n        // === 新增：界面控制状态 ===\n        // 拖动状态\n        isDragging: false,\n        dragOffset: { x: 0, y: 0 },\n        \n        // 控件位置\n        position: { x: 50, y: 50 },\n        \n        // 界面状态\n        isMinimized: false,\n        isCollapsed: false,\n        \n        // 是否可以恢复校准\n        canRestore: false,\n        \n        // 极轴偏移量\n        polarAxisOffset: {\n          azimuth: 0,\n          altitude: 0\n        },\n        \n        // 校准循环计数\n        calibrationLoopCount: 0,\n        lastCalibrationProgress: 0,\n        \n        // 状态持久化相关\n        statePersistenceInterval: null\n      }\n    },\n    \n    computed: {\n      // 显示的日志\n      displayLogs() {\n        // 返回最近的10条日志，按时间倒序（用于显示最新一条）\n        return this.logs.slice(-10).reverse()\n      },\n      \n      // 校准进度百分比\n      progressPercentage() {\n        // 使用从后端传入的进度\n        return this.currentProgress\n      },\n      \n      // 是否可以自动校准\n      canAutoCalibrate() {\n        return this.isConnected\n      },\n      \n      // 是否需要方位角调整\n      needsAzimuthAdjustment() {\n        return Math.abs(this.adjustment.azimuth) > 0.5\n      },\n      \n      // 是否需要高度角调整\n      needsAltitudeAdjustment() {\n        return Math.abs(this.adjustment.altitude) > 0.5\n      }\n    },\n    \n    watch: {\n      visible(newVal) {\n        if (newVal && this.autoStart) {\n          this.startAutoCalibration()\n        }\n      }\n    },\n    \n    mounted() {\n      // 实现组件初始化逻辑\n      this.initialize()\n      \n      // 增强初始化（包括状态恢复）\n      this.enhancedInitialize()\n\n      // 监听信号总线事件\n      this.$bus.$on('showPolarAlignment', this.showInterface)\n      this.$bus.$on('hidePolarAlignment', this.hideInterface)\n      \n      // 监听赤道仪连接状态\n      this.$bus.$on('MountConnected', this.updateMountConnection)\n\n      // 接收状态更新\n      this.$bus.$on('PolarAlignmentState', this.updatePolarAlignmentState)\n      \n      // 监听视场数据更新\n      this.$bus.$on('FieldDataUpdate', this.updateFieldData)\n\n      // 监听卡片信息更新\n      this.$bus.$on('updateCardInfo', this.updateCardInfo)\n      \n      // 监听页面可见性变化\n      document.addEventListener('visibilitychange', this.handleVisibilityChange)\n      \n      // 监听网络状态变化\n      window.addEventListener('online', this.handleOnlineStatusChange)\n      window.addEventListener('offline', this.handleOnlineStatusChange)\n    },\n    \n    beforeDestroy() {\n      // 移除信号总线监听\n      this.$bus.$off('showPolarAlignment', this.showInterface)\n      this.$bus.$off('hidePolarAlignment', this.hideInterface)\n      this.$bus.$off('MountConnected', this.updateMountConnection)\n      this.$bus.$off('PolarAlignmentState', this.updatePolarAlignmentState)\n      this.$bus.$off('FieldDataUpdate', this.updateFieldData)\n      this.$bus.$off('updateCardInfo', this.updateCardInfo)\n      \n      // 清理拖动事件监听\n      document.removeEventListener('mousemove', this.onDrag)\n      document.removeEventListener('mouseup', this.stopDrag)\n      \n      // 移除页面可见性和网络状态监听\n      document.removeEventListener('visibilitychange', this.handleVisibilityChange)\n      window.removeEventListener('online', this.handleOnlineStatusChange)\n      window.removeEventListener('offline', this.handleOnlineStatusChange)\n      \n      // 停止状态持久化\n      this.stopStatePersistence()\n      \n      // 保存最终状态\n      this.saveStateToStorage()\n      \n      // 实现组件销毁逻辑\n      this.cleanup()\n    },\n    \n    methods: {\n      // === 信号总线事件处理 ===\n      showInterface() {\n        this.$emit('update:visible', true)\n      },\n      \n      hideInterface() {\n        this.$emit('update:visible', false)\n      },\n      \n      updateMountConnection(status) {\n        this.isConnected = status === 1\n        const statusText = this.isConnected ? this.$t('Connected') : this.$t('Disconnected')\n        this.addLog(this.$t('Mount Connection Status', [statusText]), this.isConnected ? 'success' : 'warning')\n      },\n      \n      // === 初始化和清理 ===\n      initialize() {\n        this.addLog(this.$t('Polar Alignment Component Initialized'), 'info')\n        \n        // 初始化时检查是否需要状态恢复\n        this.checkInitialState()\n      },\n      \n      checkInitialState() {\n        // 检查初始状态，如果进度不为0，说明可能需要状态恢复\n        if (this.currentProgress > 0) {\n          console.log(`初始状态恢复检查: 进度 ${this.currentProgress}%`)\n          this.restoreCalibrationState(this.currentProgress)\n        }\n      },\n      \n      cleanup() {\n        this.addLog(this.$t('Polar Alignment Component Cleaned'), 'info')\n      },\n      \n\n      \n      // === 拖动控制方法 ===\n      startDrag(event) {\n        if (event.target.closest('.header-controls, .minimized-controls, .header-btn, .minimized-btn')) {\n          return\n        }\n        \n        this.isDragging = true\n        const rect = event.currentTarget.getBoundingClientRect()\n        const clientX = event.clientX || event.touches?.[0]?.clientX || 0\n        const clientY = event.clientY || event.touches?.[0]?.clientY || 0\n        \n        this.dragOffset = {\n          x: clientX - rect.left,\n          y: clientY - rect.top\n        }\n        \n        document.addEventListener('mousemove', this.onDrag)\n        document.addEventListener('mouseup', this.stopDrag)\n        document.addEventListener('touchmove', this.onDrag, { passive: false })\n        document.addEventListener('touchend', this.stopDrag, { passive: false })\n      },\n      \n      onDrag(event) {\n        if (!this.isDragging) return\n        \n        const clientX = event.clientX || event.touches?.[0]?.clientX || 0\n        const clientY = event.clientY || event.touches?.[0]?.clientY || 0\n        \n        const newX = clientX - this.dragOffset.x\n        const newY = clientY - this.dragOffset.y\n        \n        const componentWidth = this.isCollapsed ? 300 : 350\n        const componentHeight = this.getComponentHeight()\n        const maxX = window.innerWidth - componentWidth\n        const maxY = window.innerHeight - componentHeight\n        \n        this.position = {\n          x: Math.max(0, Math.min(newX, maxX)),\n          y: Math.max(0, Math.min(newY, maxY))\n        }\n      },\n      \n      stopDrag() {\n        this.isDragging = false\n        document.removeEventListener('mousemove', this.onDrag)\n        document.removeEventListener('mouseup', this.stopDrag)\n        document.removeEventListener('touchmove', this.onDrag)\n        document.removeEventListener('touchend', this.stopDrag)\n      },\n      \n      // 获取组件高度\n      getComponentHeight() {\n        if (this.isMinimized) {\n          return 80 // 最小化状态高度\n        } else if (this.isCollapsed) {\n          return 120 // 收缩状态高度\n        } else {\n          // 展开状态，根据内容自适应\n          const baseHeight = 400 // 基础高度\n          const logHeight = this.displayLogs.length > 0 ? 60 : 40\n          const adjustmentHeight = this.needsAzimuthAdjustment || this.needsAltitudeAdjustment ? 120 : 80\n          return Math.min(baseHeight + logHeight + adjustmentHeight, window.innerHeight * 0.8)\n        }\n      },\n      \n      // === 界面状态控制方法 ===\n      toggleMinimize() {\n        this.isMinimized = !this.isMinimized\n        this.isCollapsed = false\n        this.addLog(this.isMinimized ? this.$t('Interface Minimized') : this.$t('Interface Expanded'), 'info')\n      },\n      \n\n      \n      toggleCollapse() {\n        this.isCollapsed = !this.isCollapsed\n        this.addLog(this.isCollapsed ? this.$t('Interface Collapsed') : this.$t('Interface Expanded'), 'info')\n      },\n      \n\n      \n\n      \n      resetCalibration() {\n        this.calibrationPoints = []\n        this.isCalibrationComplete = false\n        this.isPolarAligned = false\n        this.fieldData = null\n        this.calibrationLoopCount = 0\n        this.lastCalibrationProgress = 0\n        this.addLog(this.$t('Calibration Data Reset'), 'info')\n        this.$bus.$emit('AppSendMessage', 'Vue_Command', 'ResetAutoPolarAlignment')\n      },\n      \n      restoreCalibration() {\n        this.addLog(this.$t('Calibration Data Restored'), 'success')\n        this.$bus.$emit('AppSendMessage', 'Vue_Command', 'RestoreAutoPolarAlignment')\n      },\n      \n      startAutoCalibration() {\n        if (!this.isConnected) {\n          this.addLog(this.$t('Error: Mount Not Connected'), 'error')\n          return\n        }\n        if (this.isCalibrationRunning) {\n          this.stopAutoCalibration()\n          return\n        }\n        this.isCalibrationRunning = true\n        this.resetCalibration()\n        this.addLog(this.$t('Starting Auto Calibration'), 'info')\n        this.$bus.$emit('AppSendMessage', 'Vue_Command', 'StartAutoPolarAlignment')\n      },\n      stopAutoCalibration() {\n        this.isCalibrationRunning = false\n        this.addLog(this.$t('Auto Calibration Stopped'), 'warning')\n        this.$bus.$emit('AppSendMessage', 'Vue_Command', 'StopAutoPolarAlignment')\n      },\n      \n      // === 卡片信息更新方法 ===\n      // 原始方法已被增强版本替换，见文件末尾的增强版本\n      \n      // === 视场数据处理方法 ===\n      updateFieldData(data) {\n        if (data && Array.isArray(data) && data.length >= 8) {\n          const isValidData = data.every(val => typeof val === 'number' && !isNaN(val))\n          if (!isValidData) {\n            this.addLog(this.$t('Warning: Invalid Field Data Received'), 'warning')\n            return\n          }\n\n          this.fieldData = {\n            ra: data[0],\n            dec: data[1],\n            maxra: data[2],\n            minra: data[3],\n            maxdec: data[4],\n            mindec: data[5],\n            targetra: data[6],\n            targetdec: data[7]\n          }\n          \n          if (data[6] === -1 && data[7] === -1) {\n            this.drawCalibrationPointPolygon(data[0], data[1], this.calibrationPoints.length + 1, this.fieldData)\n            this.addLog(this.$t('Calibration Point', [this.calibrationPoints.length + 1, data[0].toFixed(4), data[1].toFixed(4)]), 'info')\n          } else if (data[6] !== -1 && data[7] !== -1) {\n            this.clearCalibrationPoints()\n            this.drawAdjustmentPoints(data[0], data[1], data[6], data[7], this.fieldData, false)\n            // this.addLog(`调整模式：当前位置(${data[0].toFixed(4)}, ${data[1].toFixed(4)}) 目标位置(${data[6].toFixed(4)}, ${data[7].toFixed(4)})`, 'info')\n          }\n        } else {\n          this.addLog(this.$t('Error: Invalid Field Data Format'), 'error')\n        }\n      },\n      \n      // 绘制校准点\n      drawCalibrationPointPolygon(ra, dec, pointNumber, fieldData) {\n        this.addLog(this.$t('Drawing Calibration Point', [pointNumber, ra, dec]), 'info')\n        \n        try {\n          const coordinates = this.calculateFieldCorners(ra, dec, fieldData)\n          this.addLog(this.$t('Calculated Field Corner Coordinates', [JSON.stringify(coordinates)]), 'info')\n          \n          // 验证坐标有效性\n          const validCoordinates = coordinates.every((coord, index) => {\n            const isValid = coord && typeof coord.ra === 'number' && typeof coord.dec === 'number' &&\n                          !isNaN(coord.ra) && !isNaN(coord.dec) && isFinite(coord.ra) && isFinite(coord.dec)\n            if (!isValid) {\n              this.addLog(this.$t('Warning: Invalid Coordinate Point', [index, JSON.stringify(coord)]), 'warning')\n            }\n            return isValid\n          })\n          \n          if (!validCoordinates) {\n            this.addLog(this.$t('Invalid Field Coordinates'), 'error')\n            return\n          }\n          \n          const color = {\n            stroke: \"#FFFFFF\",\n            strokeOpacity: 1,\n            fill: \"#FFFFFF\", \n            fillOpacity: 0.2\n          }\n          \n          this.addLog(this.$t('Sending Draw Calibration Event', [pointNumber]), 'info')\n          this.$bus.$emit('DrawCalibrationPointPolygon', coordinates, color, `Calibration_${pointNumber}`)\n          \n        } catch (error) {\n          this.addLog(this.$t('Error Drawing Calibration Point', [error.message]), 'error')\n          console.error('绘制校准点错误：', error)\n        }\n      },\n      \n      // 清除所有校准点\n      clearCalibrationPoints() {\n        this.addLog(this.$t('Clearing All Calibration Points'), 'info')\n        this.$bus.$emit('ClearCalibrationPoints')\n      },\n      \n      // 绘制调整点\n      drawAdjustmentPoints(currentRa, currentDec, targetRa, targetDec, fieldData, isTimerUpdate = false) {\n        this.addLog(this.$t('Starting Draw Adjustment Points', [currentRa, currentDec, targetRa, targetDec]), 'info')\n        \n        try {\n          const currentCoordinates = this.calculateFieldCorners(currentRa, currentDec, fieldData)\n          const targetCoordinates = this.calculateFieldCorners(targetRa, targetDec, fieldData)\n          \n          this.addLog(this.$t('Current Position Field Corners', [JSON.stringify(currentCoordinates)]), 'info')\n          this.addLog(this.$t('Target Position Field Corners', [JSON.stringify(targetCoordinates)]), 'info')\n          \n          // 验证坐标有效性\n          const currentValid = currentCoordinates.every((coord, index) => {\n            const isValid = coord && typeof coord.ra === 'number' && typeof coord.dec === 'number' &&\n                          !isNaN(coord.ra) && !isNaN(coord.dec) && isFinite(coord.ra) && isFinite(coord.dec)\n            if (!isValid) {\n              this.addLog(this.$t('Warning: Invalid Current Position Coordinate', [index, JSON.stringify(coord)]), 'warning')\n            }\n            return isValid\n          })\n          \n          const targetValid = targetCoordinates.every((coord, index) => {\n            const isValid = coord && typeof coord.ra === 'number' && typeof coord.dec === 'number' &&\n                          !isNaN(coord.ra) && !isNaN(coord.dec) && isFinite(coord.ra) && isFinite(coord.dec)\n            if (!isValid) {\n              this.addLog(this.$t('Warning: Invalid Target Position Coordinate', [index, JSON.stringify(coord)]), 'warning')\n            }\n            return isValid\n          })\n          \n          if (!currentValid || !targetValid) {\n            this.addLog(this.$t('Error: Invalid Adjustment Point Coordinates'), 'error')\n            return\n          }\n          \n          const currentColor = {\n            stroke: \"#00BFFF\",\n            strokeOpacity: 1,\n            fill: \"#00BFFF\", \n            fillOpacity: 0.3\n          }\n          \n          const targetColor = {\n            stroke: \"#FF8C00\",\n            strokeOpacity: 1,\n            fill: \"#FF8C00\", \n            fillOpacity: 0.3\n          }\n          \n          this.addLog(this.$t('Sending Draw Adjustment Points Event'), 'info')\n          this.$bus.$emit('DrawAdjustmentPointsPolygon', currentCoordinates, targetCoordinates, currentColor, targetColor, isTimerUpdate)\n          \n        } catch (error) {\n          this.addLog(this.$t('Error Drawing Adjustment Points', [error.message]), 'error')\n          console.error('绘制调整点错误：', error)\n        }\n      },\n      \n      // 计算视场的五个角点坐标\n      calculateFieldCorners(centerRa, centerDec, fieldData) {\n        this.addLog(this.$t('Calculating Field Corners', [centerRa, centerDec]), 'info')\n        \n        if (!fieldData) {\n          this.addLog(this.$t('Using Default Field Size: 0.5 Degrees'), 'info')\n          const fieldSize = 0.5\n          const coordinates = [\n            { ra: centerRa + fieldSize/2, dec: centerDec + fieldSize/2 },\n            { ra: centerRa - fieldSize/2, dec: centerDec + fieldSize/2 },\n            { ra: centerRa - fieldSize/2, dec: centerDec - fieldSize/2 },\n            { ra: centerRa + fieldSize/2, dec: centerDec - fieldSize/2 },\n            { ra: centerRa + fieldSize/2, dec: centerDec + fieldSize/2 }\n          ]\n          this.addLog(this.$t('Default Field Corners', [JSON.stringify(coordinates)]), 'info')\n          return coordinates\n        }\n        \n        const { maxra, minra, maxdec, mindec } = fieldData\n        this.addLog(this.$t('Using Field Data', [maxra, minra, maxdec, mindec]), 'info')\n        \n        const coordinates = [\n          { ra: maxra, dec: maxdec },\n          { ra: minra, dec: maxdec },\n          { ra: minra, dec: mindec },\n          { ra: maxra, dec: mindec },\n          { ra: maxra, dec: maxdec }\n        ]\n        \n        this.addLog(this.$t('Field Corner Calculation Result', [JSON.stringify(coordinates)]), 'info')\n        return coordinates\n      },\n      \n\n      \n      // === 格式化方法 ===\n      formatTime(timestamp) {\n        if (!timestamp) return ''\n        const date = new Date(timestamp)\n        return date.toLocaleTimeString('zh-CN', { \n          hour12: false, \n          hour: '2-digit', \n          minute: '2-digit', \n          second: '2-digit' \n        })\n      },\n      \n      formatAdjustmentValue(value) {\n        return Math.abs(value).toFixed(1) + \"'\"\n      },\n      \n      // === 辅助方法 ===\n      getStepClass(index) {\n        // 根据进度百分比确定节点状态\n        const progress = this.progressPercentage\n        \n        switch(index) {\n          case 0: // 初始化节点\n            if (progress >= 15) return { completed: true }\n            if (progress >= 0) return { current: true }\n            return {}\n            \n          case 1: // 第一次校准节点\n            if (progress >= 25) return { completed: true }\n            if (progress >= 15) return { current: true }\n            return {}\n            \n          case 2: // 第二次校准节点\n            if (progress >= 50) return { completed: true }\n            if (progress >= 25) return { current: true }\n            return {}\n            \n          case 3: // 第三次校准节点\n            if (progress >= 75) return { completed: true }\n            if (progress >= 50) return { current: true }\n            return {}\n            \n          default:\n            return {}\n        }\n      },\n      \n      getAzimuthAction(azimuth) {\n        if (azimuth > 0.5) return this.$t('Turn Right') || '向右转'\n        if (azimuth < -0.5) return this.$t('Turn Left') || '向左转'\n        return ''\n      },\n      \n      getAltitudeAction(altitude) {\n        if (altitude > 0.5) return this.$t('Raise Up') || '抬高'\n        if (altitude < -0.5) return this.$t('Lower Down') || '降低'\n        return ''\n      },\n      \n\n      \n      // === 日志方法 ===\n      addLog(message, level = 'info') {\n        const log = {\n          id: Date.now() + Math.random(),\n          message,\n          level,\n          timestamp: new Date()\n        }\n        console.log(log.message)\n        this.logs.push(log)\n        // 限制日志数量\n        if (this.logs.length > 100) {\n          this.logs.shift()\n        }\n      },\n      \n      clearLogs() {\n        this.logs = []\n      },\n      \n      // === 极轴校准状态更新方法 ===\n      calculatePolarAxisOffset() {\n        this.polarAxisOffset = {\n          azimuth: this.adjustment.azimuth,\n          altitude: this.adjustment.altitude\n        }\n      },\n      \n      updatePolarAlignmentState(stateNumber, logMessage, progress) {\n        if (logMessage && typeof logMessage === 'string') {\n          let level = 'info'\n          if (logMessage.toLowerCase().includes('error') || logMessage.toLowerCase().includes('失败')) {\n            level = 'error'\n          } else if (logMessage.toLowerCase().includes('warning') || logMessage.toLowerCase().includes('警告')) {\n            level = 'warning'\n          } else if (logMessage.toLowerCase().includes('success') || logMessage.toLowerCase().includes('成功') || logMessage.toLowerCase().includes('完成')) {\n            level = 'success'\n          }\n          this.addLog(logMessage, level)\n        }\n        \n        if (progress !== undefined && progress !== null) {\n          // 检查是否需要状态恢复\n          this.checkAndRestoreState(progress)\n          \n          this.currentProgress = progress\n          \n          if (progress >= 0 && progress <= 100) {\n            // 根据进度更新校准状态\n            if (progress >= 0 && progress < 15) {\n              // 初始化阶段\n              this.calibrationPoints = []\n              this.isCalibrationComplete = false\n              this.isPolarAligned = false\n            } else if (progress >= 15 && progress < 25) {\n              // 第一次校准阶段\n              if (this.calibrationPoints.length === 0) {\n                this.calibrationPoints.push({\n                  x: 150 + Math.random() * 20 - 10,\n                  y: 150 + Math.random() * 20 - 10,\n                  index: 0\n                })\n              }\n            } else if (progress >= 25 && progress < 50) {\n              // 第二次校准阶段\n              if (this.calibrationPoints.length === 1) {\n                this.calibrationPoints.push({\n                  x: 150 + Math.random() * 20 - 10,\n                  y: 150 + Math.random() * 20 - 10,\n                  index: 1\n                })\n              }\n            } else if (progress >= 50 && progress < 75) {\n              // 第三次校准阶段\n              if (this.calibrationPoints.length === 2) {\n                this.calibrationPoints.push({\n                  x: 150 + Math.random() * 20 - 10,\n                  y: 150 + Math.random() * 20 - 10,\n                  index: 2\n                })\n              }\n            } else if (progress >= 75 && progress < 95) {\n              // 循环校准调整阶段\n              this.isCalibrationComplete = true\n              this.calculatePolarAxisOffset()\n              \n              // 检测校准循环\n              if (progress < this.lastCalibrationProgress && this.lastCalibrationProgress >= 75) {\n                this.calibrationLoopCount++\n                this.addLog(this.$t('Calibration Round Started', [this.calibrationLoopCount]), 'info')\n              }\n              \n              // 在循环校准阶段，进度可能会在75-95之间波动\n              // 这表示系统正在进行多次校准调整\n              if (progress > 85) {\n                this.addLog(this.$t('Calibration Progress Info', [Math.round(progress), this.calibrationLoopCount]), 'info')\n              }\n              \n              this.lastCalibrationProgress = progress\n            } else if (progress >= 95 && progress <= 100) {\n              // 最终验证阶段\n              this.isCalibrationComplete = true\n              this.calculatePolarAxisOffset()\n              \n              if (Math.abs(this.polarAxisOffset.azimuth) < 1.0 && Math.abs(this.polarAxisOffset.altitude) < 1.0) {\n                this.isPolarAligned = true\n                this.addLog(this.$t('Polar Alignment Completed'), 'success')\n              } else {\n                this.addLog(this.$t('Polar Alignment Needs Manual Adjustment'), 'warning')\n              }\n            }\n          }\n        }\n      },\n      \n      // === 状态恢复方法 ===\n      checkAndRestoreState(newProgress) {\n        // 如果进度发生显著变化，说明可能是页面刷新后的状态恢复\n        const progressDiff = Math.abs(newProgress - this.currentProgress)\n        \n        if (progressDiff > 5) { // 进度差异超过5%时触发状态恢复\n          console.log(`状态恢复检测: 当前进度 ${this.currentProgress} -> 新进度 ${newProgress}`)\n          this.restoreCalibrationState(newProgress)\n        }\n      },\n      \n      restoreCalibrationState(targetProgress) {\n        // 根据目标进度恢复校准状态\n        console.log(`恢复校准状态: 目标进度 ${targetProgress}%`)\n        \n        // 重置状态\n        this.calibrationPoints = []\n        this.isCalibrationComplete = false\n        this.isPolarAligned = false\n        this.calibrationLoopCount = 0\n        this.lastCalibrationProgress = 0\n        \n        // 根据进度恢复相应的校准点\n        if (targetProgress >= 15) {\n          this.calibrationPoints.push({\n            x: 150 + Math.random() * 20 - 10,\n            y: 150 + Math.random() * 20 - 10,\n            index: 0\n          })\n        }\n        \n        if (targetProgress >= 25) {\n          this.calibrationPoints.push({\n            x: 150 + Math.random() * 20 - 10,\n            y: 150 + Math.random() * 20 - 10,\n            index: 1\n          })\n        }\n        \n        if (targetProgress >= 50) {\n          this.calibrationPoints.push({\n            x: 150 + Math.random() * 20 - 10,\n            y: 150 + Math.random() * 20 - 10,\n            index: 2\n          })\n        }\n        \n        // 恢复校准完成状态\n        if (targetProgress >= 75) {\n          this.isCalibrationComplete = true\n          this.calculatePolarAxisOffset()\n          \n          // 估算校准循环次数（基于进度）\n          if (targetProgress >= 85) {\n            this.calibrationLoopCount = Math.floor((targetProgress - 75) / 5) + 1\n          }\n        }\n        \n        // 恢复极轴对齐状态\n        if (targetProgress >= 95) {\n          this.isPolarAligned = Math.abs(this.adjustment.azimuth) < 1.0 && Math.abs(this.adjustment.altitude) < 1.0\n        }\n        \n        // 更新校准运行状态\n        this.updateCalibrationRunningState(targetProgress)\n        \n        console.log(`校准状态已恢复: 进度 ${targetProgress}%, 校准点 ${this.calibrationPoints.length}, 完成状态 ${this.isCalibrationComplete}`)\n      },\n      \n      updateCalibrationRunningState(progress) {\n        // 根据进度判断校准是否正在运行\n        if (progress > 0 && progress < 100) {\n          this.isCalibrationRunning = true\n          console.log('检测到校准运行状态')\n        } else if (progress >= 100) {\n          this.isCalibrationRunning = false\n          console.log('检测到校准完成状态')\n        } else {\n          this.isCalibrationRunning = false\n          console.log('检测到校准停止状态')\n        }\n      },\n      \n      // === 增强的卡片信息更新方法 ===\n      updateCardInfo(currentRa, currentDec, targetRa, targetDec, azimuthDegrees, altitudeDegrees, raAdjustment, decAdjustment) {\n        // 检查数据是否有显著变化\n        const hasSignificantChange = this.checkSignificantDataChange(\n          currentRa, currentDec, targetRa, targetDec, \n          azimuthDegrees, altitudeDegrees\n        )\n        \n        if (hasSignificantChange) {\n          console.log('检测到显著数据变化')\n        }\n        \n        this.currentPosition.ra = currentRa\n        this.currentPosition.dec = currentDec\n        this.targetPosition.ra = targetRa\n        this.targetPosition.dec = targetDec\n        this.adjustment.azimuth = azimuthDegrees\n        this.adjustment.altitude = altitudeDegrees\n        \n        // 更新极轴对齐状态\n        this.isPolarAligned = Math.abs(azimuthDegrees) < 1.0 && Math.abs(altitudeDegrees) < 1.0\n        \n        // 如果检测到显著变化，可能需要状态恢复\n        if (hasSignificantChange) {\n          this.checkAndRestoreState(this.currentProgress)\n        }\n      },\n      \n      checkSignificantDataChange(currentRa, currentDec, targetRa, targetDec, azimuthDegrees, altitudeDegrees) {\n        // 检查位置数据是否有显著变化\n        const raDiff = Math.abs(this.currentPosition.ra - currentRa)\n        const decDiff = Math.abs(this.currentPosition.dec - currentDec)\n        const azimuthDiff = Math.abs(this.adjustment.azimuth - azimuthDegrees)\n        const altitudeDiff = Math.abs(this.adjustment.altitude - altitudeDegrees)\n        \n        // 如果任何数据变化超过阈值，认为是显著变化\n        return raDiff > 0.1 || decDiff > 0.1 || azimuthDiff > 1.0 || altitudeDiff > 1.0\n      },\n      \n      // === 状态持久化方法 ===\n      saveStateToStorage() {\n        try {\n          const state = {\n            currentProgress: this.currentProgress,\n            isCalibrationRunning: this.isCalibrationRunning,\n            isCalibrationComplete: this.isCalibrationComplete,\n            isPolarAligned: this.isPolarAligned,\n            calibrationPoints: this.calibrationPoints,\n            calibrationLoopCount: this.calibrationLoopCount,\n            adjustment: this.adjustment,\n            currentPosition: this.currentPosition,\n            targetPosition: this.targetPosition,\n            timestamp: Date.now()\n          }\n          \n          localStorage.setItem('polarAlignmentState', JSON.stringify(state))\n          console.log('状态已保存到存储')\n        } catch (error) {\n          console.error('保存状态时出错:', error.message)\n        }\n      },\n      \n      loadStateFromStorage() {\n        try {\n          const savedState = localStorage.getItem('polarAlignmentState')\n          if (savedState) {\n            const state = JSON.parse(savedState)\n            const timeDiff = Date.now() - state.timestamp\n            \n            // 如果状态保存时间超过30分钟，认为过期\n            if (timeDiff > 30 * 60 * 1000) {\n              console.log('保存的状态已过期')\n              localStorage.removeItem('polarAlignmentState')\n              return false\n            }\n            \n            // 恢复状态\n            this.currentProgress = state.currentProgress || 0\n            this.isCalibrationRunning = state.isCalibrationRunning || false\n            this.isCalibrationComplete = state.isCalibrationComplete || false\n            this.isPolarAligned = state.isPolarAligned || false\n            this.calibrationPoints = state.calibrationPoints || []\n            this.calibrationLoopCount = state.calibrationLoopCount || 0\n            this.adjustment = state.adjustment || { azimuth: 0, altitude: 0 }\n            this.currentPosition = state.currentPosition || { ra: '00h 00m 00s', dec: '+00° 00\\' 00\"' }\n            this.targetPosition = state.targetPosition || { ra: '00h 00m 00s', dec: '+00° 00\\' 00\"' }\n            \n            console.log(`从存储加载状态: 进度 ${this.currentProgress}%`)\n            return true\n          }\n        } catch (error) {\n          console.error('加载状态时出错:', error.message)\n        }\n        return false\n      },\n      \n      // === 增强的初始化方法 ===\n      enhancedInitialize() {\n        // 尝试从存储中加载状态\n        const stateLoaded = this.loadStateFromStorage()\n        \n        if (stateLoaded) {\n          // 如果加载了状态，检查是否需要进一步恢复\n          this.checkAndRestoreState(this.currentProgress)\n        }\n        \n        // 设置定期保存状态\n        this.startStatePersistence()\n        console.log('增强初始化完成')\n      },\n      \n      startStatePersistence() {\n        // 每30秒保存一次状态\n        this.statePersistenceInterval = setInterval(() => {\n          if (this.isCalibrationRunning || this.currentProgress > 0) {\n            this.saveStateToStorage()\n          }\n        }, 30000)\n      },\n      \n      stopStatePersistence() {\n        if (this.statePersistenceInterval) {\n          clearInterval(this.statePersistenceInterval)\n          this.statePersistenceInterval = null\n        }\n      },\n      \n      // === 页面可见性变化处理 ===\n      handleVisibilityChange() {\n        if (document.visibilityState === 'visible') {\n          // 页面变为可见时，检查是否需要状态恢复\n          console.log('页面变为可见')\n          this.checkAndRestoreState(this.currentProgress)\n        } else {\n          // 页面变为隐藏时，保存当前状态\n          console.log('页面变为隐藏')\n          this.saveStateToStorage()\n        }\n      },\n      \n      // === 网络状态变化处理 ===\n      handleOnlineStatusChange() {\n        if (navigator.onLine) {\n          console.log('网络连接已恢复')\n          // 网络恢复时，检查状态是否需要同步\n          this.checkAndRestoreState(this.currentProgress)\n        } else {\n          console.log('网络连接已断开')\n        }\n      },\n      \n      // === 自动状态恢复方法 ===\n      autoRestoreCalibrationState() {\n        // 如果当前有进度但校准未运行，尝试恢复状态\n        if (this.currentProgress > 0 && !this.isCalibrationRunning) {\n          console.log('自动恢复校准状态')\n          \n          // 根据进度判断是否需要重新启动校准\n          if (this.currentProgress < 100) {\n            console.log('校准可能需要重新启动')\n            // 可以在这里添加自动重启校准的逻辑\n            // this.startAutoCalibration()\n          }\n        }\n      },\n      \n      // === 状态同步方法 ===\n      syncStateWithBackend() {\n        // 向后端请求当前状态\n        console.log('向后端请求状态')\n        this.$bus.$emit('AppSendMessage', 'Vue_Command', 'GetPolarAlignmentState')\n      }\n    }\n  }\n  </script>\n  \n  <style scoped>\n  /* === 最小化状态样式 === */\n  .polar-alignment-minimized {\n    position: fixed;\n    width: 250px;\n    max-width: 80vw;\n    background: rgba(35, 35, 45, 0.95);\n    border: 1px solid rgba(255, 255, 255, 0.1);\n    border-radius: 8px;\n    backdrop-filter: blur(10px);\n    z-index: 1000;\n    cursor: move;\n    user-select: none;\n    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);\n    transition: all 0.3s ease;\n    /* 添加背景隔离，防止操作映射到背景 */\n    isolation: isolate;\n    /* 移除contain属性，它可能阻止拖动事件 */\n  }\n  \n  .polar-alignment-minimized:hover {\n    box-shadow: 0 6px 25px rgba(0, 0, 0, 0.4);\n    transform: translateY(-2px);\n  }\n  \n  .minimized-header {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 8px 12px;\n    background: rgba(60, 60, 70, 0.9);\n    border-radius: 8px 8px 0 0;\n    border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n  }\n  \n  .minimized-drag-area {\n    display: flex;\n    align-items: center;\n    flex: 1;\n    cursor: move;\n    /* 确保拖动区域有正确的交互 */\n    user-select: none;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n  }\n  \n  .minimized-icon {\n    color: #64b5f6;\n    font-size: 16px;\n    margin-right: 8px;\n  }\n  \n  .minimized-title {\n    font-size: 12px;\n    font-weight: 600;\n    color: #ffffff;\n    flex: 1;\n  }\n  \n  .minimized-controls {\n    display: flex;\n    gap: 4px;\n    /* 确保控制区域可以接收事件 */\n    position: relative;\n    z-index: 20;\n    pointer-events: auto;\n  }\n  \n  .minimized-btn {\n    width: 24px;\n    height: 24px;\n    border: none;\n    background: rgba(255, 255, 255, 0.1);\n    border-radius: 4px;\n    color: #ffffff;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: all 0.2s ease;\n    /* 移动端触摸优化 */\n    touch-action: manipulation;\n    -webkit-tap-highlight-color: transparent;\n    /* 确保按钮可以正确点击 */\n    position: relative;\n    z-index: 10;\n    /* 确保按钮可以接收点击事件 */\n    pointer-events: auto;\n  }\n  \n  .minimized-btn:hover {\n    background: rgba(255, 255, 255, 0.2);\n  }\n  \n  .minimized-btn:active {\n    background: rgba(255, 255, 255, 0.3);\n    transform: scale(0.95);\n  }\n  \n  .minimized-status {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    padding: 8px 12px;\n    font-size: 11px;\n  }\n  \n  .status-indicator {\n    width: 6px;\n    height: 6px;\n    border-radius: 50%;\n    background: #f44336;\n    transition: all 0.3s ease;\n  }\n  \n  .status-indicator.online {\n    background: #4caf50;\n    box-shadow: 0 0 4px rgba(76, 175, 80, 0.6);\n  }\n  \n  .status-text {\n    color: rgba(255, 255, 255, 0.8);\n  }\n  \n  /* === 完整控件样式 === */\n  .polar-alignment-widget {\n    position: fixed;\n    width: 350px;\n    max-width: 90vw;\n    background: rgba(35, 35, 45, 0.95);\n    border: 1px solid rgba(255, 255, 255, 0.1);\n    border-radius: 8px;\n    backdrop-filter: blur(10px);\n    z-index: 1000;\n    cursor: move;\n    user-select: none;\n    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);\n    transition: all 0.3s ease;\n    overflow: hidden;\n    /* 添加背景隔离，防止操作映射到背景 */\n    isolation: isolate;\n    /* 移除contain属性，它可能阻止拖动事件 */\n  }\n  \n  .polar-alignment-widget:hover {\n    box-shadow: 0 6px 25px rgba(0, 0, 0, 0.4);\n  }\n  \n  .polar-alignment-widget.collapsed {\n    width: 300px;\n    max-width: 85vw;\n  }\n  \n  /* === 控件头部样式 === */\n  .widget-header {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 12px 16px;\n    background: rgba(60, 60, 70, 0.9);\n    border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n  }\n  \n  .header-drag-area {\n    display: flex;\n    align-items: center;\n    flex: 1;\n    cursor: move;\n    /* 确保拖动区域有正确的交互 */\n    user-select: none;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    /* 添加拖动时的视觉反馈 */\n    transition: background-color 0.2s ease;\n    /* 确保拖动区域有正确的指针事件 */\n    pointer-events: auto;\n  }\n  \n  .widget-header:hover {\n    background: rgba(60, 60, 70, 0.95);\n  }\n  \n  .header-left {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    flex: 1;\n  }\n  \n  .header-icon {\n    color: #64b5f6;\n    font-size: 18px;\n  }\n  \n  .header-title {\n    font-size: 14px;\n    font-weight: 600;\n    color: #ffffff;\n  }\n  \n  .connection-indicator {\n    display: flex;\n    align-items: center;\n  }\n  \n  .status-dot {\n    width: 8px;\n    height: 8px;\n    border-radius: 50%;\n    background: #f44336;\n    transition: all 0.3s ease;\n  }\n  \n  .status-dot.online {\n    background: #4caf50;\n    box-shadow: 0 0 6px rgba(76, 175, 80, 0.6);\n  }\n  \n  .header-controls {\n    display: flex;\n    gap: 4px;\n    /* 确保控制区域可以接收事件 */\n    position: relative;\n    z-index: 20;\n    pointer-events: auto;\n  }\n  \n  .header-btn {\n    width: 28px;\n    height: 28px;\n    border: none;\n    background: rgba(255, 255, 255, 0.1);\n    border-radius: 4px;\n    color: #ffffff;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: all 0.2s ease;\n    /* 移动端触摸优化 */\n    touch-action: manipulation;\n    -webkit-tap-highlight-color: transparent;\n    /* 确保按钮可以正确点击 */\n    position: relative;\n    z-index: 10;\n    /* 确保按钮可以接收点击事件 */\n    pointer-events: auto;\n  }\n  \n  .header-btn:hover {\n    background: rgba(255, 255, 255, 0.2);\n  }\n  \n  .header-btn:active {\n    background: rgba(255, 255, 255, 0.3);\n    transform: scale(0.95);\n  }\n  \n  .header-btn.close-btn:hover {\n    background: #f44336;\n  }\n  \n  /* === 控件内容样式 === */\n  .widget-content {\n    transition: all 0.3s ease;\n    /* 确保内容区域有适当的背景隔离 */\n    background: rgba(35, 35, 45, 0.95);\n    position: relative;\n    z-index: 1;\n    /* 确保内容区域不会阻止拖动事件 */\n    pointer-events: auto;\n  }\n  \n  .widget-content.collapsed {\n    padding: 12px;\n  }\n  \n  .widget-content.expanded {\n    padding: 16px;\n    max-height: 80vh;\n    overflow-y: auto;\n    /* 优化内容布局，充分利用空间 */\n    display: flex;\n    flex-direction: column;\n    gap: 16px;\n    /* 确保内容充分利用可用空间 */\n    min-height: 0;\n    flex: 1;\n    /* 自适应高度 */\n    height: auto;\n  }\n  \n  /* === 收缩状态样式 === */\n  .collapsed-info {\n    display: flex;\n    align-items: center;\n    gap: 16px;\n  }\n  \n  .collapsed-progress {\n    flex-shrink: 0;\n  }\n  \n  .progress-circle {\n    width: 60px;\n    height: 60px;\n    border-radius: 50%;\n    background: conic-gradient(\n      #64b5f6 0deg var(--progress, 0deg),\n      rgba(255, 255, 255, 0.1) var(--progress, 0deg) 360deg\n    );\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n  }\n  \n  .progress-circle::before {\n    content: '';\n    position: absolute;\n    width: 50px;\n    height: 50px;\n    border-radius: 50%;\n    background: rgba(35, 35, 45, 0.95);\n  }\n  \n  .progress-text {\n    position: relative;\n    z-index: 1;\n    font-size: 12px;\n    font-weight: 600;\n    color: #ffffff;\n  }\n  \n  .collapsed-status {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n  }\n  \n  .status-item {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    font-size: 11px;\n  }\n  \n  .status-label {\n    color: rgba(255, 255, 255, 0.7);\n  }\n  \n  .status-value {\n    color: #ffffff;\n    font-weight: 600;\n    font-family: monospace;\n  }\n  \n  .status-value.needs-adjustment {\n    color: #ff9800;\n  }\n  \n  /* === 展开状态样式 === */\n  .content-sections {\n    display: flex;\n    flex-direction: column;\n    gap: 16px;\n    /* 优化布局，充分利用可用空间 */\n    width: 100%;\n    min-height: 0;\n  }\n  \n  /* === 校准步骤进度条样式 === */\n  .calibration-progress {\n    margin-bottom: 16px;\n  }\n\n  .progress-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 8px;\n  }\n\n  .progress-title {\n    font-size: 12px;\n    font-weight: 600;\n    color: #ffffff;\n  }\n\n  .calibration-loop-info {\n    font-size: 10px;\n    color: #ff9800;\n    font-weight: 500;\n    padding: 2px 6px;\n    background: rgba(255, 152, 0, 0.2);\n    border-radius: 4px;\n    animation: loop-pulse 2s infinite;\n  }\n\n  @keyframes loop-pulse {\n    0%, 100% { opacity: 1; }\n    50% { opacity: 0.7; }\n  }\n\n  .progress-bar {\n    position: relative;\n    width: 100%;\n    height: 8px;\n    background: rgba(255, 255, 255, 0.1);\n    border-radius: 4px;\n    overflow: visible;\n  }\n\n  .progress-fill {\n    height: 100%;\n    background: linear-gradient(90deg, #64b5f6, #4caf50);\n    border-radius: 4px;\n    transition: width 0.1s ease;\n  }\n\n  .progress-nodes {\n    position: absolute;\n    top: 50%;\n    left: 0;\n    right: 0;\n    transform: translateY(-50%);\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  .progress-node {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    z-index: 2;\n  }\n\n  .node-circle {\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    background: rgba(255, 255, 255, 0.2);\n    border: 2px solid rgba(255, 255, 255, 0.3);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 10px;\n    font-weight: bold;\n    color: #ffffff;\n    transition: all 0.3s ease;\n  }\n\n  .progress-node.completed .node-circle {\n    background: #4caf50;\n    border-color: #4caf50;\n    box-shadow: 0 0 8px rgba(76, 175, 80, 0.4);\n  }\n\n  .progress-node.current .node-circle {\n    background: #64b5f6;\n    border-color: #64b5f6;\n    box-shadow: 0 0 8px rgba(100, 181, 246, 0.4);\n  }\n\n  .progress-node.adjustment-node .node-circle {\n    background: rgba(255, 152, 0, 0.3);\n    border-color: rgba(255, 152, 0, 0.5);\n  }\n\n  .progress-node.adjustment-node.active .node-circle {\n    background: #ff9800;\n    border-color: #ff9800;\n    box-shadow: 0 0 8px rgba(255, 152, 0, 0.4);\n  }\n\n  .progress-node.calibration-node .node-circle {\n    background: rgba(255, 152, 0, 0.3);\n    border-color: rgba(255, 152, 0, 0.5);\n  }\n\n  .progress-node.calibration-node.active .node-circle {\n    background: #ff9800;\n    border-color: #ff9800;\n    box-shadow: 0 0 8px rgba(255, 152, 0, 0.4);\n  }\n\n  .progress-node.calibration-node.looping .node-circle {\n    animation: calibration-pulse 2s infinite;\n  }\n\n  @keyframes calibration-pulse {\n    0% { \n      background: #ff9800;\n      box-shadow: 0 0 8px rgba(255, 152, 0, 0.4);\n    }\n    50% { \n      background: #ff5722;\n      box-shadow: 0 0 12px rgba(255, 152, 0, 0.6);\n    }\n    100% { \n      background: #ff9800;\n      box-shadow: 0 0 8px rgba(255, 152, 0, 0.4);\n    }\n  }\n\n  .progress-node.calibration-node.looping .node-circle i {\n    animation: calibration-rotate 2s linear infinite;\n  }\n\n  @keyframes calibration-rotate {\n    from { transform: rotate(0deg); }\n    to { transform: rotate(360deg); }\n  }\n\n  .progress-node.verification-node .node-circle {\n    background: rgba(76, 175, 80, 0.3);\n    border-color: rgba(76, 175, 80, 0.5);\n  }\n\n  .progress-node.verification-node.active .node-circle {\n    background: #4caf50;\n    border-color: #4caf50;\n    box-shadow: 0 0 8px rgba(76, 175, 80, 0.4);\n  }\n\n  .node-label {\n    position: absolute;\n    top: 100%;\n    left: 50%;\n    transform: translateX(-50%);\n    font-size: 9px;\n    color: rgba(255, 255, 255, 0.7);\n    font-weight: 500;\n    margin-top: 4px;\n    white-space: nowrap;\n    text-align: center;\n  }\n\n  .progress-node {\n    position: relative;\n  }\n\n  /* === 位置信息样式 === */\n  .position-section {\n    margin-top: 16px;\n    padding-top: 16px;\n    border-top: 1px solid rgba(255, 255, 255, 0.1);\n  }\n\n  .position-grid {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 1fr 1fr;\n    gap: 8px;\n    background: rgba(255, 255, 255, 0.05);\n    border-radius: 6px;\n    padding: 12px;\n  }\n\n  .position-cell {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 4px;\n    padding: 8px;\n    border-radius: 4px;\n    transition: all 0.3s ease;\n  }\n\n  .position-cell.current {\n    background: rgba(100, 181, 246, 0.1);\n    border: 1px solid rgba(100, 181, 246, 0.2);\n  }\n\n  .position-cell.target {\n    background: rgba(255, 152, 0, 0.1);\n    border: 1px solid rgba(255, 152, 0, 0.2);\n  }\n\n  .cell-label {\n    font-size: 10px;\n    color: rgba(255, 255, 255, 0.7);\n    font-weight: 500;\n    text-transform: uppercase;\n    letter-spacing: 0.5px;\n  }\n\n  .cell-value {\n    font-size: 11px;\n    color: #ffffff;\n    font-family: monospace;\n    font-weight: 600;\n  }\n\n  /* === 调整指导样式 === */\n  .adjustment-section {\n    margin-top: 16px;\n    padding-top: 16px;\n    border-top: 1px solid rgba(255, 255, 255, 0.1);\n  }\n\n  .adjustment-instructions {\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n  }\n\n  .adjustment-item {\n    display: flex;\n    align-items: center;\n    gap: 12px;\n    padding: 12px;\n    background: rgba(255, 255, 255, 0.05);\n    border-radius: 6px;\n    transition: all 0.3s ease;\n    border: 1px solid transparent;\n  }\n\n  .adjustment-item.active {\n    background: rgba(255, 152, 0, 0.15);\n    border-color: #ff9800;\n  }\n\n  .adjustment-icon {\n    width: 28px;\n    height: 28px;\n    border-radius: 50%;\n    background: rgba(255, 255, 255, 0.1);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 14px;\n    color: #ffffff;\n    flex-shrink: 0;\n  }\n\n  .adjustment-item.active .adjustment-icon {\n    background: #ff9800;\n  }\n\n  .adjustment-details {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n  }\n\n  .adjustment-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  .adjustment-type {\n    font-size: 12px;\n    color: #ffffff;\n    font-weight: 500;\n  }\n\n  .adjustment-value {\n    font-size: 18px;\n    color: #ffffff;\n    font-family: monospace;\n    font-weight: 700;\n    text-shadow: 0 0 4px rgba(255, 255, 255, 0.3);\n    letter-spacing: 1px;\n  }\n\n  .adjustment-action {\n    font-size: 10px;\n    color: rgba(255, 255, 255, 0.7);\n    font-weight: 500;\n  }\n\n  .adjustment-item.active .adjustment-action {\n    color: #ff9800;\n  }\n  \n  /* === 操作按钮样式 === */\n  .control-section {\n    margin-top: 16px;\n    padding-top: 16px;\n    border-top: 1px solid rgba(255, 255, 255, 0.1);\n  }\n\n  .action-buttons {\n    display: flex;\n    flex-direction: row;\n    gap: 10px;\n  }\n\n  .action-btn {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 8px;\n    padding: 12px 16px;\n    border: none;\n    border-radius: 6px;\n    cursor: pointer;\n    font-size: 13px;\n    font-weight: 500;\n    transition: all 0.3s ease;\n    pointer-events: auto;\n    min-height: 40px;\n    touch-action: manipulation;\n    position: relative;\n    flex: 1;\n  }\n\n  .action-btn.primary {\n    background: linear-gradient(135deg, #64b5f6, #42a5f5);\n    color: #ffffff;\n    box-shadow: 0 2px 6px rgba(100, 181, 246, 0.3);\n  }\n\n  .action-btn.primary:hover:not(:disabled) {\n    background: linear-gradient(135deg, #42a5f5, #2196f3);\n    transform: translateY(-1px);\n    box-shadow: 0 4px 12px rgba(100, 181, 246, 0.4);\n  }\n\n  .action-btn.secondary {\n    background: rgba(255, 255, 255, 0.1);\n    color: #ffffff;\n    border: 1px solid rgba(255, 255, 255, 0.2);\n  }\n\n  .action-btn.secondary:hover:not(:disabled) {\n    background: rgba(255, 255, 255, 0.2);\n    transform: translateY(-1px);\n  }\n\n  .action-btn.success {\n    background: linear-gradient(135deg, #4caf50, #43a047);\n    color: #ffffff;\n    box-shadow: 0 2px 6px rgba(76, 175, 80, 0.3);\n  }\n\n  .action-btn.success:hover:not(:disabled) {\n    background: linear-gradient(135deg, #43a047, #388e3c);\n    transform: translateY(-1px);\n    box-shadow: 0 4px 12px rgba(76, 175, 80, 0.4);\n  }\n\n  .action-btn.restore {\n    background: linear-gradient(135deg, #ff9800, #f57c00);\n    color: #ffffff;\n    box-shadow: 0 2px 6px rgba(255, 152, 0, 0.3);\n  }\n\n  .action-btn.restore:hover:not(:disabled) {\n    background: linear-gradient(135deg, #f57c00, #ef6c00);\n    transform: translateY(-1px);\n    box-shadow: 0 4px 12px rgba(255, 152, 0, 0.4);\n  }\n\n  .action-btn:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n    transform: none !important;\n    box-shadow: none !important;\n  }\n\n  /* === 日志显示样式 === */\n  .log-section {\n    margin-top: 16px;\n    padding-top: 16px;\n    border-top: 1px solid rgba(255, 255, 255, 0.1);\n  }\n\n  .log-display {\n    background: rgba(255, 255, 255, 0.05);\n    border-radius: 6px;\n    padding: 10px;\n  }\n\n  .latest-log {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    padding: 8px 10px;\n    border-radius: 4px;\n    font-size: 11px;\n    background: rgba(255, 255, 255, 0.05);\n    border-left: 3px solid transparent;\n  }\n\n  .latest-log.info {\n    border-left-color: #64b5f6;\n  }\n\n  .latest-log.warning {\n    border-left-color: #ff9800;\n  }\n\n  .latest-log.success {\n    border-left-color: #4caf50;\n  }\n\n  .latest-log.error {\n    border-left-color: #f44336;\n  }\n\n  .log-timestamp {\n    color: rgba(255, 255, 255, 0.6);\n    font-family: monospace;\n    font-size: 10px;\n    min-width: 65px;\n    flex-shrink: 0;\n  }\n\n  .log-message {\n    color: rgba(255, 255, 255, 0.9);\n    flex: 1;\n    line-height: 1.4;\n  }\n\n  .log-empty {\n    text-align: center;\n    color: rgba(255, 255, 255, 0.5);\n    font-size: 11px;\n    padding: 20px;\n    font-style: italic;\n  }\n  \n  /* === 响应式设计 === */\n  @media (max-width: 768px) {\n    .polar-alignment-widget {\n      width: 320px;\n      max-width: 95vw;\n    }\n    \n    .polar-alignment-widget.collapsed {\n      width: 280px;\n      max-width: 90vw;\n    }\n    \n    .polar-alignment-minimized {\n      width: 240px;\n    }\n    \n    .widget-header {\n      padding: 10px 12px;\n    }\n    \n    .header-title {\n      font-size: 12px;\n    }\n    \n    .widget-content.expanded {\n      padding: 12px;\n      max-height: 500px;\n    }\n    \n    .widget-content.collapsed {\n      padding: 8px;\n    }\n    \n    .action-btn {\n      padding: 10px 12px;\n      font-size: 12px;\n      min-height: 36px;\n    }\n    \n    .adjustment-value {\n      font-size: 16px;\n    }\n    \n    .progress-circle {\n      width: 50px;\n      height: 50px;\n    }\n    \n    .progress-text {\n      font-size: 10px;\n    }\n    \n    .node-label {\n      font-size: 8px;\n      margin-top: 2px;\n    }\n    \n    .node-circle {\n      width: 16px;\n      height: 16px;\n      font-size: 8px;\n    }\n    \n    .progress-header {\n      margin-bottom: 6px;\n    }\n    \n    .progress-title {\n      font-size: 11px;\n    }\n    \n    .calibration-loop-info {\n      font-size: 9px;\n      padding: 1px 4px;\n    }\n  }\n  \n  /* 移动端触摸优化 */\n  @media (hover: none) and (pointer: coarse) {\n    .action-btn {\n      min-height: 48px;\n      padding: 14px 18px;\n      font-size: 14px;\n    }\n    \n    .widget-header {\n      padding: 16px 20px;\n    }\n    \n    .minimized-header {\n      padding: 12px 16px;\n    }\n    \n    .header-btn {\n      width: 32px;\n      height: 32px;\n    }\n    \n    .minimized-btn {\n      width: 28px;\n      height: 28px;\n    }\n  }\n  \n  @media (max-width: 480px) {\n    .polar-alignment-widget {\n      width: 280px;\n      max-width: 98vw;\n    }\n    \n    .polar-alignment-widget.collapsed {\n      width: 240px;\n      max-width: 95vw;\n    }\n    \n    .polar-alignment-minimized {\n      width: 200px;\n    }\n    \n    .widget-header {\n      padding: 8px 10px;\n    }\n    \n    .header-title {\n      font-size: 11px;\n    }\n    \n    .header-btn {\n      width: 20px;\n      height: 20px;\n    }\n    \n    .widget-content.expanded {\n      padding: 10px;\n      max-height: 400px;\n    }\n    \n    .widget-content.collapsed {\n      padding: 6px;\n    }\n    \n    .action-btn {\n      padding: 8px 10px;\n      font-size: 11px;\n      min-height: 32px;\n    }\n    \n    .adjustment-value {\n      font-size: 14px;\n    }\n    \n    .progress-circle {\n      width: 40px;\n      height: 40px;\n    }\n    \n    .progress-text {\n      font-size: 9px;\n    }\n    \n    .minimized-header {\n      padding: 6px 8px;\n    }\n    \n    .minimized-title {\n      font-size: 10px;\n    }\n    \n    .minimized-btn {\n      width: 16px;\n      height: 16px;\n    }\n    \n    .node-label {\n      font-size: 7px;\n      margin-top: 1px;\n    }\n    \n    .node-circle {\n      width: 14px;\n      height: 14px;\n      font-size: 7px;\n    }\n    \n    .progress-nodes {\n      gap: 2px;\n    }\n    \n    .progress-header {\n      margin-bottom: 4px;\n    }\n    \n    .progress-title {\n      font-size: 10px;\n    }\n    \n    .calibration-loop-info {\n      font-size: 8px;\n      padding: 1px 3px;\n    }\n  }\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n  \n  /* 面板标题 */\n  .panel-header {\n    margin-bottom: 16px;\n    padding-bottom: 8px;\n    border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    pointer-events: auto;\n  }\n  \n  .panel-header h3 {\n    margin: 0;\n    font-size: 18px;\n    font-weight: 600;\n    color: #ffffff;\n  }\n  \n  .panel-indicator {\n    width: 8px;\n    height: 8px;\n    border-radius: 50%;\n    background: #64b5f6;\n  }\n  \n  .panel-indicator.live {\n    animation: pulse 2s infinite;\n  }\n  \n  .panel-indicator.control {\n    background: #ff9800;\n  }\n  \n  @keyframes pulse {\n    0% { opacity: 1; }\n    50% { opacity: 0.5; }\n    100% { opacity: 1; }\n  }\n  \n\n  \n  .card-header {\n    background: rgba(60, 60, 70, 0.8);\n    padding: 12px 16px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n    pointer-events: auto;\n  }\n  \n  .card-header span {\n    font-size: 14px;\n    font-weight: 500;\n    color: #ffffff;\n  }\n  \n  .card-icon {\n    color: #64b5f6;\n    font-size: 18px;\n  }\n  \n  .card-icon.warning {\n    color: #ff9800;\n  }\n  \n  .card-icon.success {\n    color: #4caf50;\n  }\n  \n\n\n  \n\n  \n    /* === 响应式设计 === */\n  @media (max-width: 1200px) {\n    .info-panel {\n      flex: 0 0 350px;\n    }\n  }\n\n  @media (max-width: 768px) {\n    .polar-alignment-interface {\n      font-size: 12px;\n    }\n\n    .main-layout {\n      flex-direction: column;\n      gap: 8px;\n      padding: 8px;\n    }\n\n    .display-panel {\n      flex: 1;\n      min-height: 300px;\n      padding: 12px;\n    }\n\n    .info-panel {\n      flex: 0 0 auto;\n      max-height: 50vh;\n      overflow-y: auto;\n      padding: 12px;\n    }\n\n    /* 状态相关样式已删除 */\n\n    .calibration-progress {\n      margin-bottom: 12px;\n    }\n\n    .progress-bar {\n      height: 6px;\n    }\n\n    .node-circle {\n      width: 16px;\n      height: 16px;\n      font-size: 8px;\n    }\n\n    .position-section {\n      margin-top: 12px;\n      padding-top: 12px;\n    }\n\n    .position-grid {\n      gap: 6px;\n      padding: 8px;\n    }\n\n    .position-cell {\n      padding: 6px;\n    }\n\n    .adjustment-section {\n      margin-top: 12px;\n      padding-top: 12px;\n    }\n\n    .adjustment-item {\n      padding: 8px;\n    }\n\n    .adjustment-icon {\n      width: 24px;\n      height: 24px;\n    }\n\n    .control-section {\n      margin-top: 12px;\n      padding-top: 12px;\n    }\n\n    .action-btn {\n      padding: 10px 12px;\n      font-size: 12px;\n      min-height: 36px;\n      flex: 1;\n    }\n\n    .log-section {\n      margin-top: 12px;\n      padding-top: 12px;\n    }\n\n    .log-display {\n      padding: 8px;\n    }\n    \n    .panel-header {\n      margin-bottom: 8px;\n      padding-bottom: 8px;\n    }\n    \n    .interface-title {\n      font-size: 14px;\n    }\n    \n    .connection-status {\n      font-size: 10px;\n    }\n    \n    .card-header {\n      padding: 8px 12px;\n    }\n    \n    .card-header span {\n      font-size: 12px;\n    }\n    \n    .card-content {\n      padding: 12px;\n    }\n    \n\n    \n    .node-circle {\n      width: 14px;\n      height: 14px;\n      font-size: 7px;\n    }\n    \n    .log-display {\n      padding: 6px;\n    }\n    \n    .latest-log {\n      font-size: 10px;\n    }\n    \n    .log-timestamp {\n      min-width: 50px;\n    }\n  }\n  \n    @media (max-width: 480px) {\n    .polar-alignment-interface {\n      font-size: 10px;\n    }\n\n    .main-layout {\n      flex-direction: column;\n      gap: 6px;\n      padding: 6px;\n    }\n\n    .display-panel {\n      flex: 1;\n      min-height: 250px;\n      padding: 8px;\n    }\n\n    .info-panel {\n      flex: 0 0 auto;\n      max-height: 45vh;\n      overflow-y: auto;\n      padding: 8px;\n    }\n\n    .card-header {\n      padding: 8px 12px;\n    }\n\n    .card-header span {\n      font-size: 11px;\n    }\n\n    .card-content {\n      padding: 12px;\n    }\n\n    /* 状态相关样式已删除 */\n\n    .calibration-progress {\n      margin-bottom: 8px;\n    }\n\n    .progress-bar {\n      height: 4px;\n    }\n\n    .node-circle {\n      width: 14px;\n      height: 14px;\n      font-size: 7px;\n    }\n\n    .position-section {\n      margin-top: 8px;\n      padding-top: 8px;\n    }\n\n    .position-grid {\n      gap: 4px;\n      padding: 6px;\n    }\n\n    .position-cell {\n      padding: 4px;\n    }\n\n    .cell-label {\n      font-size: 8px;\n    }\n\n    .cell-value {\n      font-size: 9px;\n    }\n\n    .adjustment-section {\n      margin-top: 8px;\n      padding-top: 8px;\n    }\n\n    .adjustment-item {\n      padding: 6px;\n    }\n\n    .adjustment-icon {\n      width: 20px;\n      height: 20px;\n    }\n\n    .adjustment-type {\n      font-size: 10px;\n    }\n\n    .adjustment-value {\n      font-size: 10px;\n    }\n\n    .adjustment-action {\n      font-size: 8px;\n    }\n\n    .control-section {\n      margin-top: 8px;\n      padding-top: 8px;\n    }\n\n    .action-btn {\n      padding: 8px 10px;\n      font-size: 10px;\n      min-height: 32px;\n      flex: 1;\n    }\n\n    .log-section {\n      margin-top: 8px;\n      padding-top: 8px;\n    }\n\n    .log-display {\n      padding: 6px;\n    }\n\n    .latest-log {\n      font-size: 9px;\n    }\n\n    .log-timestamp {\n      font-size: 8px;\n      min-width: 45px;\n    }\n    \n    .panel-header {\n      margin-bottom: 6px;\n      padding-bottom: 6px;\n    }\n    \n  }\n  </style>"],"sourceRoot":"src/components"}]}