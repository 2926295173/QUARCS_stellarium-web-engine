{"remainingRequest":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/thread-loader/dist/cjs.js!/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/babel-loader/lib/index.js!/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/src/components/Dial-Knob.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/src/components/Dial-Knob.vue","mtime":1753248436000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1707125360000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/thread-loader/dist/cjs.js","mtime":1707125360000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/babel-loader/lib/index.js","mtime":1707125360000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1707125360000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/vue-loader/lib/index.js","mtime":1707125450000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Dial-Knob.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"Dial-Knob-Rect\" :style=\"{ '--positionX': positionX + 'px', '--secondPositionX': secondPositionX + 'px', top: top + 'px', left: left + 'px', width: width + 'px', height: height + 'px' }\">\n    <div class=\"indicator\" @mousedown=\"startDrag\" @mouseup=\"stopDrag\" @touchstart=\"startDragMobile\" @touchmove=\"onDragMobile\" @touchend=\"stopDragMobile\"></div>\n    <div class=\"second-indicator\" @mousedown=\"startSecondDrag\" @mouseup=\"stopSecondDrag\" @touchstart=\"startSecondDragMobile\" @touchmove=\"onSecondDragMobile\" @touchend=\"stopSecondDragMobile\"></div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      top: 5, // 初始位置的垂直坐标\n      left: 5, // 初始位置的水平坐标\n      width: 190, // 初始宽度\n      height: 80, // 初始高度\n\n      DialWidth: 1,\n      \n      positionX: 0,\n      dragging: false,\n      startPositionX: 0,\n      \n      // 新滑块的数据\n      secondPositionX: 190,\n      secondDragging: false,\n      secondStartPositionX: 65535,\n    };\n  },\n  created() {\n    this.$bus.$on('toggleHistogramPanel', this.setMaxWidth);\n    this.$bus.$on('ChangeDialPosition', this.ChangeDialPosition);\n  },\n  mounted() {\n    window.addEventListener('resize', this.setMaxWidth);\n  },\n  beforeDestroy() {\n    window.removeEventListener('resize', this.setMaxWidth);\n  },\n  methods: {\n    setMaxWidth() {\n      const Width = window.innerWidth;\n      this.width = Math.min(Width - 350, 490);\n    },\n    startDrag(event) {\n      event.preventDefault(); // 阻止默认触摸事件\n      this.dragging = true;\n      this.startPositionX = event.clientX - this.positionX;\n      document.addEventListener(\"mousemove\", this.onDrag);\n      document.addEventListener(\"mouseup\", this.stopDrag);\n    },\n    onDrag(event) {\n      if (this.dragging) {\n        const clientX = event.touches ? event.touches[0].clientX : event.clientX;\n        const newPositionX = clientX - this.startPositionX;\n\n        // 确保滑块在组件范围内\n        this.positionX = Math.max(0, Math.min(newPositionX, this.secondPositionX));\n        this.positionX = Math.max(0, Math.min(newPositionX, this.width - this.DialWidth));\n\n        if (this.secondPositionX - this.positionX < this.DialWidth) {\n          this.secondPositionX = this.positionX + this.DialWidth;\n        }\n\n        // console.log(\"Width:\", this.width, \"PositionX:\", this.positionX, \"SecondPositionX:\", this.secondPositionX);\n      }\n    },\n    stopDrag() {\n      this.dragging = false;\n      document.removeEventListener(\"mousemove\", this.onDrag);\n      document.removeEventListener(\"mouseup\", this.stopDrag);\n      \n      const HistMin = this.mappedWidth(this.positionX);\n      const HistMax = this.mappedWidth(this.secondPositionX);\n      console.log(\"Hist Num:\", HistMin, HistMax, \"(16-bit range)\");\n      this.$bus.$emit('HandleHistogramNum', HistMin, HistMax);\n    },\n\n    startDragMobile(event) {\n      event.preventDefault();\n      this.dragging = true;\n      this.startPositionX = event.touches[0].clientX - this.positionX;\n      document.addEventListener(\"touchmove\", this.onDragMobile);\n      document.addEventListener(\"touchend\", this.stopDragMobile);\n    },\n    onDragMobile(event) {\n      if (this.dragging) {\n        const clientX = event.touches[0].clientX;\n        const newPositionX = clientX - this.startPositionX;\n        // 确保滑块在组件范围内\n        this.positionX = Math.max(0, Math.min(newPositionX, this.secondPositionX));\n        this.positionX = Math.max(0, Math.min(newPositionX, this.width - this.DialWidth));\n\n        if (this.secondPositionX - this.positionX < this.DialWidth) {\n          this.secondPositionX = this.positionX + this.DialWidth;\n        }\n\n        // console.log(\"Width:\", this.width, \"PositionX:\", this.positionX, \"SecondPositionX:\", this.secondPositionX);\n      }\n    },\n    stopDragMobile() {\n      this.dragging = false;\n      document.removeEventListener(\"touchmove\", this.onDragMobile);\n      document.removeEventListener(\"touchend\", this.stopDragMobile);\n\n      const HistMin = this.mappedWidth(this.positionX);\n      const HistMax = this.mappedWidth(this.secondPositionX);\n      console.log(\"Hist Num:\", HistMin, HistMax, \"(16-bit range)\");\n      this.$bus.$emit('HandleHistogramNum', HistMin, HistMax);\n    },\n    \n    // 新滑块的方法\n    startSecondDrag(event) {\n      event.preventDefault(); // 阻止默认触摸事件\n      this.secondDragging = true;\n      this.secondStartPositionX = event.clientX - this.secondPositionX;\n      document.addEventListener(\"mousemove\", this.onSecondDrag);\n      document.addEventListener(\"mouseup\", this.stopSecondDrag);\n    },\n    onSecondDrag(event) {\n      if (this.secondDragging) {\n        const clientX = event.touches ? event.touches[0].clientX : event.clientX;\n        const newSecondPositionX = clientX - this.secondStartPositionX;\n        \n        // 关键修复：更新正确的变量，使用一次赋值\n        this.secondPositionX = Math.max(this.positionX + this.DialWidth, \n                                  Math.min(newSecondPositionX, this.width));\n        \n        // 保持最小间距\n        if (this.secondPositionX - this.positionX < this.DialWidth) {\n          this.positionX = this.secondPositionX - this.DialWidth;\n        }\n      }\n    },\n    stopSecondDrag() {\n      this.secondDragging = false;\n      document.removeEventListener(\"mousemove\", this.onSecondDrag);\n      document.removeEventListener(\"mouseup\", this.stopSecondDrag);\n      \n      const HistMin = this.mappedWidth(this.positionX);\n      const HistMax = this.mappedWidth(this.secondPositionX);\n      console.log(\"Hist Num:\", HistMin, HistMax, \"(16-bit range)\");\n      this.$bus.$emit('HandleHistogramNum', HistMin, HistMax);\n    },\n\n    startSecondDragMobile(event) {\n      event.preventDefault();\n      this.secondDragging = true;\n      this.secondStartPositionX = event.touches[0].clientX - this.secondPositionX;\n      document.addEventListener(\"touchmove\", this.onSecondDragMobile);\n      document.addEventListener(\"touchend\", this.stopSecondDragMobile);\n    },\n    onSecondDragMobile(event) {\n      if (this.secondDragging) {\n        const clientX = event.touches[0].clientX;\n        const newSecondPositionX = clientX - this.secondStartPositionX;\n        // 确保滑块在组件范围内\n        this.secondPositionX = Math.max(this.positionX, Math.min(newSecondPositionX, this.width));\n        this.secondPositionX = Math.max(this.DialWidth, Math.min(newSecondPositionX, this.width));\n\n        if (this.secondPositionX - this.positionX < this.DialWidth) {\n          this.positionX = this.secondPositionX - this.DialWidth;\n        }\n\n        // console.log(\"Width:\", this.width, \"PositionX:\", this.positionX, \"SecondPositionX:\", this.secondPositionX);\n      }\n    },\n    stopSecondDragMobile() {\n      this.secondDragging = false;\n      document.removeEventListener(\"touchmove\", this.onSecondDragMobile);\n      document.removeEventListener(\"touchend\", this.stopSecondDragMobile);\n\n      const HistMin = this.mappedWidth(this.positionX);\n      const HistMax = this.mappedWidth(this.secondPositionX);\n      console.log(\"Hist Num:\", HistMin, HistMax, \"(16-bit range)\");\n      this.$bus.$emit('HandleHistogramNum', HistMin, HistMax);\n    },\n\n    ChangeDialPosition(min, max) {\n      this.positionX = Math.round((min / 65535) * this.width);\n      this.secondPositionX = Math.round((max / 65535) * this.width);\n    },\n    \n    mappedWidth(position) {\n      // 映射原始的 width 到 0-65535 的范围(16位)\n      return Math.round((position / this.width) * 65535);\n    },\n  },\n};\n</script>\n\n<style scoped>\n.Dial-Knob-Rect {\n  width: 200px;\n  height: 60px;\n\n  position: relative;\n  cursor: pointer;\n  user-select: none;\n  /* overflow: hidden; */\n  \n  background-color: transparent;\n  box-sizing: border-box; /* 设置box-sizing为border-box */\n}\n\n.indicator {\n  width: 10px;\n  height: 80px;\n  border-radius: 1px;\n  position: absolute;\n  top: 50%;\n  left: var(--positionX);\n  transform: translate(-50%, -50%);\n  \n  background-color: rgba(75, 155, 250, 0.5);\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  backdrop-filter: blur(5px);\n  box-sizing: border-box;\n}\n\n.second-indicator {\n  width: 10px;\n  height: 80px;\n  border-radius: 1px;\n  position: absolute;\n  top: 50%;\n  left: var(--secondPositionX);\n  transform: translate(-50%, -50%);\n  \n  background-color: rgba(255, 0, 0, 0.5);\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  backdrop-filter: blur(5px);\n  box-sizing: border-box;\n}\n\n.indicator:active:active {\n  width: 2px;\n  height: 80px;\n  border-radius: 1px;\n  position: absolute;\n  top: 50%;\n  left: var(--positionX);\n  transform: translate(-50%, -50%);\n  \n  background-color: rgba(75, 155, 250, 1);\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  backdrop-filter: blur(5px);\n  box-sizing: border-box;\n}\n\n\n.second-indicator:active {\n  width: 2px;\n  height: 80px;\n  border-radius: 1px;\n  position: absolute;\n  top: 50%;\n  left: var(--secondPositionX);\n  transform: translate(-50%, -50%);\n  \n  background-color: rgba(255, 0, 0, 1);\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  backdrop-filter: blur(5px);\n  box-sizing: border-box;\n}\n</style>\n\n"],"sourceRoot":"src/components"}]}
