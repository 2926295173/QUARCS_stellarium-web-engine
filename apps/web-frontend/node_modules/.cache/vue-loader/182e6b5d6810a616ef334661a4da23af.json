{"remainingRequest":"/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/src/components/location-mgr.vue?vue&type=script&lang=js&","dependencies":[{"path":"/app/src/components/location-mgr.vue","mtime":1748506566251},{"path":"/app/node_modules/babel-loader/lib/index.js","mtime":1707125360000},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":1707125360000},{"path":"/app/node_modules/vue-loader/lib/index.js","mtime":1707125450000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBzd2ggZnJvbSAnQC9hc3NldHMvc3dfaGVscGVycy5qcycKaW1wb3J0IHsgTE1hcCwgTFRpbGVMYXllciwgTE1hcmtlciwgTENpcmNsZSwgTFRvb2x0aXAsIExDb250cm9sWm9vbSB9IGZyb20gJ3Z1ZTItbGVhZmxldCcKaW1wb3J0IHsgTCB9IGZyb20gJ2xlYWZsZXQtY29udHJvbC1nZW9jb2Rlci9kaXN0L0NvbnRyb2wuR2VvY29kZXIuanMnCgpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gKCkgewogICAgcmV0dXJuIHsKICAgICAgbW9kZTogJ3BpY2snLAogICAgICBwaWNrTG9jYXRpb246IHVuZGVmaW5lZCwKICAgICAgc2VsZWN0ZWRLbm93bkxvY2F0aW9uOiB1bmRlZmluZWQsCiAgICAgIG1hcENlbnRlcjogWzQzLjYsIDEuNDMzM10sCiAgICAgIHVybDogJ2h0dHBzOi8ve3N9LnRpbGUub3NtLm9yZy97en0ve3h9L3t5fS5wbmcnCiAgICB9CiAgfSwKICBwcm9wczogWydzaG93TXlMb2NhdGlvbicsICdrbm93bkxvY2F0aW9ucycsICdzdGFydExvY2F0aW9uJywgJ3JlYWxMb2NhdGlvbiddLAogIGNvbXB1dGVkOiB7CiAgICBkb1Nob3dNeUxvY2F0aW9uOiBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiB0aGlzLnNob3dNeUxvY2F0aW9uID09PSB1bmRlZmluZWQgPyBmYWxzZSA6IHRoaXMuc2hvd015TG9jYXRpb24KICAgIH0sCiAgICBwaWNrTG9jYXRpb25Nb2RlOiBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiB0aGlzLm1vZGUgPT09ICdwaWNrJwogICAgfSwKICAgIGtub3duTG9jYXRpb25Nb2RlOiBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiB0aGlzLm1vZGUgPT09ICdrbm93bicKICAgIH0sCiAgICBsb2NhdGlvbkZvckRldGFpbDogZnVuY3Rpb24gKCkgewogICAgICBpZiAodGhpcy5waWNrTG9jYXRpb25Nb2RlICYmIHRoaXMucGlja0xvY2F0aW9uID09PSB1bmRlZmluZWQpIHsKICAgICAgICByZXR1cm4gdGhpcy5zdGFydExvY2F0aW9uCiAgICAgIH0KICAgICAgcmV0dXJuIHRoaXMucGlja0xvY2F0aW9uTW9kZSA/IHRoaXMucGlja0xvY2F0aW9uIDogdGhpcy5zZWxlY3RlZEtub3duTG9jYXRpb24KICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICBzdGFydExvY2F0aW9uOiBmdW5jdGlvbiAoKSB7CiAgICAgIHRoaXMuc2V0UGlja0xvY2F0aW9uKHRoaXMuc3RhcnRMb2NhdGlvbikKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uICgpIHsKICAgIGNvbnN0IHRoYXQgPSB0aGlzCiAgICB0aGlzLnNldFBpY2tMb2NhdGlvbih0aGlzLnN0YXJ0TG9jYXRpb24pCiAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgIGNvbnN0IG1hcCA9IHRoaXMuJHJlZnMubXlNYXAubWFwT2JqZWN0CiAgICAgIG1hcC5fb25SZXNpemUoKQoKICAgICAgdmFyIGdlb2NvZGVyID0gbmV3IEwuQ29udHJvbC5HZW9jb2Rlcih7CiAgICAgICAgZGVmYXVsdE1hcmtHZW9jb2RlOiBmYWxzZSwKICAgICAgICBwb3NpdGlvbjogJ3RvcGxlZnQnLAogICAgICAgIGNvbGxhcHNlZDogZmFsc2UKICAgICAgfSkub24oJ21hcmtnZW9jb2RlJywgZnVuY3Rpb24gKGUpIHsKICAgICAgICB2YXIgcG9zID0geyBsYXQ6IGUuZ2VvY29kZS5jZW50ZXIubGF0LCBsbmc6IGUuZ2VvY29kZS5jZW50ZXIubG5nIH0KICAgICAgICB0aGF0Lm1hcENlbnRlciA9IFtwb3MubGF0LCBwb3MubG5nXQogICAgICAgIHBvcy5hY2N1cmFjeSA9IDEwMAogICAgICAgIGNvbnN0IGxsID0gdGhhdC4kdCgnTGF0IHswfcKwIExvbiB7MX3CsCcsIFtwb3MubGF0LnRvRml4ZWQoMyksIHBvcy5sbmcudG9GaXhlZCgzKV0pCiAgICAgICAgdmFyIGxvYyA9IHsKICAgICAgICAgIHNob3J0X25hbWU6IHBvcy5hY2N1cmFjeSA+IDUwMCA/IHRoYXQuJHQoJ05lYXIgezB9JywgW2xsXSkgOiBsbCwKICAgICAgICAgIGNvdW50cnk6IHRoYXQuJHQoJ1Vua25vd24nKSwKICAgICAgICAgIGxuZzogcG9zLmxuZywKICAgICAgICAgIGxhdDogcG9zLmxhdCwKICAgICAgICAgIGFsdDogcG9zLmFsdCA/IHBvcy5hbHQgOiAwLAogICAgICAgICAgYWNjdXJhY3k6IHBvcy5hY2N1cmFjeSwKICAgICAgICAgIHN0cmVldF9hZGRyZXNzOiAnJwogICAgICAgIH0KICAgICAgICBjb25zdCByZXMgPSBlLmdlb2NvZGUucHJvcGVydGllcwogICAgICAgIGNvbnN0IGNpdHkgPSByZXMuYWRkcmVzcy5jaXR5ID8gcmVzLmFkZHJlc3MuY2l0eSA6IChyZXMuYWRkcmVzcy52aWxsYWdlID8gcmVzLmFkZHJlc3MudmlsbGFnZSA6IHJlcy5uYW1lKQogICAgICAgIGxvYy5zaG9ydF9uYW1lID0gcG9zLmFjY3VyYWN5ID4gNTAwID8gdGhhdC4kdCgnTmVhciB7MH0nLCBbY2l0eV0pIDogY2l0eQogICAgICAgIGxvYy5jb3VudHJ5ID0gcmVzLmFkZHJlc3MuY291bnRyeQogICAgICAgIGlmIChwb3MuYWNjdXJhY3kgPCA1MCkgewogICAgICAgICAgbG9jLnN0cmVldF9hZGRyZXNzID0gcmVzLmFkZHJlc3Mucm9hZCA/IHJlcy5hZGRyZXNzLnJvYWQgOiByZXMuZGlzcGxheV9uYW1lCiAgICAgICAgfQogICAgICAgIHRoYXQucGlja0xvY2F0aW9uID0gbG9jCiAgICAgICAgdGhhdC5zZXRQaWNrTG9jYXRpb25Nb2RlKCkKICAgICAgICBnZW9jb2Rlci5zZXRRdWVyeSgnJykKICAgICAgfSkKICAgICAgZ2VvY29kZXIuYWRkVG8obWFwKQogICAgfSkKICB9LAogIG1ldGhvZHM6IHsKICAgIHNlbGVjdEtub3duTG9jYXRpb246IGZ1bmN0aW9uIChsb2MpIHsKICAgICAgdGhpcy5zZWxlY3RlZEtub3duTG9jYXRpb24gPSBsb2MKICAgICAgdGhpcy5zZXRLbm93bkxvY2F0aW9uTW9kZSgpCiAgICAgIHRoaXMubWFwQ2VudGVyID0gW2xvYy5sYXQsIGxvYy5sbmddCiAgICB9LAogICAgdXNlTG9jYXRpb246IGZ1bmN0aW9uICgpIHsKICAgICAgdGhpcy4kZW1pdCgnbG9jYXRpb25TZWxlY3RlZCcsIHRoaXMubG9jYXRpb25Gb3JEZXRhaWwpCiAgICAgIHRoaXMuJGVtaXQoJ3Jlc2V0TG9jYXRpb24nLCB0aGlzLmxvY2F0aW9uRm9yRGV0YWlsLmxhdCwgdGhpcy5sb2NhdGlvbkZvckRldGFpbC5sbmcpCiAgICB9LAogICAgc2V0UGlja0xvY2F0aW9uTW9kZTogZnVuY3Rpb24gKCkgewogICAgICB0aGlzLm1vZGUgPSAncGljaycKICAgIH0sCiAgICBzZXRLbm93bkxvY2F0aW9uTW9kZTogZnVuY3Rpb24gKCkgewogICAgICB0aGlzLm1vZGUgPSAna25vd24nCiAgICB9LAogICAgc2V0UGlja0xvY2F0aW9uOiBmdW5jdGlvbiAobG9jKSB7CiAgICAgIGlmIChsb2MuYWNjdXJhY3kgPCAxMDApIHsKICAgICAgICBmb3IgKGNvbnN0IGwgb2YgdGhpcy5rbm93bkxvY2F0aW9ucykgewogICAgICAgICAgY29uc3QgZCA9IHN3aC5nZXREaXN0YW5jZUZyb21MYXRMb25Jbk0obC5sYXQsIGwubG5nLCBsb2MubGF0LCBsb2MubG5nKQogICAgICAgICAgaWYgKGQgPCAxMDApIHsKICAgICAgICAgICAgdGhpcy5zZWxlY3RLbm93bkxvY2F0aW9uKGwpCiAgICAgICAgICAgIHJldHVybgogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgICB2YXIgcG9zID0geyBsYXQ6IGxvYy5sYXQsIGxuZzogbG9jLmxuZyB9CiAgICAgIHRoaXMubWFwQ2VudGVyID0gW3Bvcy5sYXQsIHBvcy5sbmddCiAgICAgIHRoaXMucGlja0xvY2F0aW9uID0gbG9jCiAgICAgIHRoaXMuc2V0UGlja0xvY2F0aW9uTW9kZSgpCiAgICB9LAogICAgLy8gQ2FsbGVkIHdoZW4gdGhlIHVzZXIgY2xpY2tzIG9uIHRoZSBzbWFsbCBjcm9zcyBidXR0b24KICAgIGNlbnRlck9uUmVhbFBvc2l0aW9uOiBmdW5jdGlvbiAoKSB7CiAgICAgIHRoaXMuc2V0UGlja0xvY2F0aW9uKHRoaXMucmVhbExvY2F0aW9uKQogICAgfSwKICAgIGRyYWdFbmQ6IGZ1bmN0aW9uIChldmVudCkgewogICAgICB2YXIgdGhhdCA9IHRoaXMKICAgICAgdmFyIHBvcyA9IHsgbGF0OiBldmVudC50YXJnZXQuX2xhdGxuZy5sYXQsIGxuZzogZXZlbnQudGFyZ2V0Ll9sYXRsbmcubG5nLCBhY2N1cmFjeTogMCB9CiAgICAgIGNvbnNvbGUubG9nKCdkcmFnRW5kIHBvczogJyArIHBvcy5sYXQgKyAnLCcgK3Bvcy5sbmcpCiAgICAgIHN3aC5nZW9Db2RlUG9zaXRpb24ocG9zLCB0aGF0KS50aGVuKChwKSA9PiB7IHRoYXQucGlja0xvY2F0aW9uID0gcDsgdGhhdC5zZXRQaWNrTG9jYXRpb25Nb2RlKCkgfSkKICAgICAgdGhpcy4kZW1pdCgncmVzZXRMb2NhdGlvbicsIHBvcy5sYXQsIHBvcy5sbmcpCiAgICB9CiAgfSwKICBjb21wb25lbnRzOiB7IExNYXAsIExUaWxlTGF5ZXIsIExNYXJrZXIsIExDaXJjbGUsIExUb29sdGlwLCBMQ29udHJvbFpvb20gfQp9Cg=="},{"version":3,"sources":["location-mgr.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4EA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"location-mgr.vue","sourceRoot":"src/components","sourcesContent":["// Stellarium Web - Copyright (c) 2022 - Stellarium Labs SRL\n//\n// This program is licensed under the terms of the GNU AGPL v3, or\n// alternatively under a commercial licence.\n//\n// The terms of the AGPL v3 license can be found in the main directory of this\n// repository.\n\n<template>\n  <div>\n    <v-row justify=\"space-around\">\n      <v-col cols=\"4\" v-if=\"doShowMyLocation\">\n        <v-list two-line subheader>\n          <v-subheader>{{ $t('My Locations') }}</v-subheader>\n          <v-list-item href=\"javascript:;\" v-for=\"item in knownLocations\" v-bind:key=\"item.id\" @click.native.stop=\"selectKnownLocation(item)\" :style=\"(item && knownLocationMode && selectedKnownLocation && item.id === selectedKnownLocation.id) ? 'background-color: #455a64' : ''\">\n            <v-list-item-icon>\n              <v-icon>mdi-map-marker</v-icon>\n            </v-list-item-icon>\n            <v-list-item-content>\n              <v-list-item-title>{{ item.short_name }}</v-list-item-title>\n              <v-list-item-subtitle>{{ item.country }}</v-list-item-subtitle>\n            </v-list-item-content>\n          </v-list-item>\n        </v-list>\n      </v-col>\n      <v-col cols=\"doShowMyLocation ? 8 : 12\" >\n        <v-card class=\"blue-grey darken-2 white--text\">\n          <v-card-title primary-title>\n            <v-container fluid>\n              <v-row>\n                <v-col>\n                  <div>\n                    <div class=\"text-h5\" style=\"overflow: hidden; white-space: nowrap; text-overflow: ellipsis;\">{{ locationForDetail ? locationForDetail.short_name + ', ' + locationForDetail.country :  '-' }}</div>\n                    <v-btn @click.native.stop=\"useLocation()\" style=\"position: absolute; right: 20px\"><v-icon>mdi-chevron-right</v-icon> {{ $t('Use this location') }}</v-btn>\n                    <div class=\"grey--text text-subtitle-2\" v-if=\"locationForDetail.street_address\">{{ locationForDetail ? (locationForDetail.street_address ? locationForDetail.street_address : $t('Unknown Address')) : '-' }}</div>\n                    <div class=\"grey--text text-subtitle-2\">{{ locationForDetail ? locationForDetail.lat.toFixed(5) + ' ' + locationForDetail.lng.toFixed(5) : '-' }}</div>\n                  </div>\n                </v-col>\n              </v-row>\n            </v-container>\n          </v-card-title>\n          <div style=\"height: 375px\">\n              <!-- <v-btn light fab class=\"mx-0 pa-0\" @click.native.stop=\"centerOnRealPosition()\" style=\"position: absolute; z-index: 10000; bottom: 16px; right: 12px;\">\n                <v-icon>mdi-crosshairs-gps</v-icon>\n              </v-btn> -->\n            <l-map class=\"black--text\" ref=\"myMap\" :center=\"mapCenter\" :zoom=\"10\" style=\"width: 100%; height: 375px;\" :options=\"{zoomControl: false}\">\n              <l-control-zoom position=\"topright\"></l-control-zoom>\n              <l-tile-layer :url=\"url\" attribution='&copy; <a target=\"_blank\" rel=\"noopener\" href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'></l-tile-layer>\n              <l-marker :key=\"loc.id\"\n                  v-for=\"loc in knownLocations\"\n                  :lat-lng=\"[ loc.lat, loc.lng ]\"\n                  :clickable=\"true\"\n                  :opacity=\"(!pickLocationMode && selectedKnownLocation && selectedKnownLocation === loc ? 1.0 : 0.25)\"\n                  @click=\"selectKnownLocation(loc)\"\n                  :draggable=\"!pickLocationMode && selectedKnownLocation && selectedKnownLocation === loc\" @dragend=\"dragEnd\"\n                ></l-marker>\n              <l-circle v-if=\"startLocation\"\n                :lat-lng=\"[ startLocation.lat, startLocation.lng ]\"\n                :radius=\"startLocation.accuracy\"\n                :options=\"{\n                  strokeColor: '#0000FF',\n                  strokeOpacity: 0.5,\n                  strokeWeight: 1,\n                  fillColor: '#0000FF',\n                  fillOpacity: 0.08}\"></l-circle>\n              <l-marker v-if=\"pickLocationMode && pickLocation\" :lat-lng=\"[ pickLocation.lat, pickLocation.lng ]\"\n                :draggable=\"true\" @dragend=\"dragEnd\"><l-tooltip><div class=\"black--text\">Drag to adjust</div></l-tooltip></l-marker>\n            </l-map>\n          </div>\n        </v-card>\n      </v-col>\n    </v-row>\n  </div>\n</template>\n\n<script>\nimport swh from '@/assets/sw_helpers.js'\nimport { LMap, LTileLayer, LMarker, LCircle, LTooltip, LControlZoom } from 'vue2-leaflet'\nimport { L } from 'leaflet-control-geocoder/dist/Control.Geocoder.js'\n\nexport default {\n  data: function () {\n    return {\n      mode: 'pick',\n      pickLocation: undefined,\n      selectedKnownLocation: undefined,\n      mapCenter: [43.6, 1.4333],\n      url: 'https://{s}.tile.osm.org/{z}/{x}/{y}.png'\n    }\n  },\n  props: ['showMyLocation', 'knownLocations', 'startLocation', 'realLocation'],\n  computed: {\n    doShowMyLocation: function () {\n      return this.showMyLocation === undefined ? false : this.showMyLocation\n    },\n    pickLocationMode: function () {\n      return this.mode === 'pick'\n    },\n    knownLocationMode: function () {\n      return this.mode === 'known'\n    },\n    locationForDetail: function () {\n      if (this.pickLocationMode && this.pickLocation === undefined) {\n        return this.startLocation\n      }\n      return this.pickLocationMode ? this.pickLocation : this.selectedKnownLocation\n    }\n  },\n  watch: {\n    startLocation: function () {\n      this.setPickLocation(this.startLocation)\n    }\n  },\n  mounted: function () {\n    const that = this\n    this.setPickLocation(this.startLocation)\n    this.$nextTick(() => {\n      const map = this.$refs.myMap.mapObject\n      map._onResize()\n\n      var geocoder = new L.Control.Geocoder({\n        defaultMarkGeocode: false,\n        position: 'topleft',\n        collapsed: false\n      }).on('markgeocode', function (e) {\n        var pos = { lat: e.geocode.center.lat, lng: e.geocode.center.lng }\n        that.mapCenter = [pos.lat, pos.lng]\n        pos.accuracy = 100\n        const ll = that.$t('Lat {0}° Lon {1}°', [pos.lat.toFixed(3), pos.lng.toFixed(3)])\n        var loc = {\n          short_name: pos.accuracy > 500 ? that.$t('Near {0}', [ll]) : ll,\n          country: that.$t('Unknown'),\n          lng: pos.lng,\n          lat: pos.lat,\n          alt: pos.alt ? pos.alt : 0,\n          accuracy: pos.accuracy,\n          street_address: ''\n        }\n        const res = e.geocode.properties\n        const city = res.address.city ? res.address.city : (res.address.village ? res.address.village : res.name)\n        loc.short_name = pos.accuracy > 500 ? that.$t('Near {0}', [city]) : city\n        loc.country = res.address.country\n        if (pos.accuracy < 50) {\n          loc.street_address = res.address.road ? res.address.road : res.display_name\n        }\n        that.pickLocation = loc\n        that.setPickLocationMode()\n        geocoder.setQuery('')\n      })\n      geocoder.addTo(map)\n    })\n  },\n  methods: {\n    selectKnownLocation: function (loc) {\n      this.selectedKnownLocation = loc\n      this.setKnownLocationMode()\n      this.mapCenter = [loc.lat, loc.lng]\n    },\n    useLocation: function () {\n      this.$emit('locationSelected', this.locationForDetail)\n      this.$emit('resetLocation', this.locationForDetail.lat, this.locationForDetail.lng)\n    },\n    setPickLocationMode: function () {\n      this.mode = 'pick'\n    },\n    setKnownLocationMode: function () {\n      this.mode = 'known'\n    },\n    setPickLocation: function (loc) {\n      if (loc.accuracy < 100) {\n        for (const l of this.knownLocations) {\n          const d = swh.getDistanceFromLatLonInM(l.lat, l.lng, loc.lat, loc.lng)\n          if (d < 100) {\n            this.selectKnownLocation(l)\n            return\n          }\n        }\n      }\n      var pos = { lat: loc.lat, lng: loc.lng }\n      this.mapCenter = [pos.lat, pos.lng]\n      this.pickLocation = loc\n      this.setPickLocationMode()\n    },\n    // Called when the user clicks on the small cross button\n    centerOnRealPosition: function () {\n      this.setPickLocation(this.realLocation)\n    },\n    dragEnd: function (event) {\n      var that = this\n      var pos = { lat: event.target._latlng.lat, lng: event.target._latlng.lng, accuracy: 0 }\n      console.log('dragEnd pos: ' + pos.lat + ',' +pos.lng)\n      swh.geoCodePosition(pos, that).then((p) => { that.pickLocation = p; that.setPickLocationMode() })\n      this.$emit('resetLocation', pos.lat, pos.lng)\n    }\n  },\n  components: { LMap, LTileLayer, LMarker, LCircle, LTooltip, LControlZoom }\n}\n</script>\n\n<style>\n.leaflet-control-geocoder-form input {\n  caret-color:#000 !important;\n  color: #000 !important;\n}\n</style>\n"]}]}