{"remainingRequest":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/src/components/UpdateProgressDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/src/components/UpdateProgressDialog.vue","mtime":1751952464462},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1707125360000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/thread-loader/dist/cjs.js","mtime":1707125360000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/babel-loader/lib/index.js","mtime":1707125360000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1707125360000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/vue-loader/lib/index.js","mtime":1707125450000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnVXBkYXRlUHJvZ3Jlc3NEaWFsb2cnLAogIHByb3BzOiB7CiAgICB2aXNpYmxlOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9CiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcHJvZ3Jlc3M6IDAsCiAgICAgIGN1cnJlbnRUYXNrOiB0aGlzLiR0KCd1cGRhdGUucHJlcGFyaW5nJyksCiAgICAgIGxvZ3M6IFtdLAogICAgICBsb2dFeHBhbmRlZDogZmFsc2UsCiAgICAgIHVwZGF0ZUNvbXBsZXRlOiBmYWxzZSwKICAgICAgdXBkYXRlRmFpbGVkOiBmYWxzZSwKICAgICAgZXJyb3JNZXNzYWdlOiAnJwogICAgfTsKICB9LAogIHdhdGNoOiB7CiAgY3VycmVudERyaXZlclR5cGUoKSB7CiAgICAvLyDlvZPor63oqIDmlLnlj5jml7bmm7TmlrDlvZPliY3ku7vliqHmlofmnKwKICAgIGlmICh0aGlzLnByb2dyZXNzID09PSAwKSB7CiAgICAgIHRoaXMuY3VycmVudFRhc2sgPSB0aGlzLiR0KCd1cGRhdGUucHJlcGFyaW5nJyk7CiAgICB9CiAgfQp9LAogIG1vdW50ZWQoKSB7CiAgICB0aGlzLiRidXMuJG9uKCd1cGRhdGVfcHJvZ3Jlc3MnLCB0aGlzLmhhbmRsZVByb2dyZXNzTWVzc2FnZSk7CiAgICB0aGlzLiRidXMuJG9uKCd1cGRhdGVfZXJyb3InLCB0aGlzLmhhbmRsZUVycm9yTWVzc2FnZSk7CiAgICB0aGlzLiRidXMuJG9uKCd1cGRhdGVfc3VjY2VzcycsIHRoaXMuaGFuZGxlU3VjY2Vzc01lc3NhZ2UpOwogICAgCiAgICAvLyDpmLvmraLpobXpnaLmu5rliqgKICAgIGlmICh0aGlzLnZpc2libGUpIHsKICAgICAgZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdyA9ICdoaWRkZW4nOwogICAgfQogIH0sCiAgYmVmb3JlRGVzdHJveSgpIHsKICAgIC8vIOaBouWkjemhtemdoua7muWKqAogICAgZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdyA9ICcnOwogIH0sCiAgICAgICAgbWV0aG9kczogewogICAgICBoYW5kbGVPdmVybGF5Q2xpY2soKSB7CiAgICAgICAgLy8g54K55Ye76IOM5pmv5pe25LiN5YGa5Lu75L2V5pON5L2c77yM6Ziy5q2i6K+v5YWz6ZetCiAgICAgICAgLy8g5aaC5p6c6ZyA6KaB54K55Ye76IOM5pmv5YWz6Zet77yM5Y+v5Lul5Zyo6L+Z6YeM5re75Yqg6YC76L6RCiAgICAgIH0sCiAgICAgIGhhbmRsZVByb2dyZXNzTWVzc2FnZShtZXNzYWdlKSB7CiAgICAgIGNvbnN0IHBhcnRzID0gbWVzc2FnZS5zcGxpdCgnOicpOwogICAgICBpZiAocGFydHMubGVuZ3RoID49IDMpIHsKICAgICAgICAgIGNvbnN0IHByb2dyZXNzVmFsdWUgPSBwYXJzZUludChwYXJ0c1sxXSwgMTApOwogICAgICAgICAgY29uc3QgcHJvZ3Jlc3NNZXNzYWdlID0gcGFydHNbMl07CiAgICAgICAgICAKICAgICAgICAgIHRoaXMucHJvZ3Jlc3MgPSBwcm9ncmVzc1ZhbHVlOwogICAgICAgICAgdGhpcy5jdXJyZW50VGFzayA9IHByb2dyZXNzTWVzc2FnZTsKICAgICAgICAgIHRoaXMuYWRkTG9nRW50cnkocHJvZ3Jlc3NNZXNzYWdlLCAncHJvZ3Jlc3MnKTsKICAgICAgfQogICAgfSwKICAgIGhhbmRsZUVycm9yTWVzc2FnZShtZXNzYWdlKSB7CiAgICAgIGNvbnN0IHBhcnRzID0gbWVzc2FnZS5zcGxpdCgnOicpOwogICAgICBpZiAocGFydHMubGVuZ3RoID49IDMpIHsKICAgICAgICAgIGNvbnN0IGVycm9yTWVzc2FnZSA9IHBhcnRzWzJdOwogICAgICAgICAgCiAgICAgICAgICB0aGlzLnVwZGF0ZUZhaWxlZCA9IHRydWU7CiAgICAgICAgICB0aGlzLmVycm9yTWVzc2FnZSA9IGVycm9yTWVzc2FnZTsKICAgICAgICAgIHRoaXMuYWRkTG9nRW50cnkoYCR7dGhpcy4kdCgndXBkYXRlLmVycm9yJyl9OiAke2Vycm9yTWVzc2FnZX1gLCAnZXJyb3InKTsKICAgICAgfQogICAgfSwKICAgIGhhbmRsZVN1Y2Nlc3NNZXNzYWdlKG1lc3NhZ2UpIHsKICAgICAgY29uc3QgcGFydHMgPSBtZXNzYWdlLnNwbGl0KCc6Jyk7CiAgICAgIGlmIChwYXJ0cy5sZW5ndGggPj0gMykgewogICAgICAgICAgY29uc3Qgc3VjY2Vzc01lc3NhZ2UgPSBwYXJ0c1syXTsKICAgICAgICAgIAogICAgICAgICAgdGhpcy5wcm9ncmVzcyA9IDEwMDsKICAgICAgICAgIHRoaXMudXBkYXRlQ29tcGxldGUgPSB0cnVlOwogICAgICAgICAgdGhpcy5jdXJyZW50VGFzayA9IHN1Y2Nlc3NNZXNzYWdlOwogICAgICAgICAgdGhpcy5hZGRMb2dFbnRyeShgJHt0aGlzLiR0KCd1cGRhdGUuY29tcGxldGVkJyl9OiAke3N1Y2Nlc3NNZXNzYWdlfWAsICdzdWNjZXNzJyk7CiAgICAgIH0KICAgIH0sCiAgICBhZGRMb2dFbnRyeShtZXNzYWdlLCB0eXBlKSB7CiAgICAgIGNvbnN0IG5vdyA9IG5ldyBEYXRlKCk7CiAgICAgIGNvbnN0IHRpbWVTdHJpbmcgPSBub3cudG9Mb2NhbGVUaW1lU3RyaW5nKCk7CiAgICAgIAogICAgICB0aGlzLmxvZ3MucHVzaCh7CiAgICAgICAgICB0aW1lOiB0aW1lU3RyaW5nLAogICAgICAgICAgbWVzc2FnZTogbWVzc2FnZSwKICAgICAgICAgIHR5cGU6IHR5cGUKICAgICAgfSk7CiAgICAgIAogICAgICAvLyDlpoLmnpzml6Xlv5fmlbDph4/lpKrlpJrvvIznp7vpmaTmnIDml6nnmoTmnaHnm64KICAgICAgaWYgKHRoaXMubG9ncy5sZW5ndGggPiAxMDApIHsKICAgICAgICAgIHRoaXMubG9ncy5zaGlmdCgpOwogICAgICB9CiAgICAgIAogICAgICAvLyDoh6rliqjmu5rliqjliLDmnIDmlrDnmoTml6Xlv5cKICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gewogICAgICAgICAgY29uc3QgbG9nU2Nyb2xsID0gdGhpcy4kZWwucXVlcnlTZWxlY3RvcignLmxvZy1zY3JvbGwnKTsKICAgICAgICAgIGlmIChsb2dTY3JvbGwpIHsKICAgICAgICAgIGxvZ1Njcm9sbC5zY3JvbGxUb3AgPSBsb2dTY3JvbGwuc2Nyb2xsSGVpZ2h0OwogICAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICB0b2dnbGVMb2dFeHBhbmQoKSB7CiAgICAgIHRoaXMubG9nRXhwYW5kZWQgPSAhdGhpcy5sb2dFeHBhbmRlZDsKICAgIH0sCiAgICBjbG9zZURpYWxvZygpIHsKICAgICAgLy8g5oGi5aSN6aG16Z2i5rua5YqoCiAgICAgIGRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3cgPSAnJzsKICAgICAgdGhpcy4kYnVzLiRlbWl0KCdjbG9zZVVwZGF0ZURpYWxvZycpOwogICAgfSwKICAgIHJldHJ5VXBkYXRlKCkgewogICAgICB0aGlzLnVwZGF0ZUZhaWxlZCA9IGZhbHNlOwogICAgICB0aGlzLnVwZGF0ZUNvbXBsZXRlID0gZmFsc2U7CiAgICAgIHRoaXMucHJvZ3Jlc3MgPSAwOwogICAgICB0aGlzLmN1cnJlbnRUYXNrID0gdGhpcy4kdCgndXBkYXRlLnByZXBhcmluZycpOwogICAgICB0aGlzLmxvZ3MgPSBbXTsKICAgICAgLy8gdGhpcy4kZW1pdCgncmV0cnknKTsKICAgICAgdGhpcy4kYnVzLiRlbWl0KCdyZVJ1blVwZGF0ZScpOwogICAgICB9CiAgfQp9Owo="},{"version":3,"sources":["UpdateProgressDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"UpdateProgressDialog.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"update-overlay\" v-if=\"visible\" :class=\"{ 'update-complete': updateComplete }\" @click=\"handleOverlayClick\">\n      <div class=\"update-dialog\" @click.stop>\n        <div class=\"update-header\">\n          <h2 v-if=\"!updateComplete && !updateFailed\" class=\"warning-text\">{{ $t('update.warning') }}</h2>\n          <h2 v-else-if=\"updateComplete\" class=\"success-text\">{{ $t('update.complete') }}</h2>\n          <h2 v-else class=\"error-text\">{{ $t('update.failed') }}</h2>\n        </div>\n  \n        <div class=\"progress-container\">\n          <div class=\"progress-bar\">\n            <div class=\"progress-fill\" :style=\"{ width: `${progress}%` }\" \n                 :class=\"{ 'success': updateComplete, 'error': updateFailed }\"></div>\n          </div>\n          <div class=\"progress-text\">{{ progress }}%</div>\n        </div>\n  \n        <div class=\"current-task\">\n          <span>{{ $t('update.currentTask') }}：</span>{{ currentTask }}\n        </div>\n  \n        <div class=\"log-container\">\n          <div class=\"log-header\">\n            <span>{{ $t('update.updateLog') }}</span>\n            <button class=\"toggle-log\" @click=\"toggleLogExpand\">\n              {{ logExpanded ? $t('update.collapse') : $t('update.expand') }}\n            </button>\n          </div>\n          <div class=\"log-content\" :class=\"{ 'expanded': logExpanded }\">\n            <div class=\"log-scroll\">\n              <div v-for=\"(log, index) in logs\" :key=\"index\" \n                   :class=\"{ 'error-log': log.type === 'error', \n                            'success-log': log.type === 'success', \n                            'progress-log': log.type === 'progress' }\">\n                <span class=\"log-time\">{{ log.time }}</span>\n                <span class=\"log-message\">{{ log.message }}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n  \n        <div class=\"dialog-footer\" v-if=\"updateComplete || updateFailed\">\n          <button class=\"close-button\" @click=\"closeDialog\">{{ $t('update.close') }}</button>\n          <button class=\"retry-button\" v-if=\"updateFailed\" @click=\"retryUpdate\">{{ $t('update.retry') }}</button>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    name: 'UpdateProgressDialog',\n    props: {\n      visible: {\n        type: Boolean,\n        default: false\n      }\n    },\n    data() {\n      return {\n        progress: 0,\n        currentTask: this.$t('update.preparing'),\n        logs: [],\n        logExpanded: false,\n        updateComplete: false,\n        updateFailed: false,\n        errorMessage: ''\n      };\n    },\n    watch: {\n    currentDriverType() {\n      // 当语言改变时更新当前任务文本\n      if (this.progress === 0) {\n        this.currentTask = this.$t('update.preparing');\n      }\n    }\n  },\n    mounted() {\n      this.$bus.$on('update_progress', this.handleProgressMessage);\n      this.$bus.$on('update_error', this.handleErrorMessage);\n      this.$bus.$on('update_success', this.handleSuccessMessage);\n      \n      // 阻止页面滚动\n      if (this.visible) {\n        document.body.style.overflow = 'hidden';\n      }\n    },\n    beforeDestroy() {\n      // 恢复页面滚动\n      document.body.style.overflow = '';\n    },\n          methods: {\n        handleOverlayClick() {\n          // 点击背景时不做任何操作，防止误关闭\n          // 如果需要点击背景关闭，可以在这里添加逻辑\n        },\n        handleProgressMessage(message) {\n        const parts = message.split(':');\n        if (parts.length >= 3) {\n            const progressValue = parseInt(parts[1], 10);\n            const progressMessage = parts[2];\n            \n            this.progress = progressValue;\n            this.currentTask = progressMessage;\n            this.addLogEntry(progressMessage, 'progress');\n        }\n      },\n      handleErrorMessage(message) {\n        const parts = message.split(':');\n        if (parts.length >= 3) {\n            const errorMessage = parts[2];\n            \n            this.updateFailed = true;\n            this.errorMessage = errorMessage;\n            this.addLogEntry(`${this.$t('update.error')}: ${errorMessage}`, 'error');\n        }\n      },\n      handleSuccessMessage(message) {\n        const parts = message.split(':');\n        if (parts.length >= 3) {\n            const successMessage = parts[2];\n            \n            this.progress = 100;\n            this.updateComplete = true;\n            this.currentTask = successMessage;\n            this.addLogEntry(`${this.$t('update.completed')}: ${successMessage}`, 'success');\n        }\n      },\n      addLogEntry(message, type) {\n        const now = new Date();\n        const timeString = now.toLocaleTimeString();\n        \n        this.logs.push({\n            time: timeString,\n            message: message,\n            type: type\n        });\n        \n        // 如果日志数量太多，移除最早的条目\n        if (this.logs.length > 100) {\n            this.logs.shift();\n        }\n        \n        // 自动滚动到最新的日志\n        this.$nextTick(() => {\n            const logScroll = this.$el.querySelector('.log-scroll');\n            if (logScroll) {\n            logScroll.scrollTop = logScroll.scrollHeight;\n            }\n        });\n      },\n      toggleLogExpand() {\n        this.logExpanded = !this.logExpanded;\n      },\n      closeDialog() {\n        // 恢复页面滚动\n        document.body.style.overflow = '';\n        this.$bus.$emit('closeUpdateDialog');\n      },\n      retryUpdate() {\n        this.updateFailed = false;\n        this.updateComplete = false;\n        this.progress = 0;\n        this.currentTask = this.$t('update.preparing');\n        this.logs = [];\n        // this.$emit('retry');\n        this.$bus.$emit('reRunUpdate');\n        }\n    }\n  };\n  </script>\n  \n  <style scoped>\n  .update-overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: rgba(0, 0, 0, 0.7);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    z-index: 9999;\n    overflow: hidden;\n    /* 确保可以接收点击事件 */\n    pointer-events: auto;\n  }\n  \n  .update-dialog {\n    background-color: #fff;\n    border-radius: 8px;\n    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.2);\n    width: 80%;\n    max-width: 600px;\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n    max-height: 80vh;\n    /* 确保对话框可以接收点击事件 */\n    pointer-events: auto;\n    /* 防止选择 */\n    user-select: none;\n    /* 确保在最前面 */\n    position: relative;\n    z-index: 10000;\n  }\n  \n  .update-header {\n    margin-bottom: 20px;\n    text-align: center;\n  }\n  \n  .warning-text {\n    color: #ff9800;\n    font-weight: bold;\n  }\n  \n  .success-text {\n    color: #4caf50;\n    font-weight: bold;\n  }\n  \n  .error-text {\n    color: #f44336;\n    font-weight: bold;\n  }\n  \n  .progress-container {\n    display: flex;\n    align-items: center;\n    margin-bottom: 20px;\n  }\n  \n  .progress-bar {\n    flex-grow: 1;\n    height: 20px;\n    background-color: #e0e0e0;\n    border-radius: 10px;\n    overflow: hidden;\n    margin-right: 10px;\n  }\n  \n  .progress-fill {\n    height: 100%;\n    background-color: #2196f3;\n    transition: width 0.3s ease;\n  }\n  \n  .progress-fill.success {\n    background-color: #4caf50;\n  }\n  \n  .progress-fill.error {\n    background-color: #f44336;\n  }\n  \n  .progress-text {\n    width: 40px;\n    font-weight: bold;\n    text-align: right;\n  }\n  \n  .current-task {\n    margin-bottom: 15px;\n    font-size: 16px;\n  }\n  \n  .current-task span {\n    font-weight: bold;\n  }\n  \n  .log-container {\n    border: 1px solid #e0e0e0;\n    border-radius: 4px;\n    overflow: hidden;\n    margin-bottom: 20px;\n  }\n  \n  .log-header {\n    background-color: #f5f5f5;\n    padding: 8px 12px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    font-weight: bold;\n  }\n  \n  .toggle-log {\n    background: none;\n    border: none;\n    color: #2196f3;\n    cursor: pointer;\n    font-size: 14px;\n    padding: 4px 8px;\n    border-radius: 4px;\n    transition: background-color 0.2s ease;\n  }\n  \n  .toggle-log:hover {\n    background-color: #e3f2fd;\n  }\n  \n  .toggle-log:active {\n    background-color: #bbdefb;\n  }\n  \n  .log-content {\n    max-height: 100px;\n    transition: max-height 0.3s ease;\n    overflow: hidden;\n  }\n  \n  .log-content.expanded {\n    max-height: 300px;\n  }\n  \n  .log-scroll {\n    overflow-y: auto;\n    max-height: 300px;\n    padding: 10px;\n  }\n  \n  .log-scroll div {\n    padding: 4px 0;\n    border-bottom: 1px solid #f0f0f0;\n    font-family: monospace;\n  }\n  \n  .log-time {\n    color: #757575;\n    margin-right: 10px;\n    font-size: 12px;\n  }\n  \n  .error-log .log-message {\n    color: #f44336;\n  }\n  \n  .success-log .log-message {\n    color: #4caf50;\n  }\n  \n  .progress-log .log-message {\n    color: #2196f3;\n  }\n  \n  .dialog-footer {\n    display: flex;\n    justify-content: flex-end;\n    gap: 10px;\n  }\n  \n  .close-button, .retry-button {\n    padding: 8px 16px;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    font-weight: bold;\n    transition: all 0.2s ease;\n    min-width: 80px;\n  }\n  \n  .close-button {\n    background-color: #e0e0e0;\n    color: #333;\n  }\n  \n  .close-button:hover {\n    background-color: #d0d0d0;\n  }\n  \n  .close-button:active {\n    background-color: #c0c0c0;\n  }\n  \n  .retry-button {\n    background-color: #2196f3;\n    color: white;\n  }\n  \n  .retry-button:hover {\n    background-color: #1976d2;\n  }\n  \n  .retry-button:active {\n    background-color: #1565c0;\n  }\n  </style>"]}]}