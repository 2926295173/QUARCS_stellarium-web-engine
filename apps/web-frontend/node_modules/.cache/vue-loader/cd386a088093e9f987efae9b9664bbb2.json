{"remainingRequest":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/src/components/AutomaticPolarAlignmentCalibration.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/src/components/AutomaticPolarAlignmentCalibration.vue","mtime":1758790387694},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1707125360000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/thread-loader/dist/cjs.js","mtime":1707125360000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/babel-loader/lib/index.js","mtime":1707125360000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1707125360000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/vue-loader/lib/index.js","mtime":1707125450000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vIOW4uOmHj+WumuS5iQpjb25zdCBDT0xPUlMgPSB7CiAgUFJJTUFSWTogJyM2NGI1ZjYnLAogIFNVQ0NFU1M6ICcjNGNhZjUwJywKICBXQVJOSU5HOiAnI2ZmOTgwMCcsCiAgRVJST1I6ICcjZjQ0MzM2JywKICBJTkZPOiAnIzIxOTZmMycsCiAgV0hJVEU6ICcjZmZmZmZmJywKICBCQUNLR1JPVU5EOiAncmdiYSgzNSwgMzUsIDQ1LCAwLjk1KScsCiAgU1VSRkFDRTogJ3JnYmEoNjAsIDYwLCA3MCwgMC45KScKfQoKY29uc3QgQ0FMSUJSQVRJT05fUEhBU0VTID0gewogIElOSVRJQUw6ICdpbml0aWFsJywKICBDT0xMRUNUSU5HOiAnY29sbGVjdGluZycsCiAgQURKVVNUSU5HOiAnYWRqdXN0aW5nJywKICBWRVJJRllJTkc6ICd2ZXJpZnlpbmcnCn0KCmNvbnN0IFBST0dSRVNTX1RIUkVTSE9MRFMgPSB7CiAgSU5JVElBTElaQVRJT046IDE1LAogIEZJUlNUX0NBTElCUkFUSU9OOiAyNSwKICBTRUNPTkRfQ0FMSUJSQVRJT046IDUwLAogIFRISVJEX0NBTElCUkFUSU9OOiA3NSwKICBDQUxJQlJBVElPTl9MT09QOiA5NSwKICBDT01QTEVUSU9OOiAxMDAKfQoKY29uc3QgRElNRU5TSU9OUyA9IHsKICBNSU5JTUlaRUQ6IHsgd2lkdGg6IDI1MCwgaGVpZ2h0OiA4MCB9LAogIENPTExBUFNFRDogeyB3aWR0aDogMzAwLCBoZWlnaHQ6IDEyMCB9LAogIEVYUEFOREVEOiB7IHdpZHRoOiAzNTAsIGhlaWdodDogNDAwIH0KfQoKY29uc3QgTE9HX0xJTUlUID0gMTAwCmNvbnN0IERJU1BMQVlfTE9HX0xJTUlUID0gMTAKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQXV0b21hdGljUG9sYXJBbGlnbm1lbnRDYWxpYnJhdGlvbicsCgogIHByb3BzOiB7CiAgICB2aXNpYmxlOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9LAogICAgYXV0b1N0YXJ0OiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9LAogICAgLy8g5paw5aKe77ya5Lyg5YWl6LCD5pW05pWw5o2u55qE5Y2V5L2N77yIJ2RlZycgfCAnYXJjbWluJyB8ICdhcmNzZWMn77yJCiAgICBhZGp1c3RtZW50VW5pdDogeyB0eXBlOiBTdHJpbmcsIGRlZmF1bHQ6ICdhcmNtaW4nIH0sCgogICAgLy8g5paw5aKe77ya55So5oi356uZ5L2N6KeG6KeS77yIJ25vcnRoJyB8ICdzb3V0aCfvvInvvIznlKjkuo7lt6blj7PmmKDlsIQKICAgIGZhY2luZ1BvbGU6IHsgdHlwZTogU3RyaW5nLCBkZWZhdWx0OiAnbm9ydGgnIH0sCgogICAgLy8g5paw5aKe77ya5Yqo5L2c5q275Yy677yI5Lul6KeS5YiG5a6a5LmJ77yMVUnliKTlrprmmK/lkKbpnIDopoHliqjkvZzvvIkKICAgIGRlYWRiYW5kQXJjbWluOiB7IHR5cGU6IE51bWJlciwgZGVmYXVsdDogMC41IH0KICB9LAoKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgLy8g6L+e5o6l54q25oCBCiAgICAgIGlzQ29ubmVjdGVkOiBmYWxzZSwKCiAgICAgIC8vIOS9jee9ruS/oeaBrwogICAgICBjdXJyZW50UG9zaXRpb246IHsKICAgICAgICByYTogJzAwaCAwMG0gMDBzJywKICAgICAgICBkZWM6ICcrMDDCsCAwMFwnIDAwIicKICAgICAgfSwKICAgICAgdGFyZ2V0UG9zaXRpb246IHsKICAgICAgICByYTogJzAwaCAwMG0gMDBzJywKICAgICAgICBkZWM6ICcrMDDCsCAwMFwnIDAwIicKICAgICAgfSwKICAgICAgcHJldmlvdXNQb3NpdGlvbjogewogICAgICAgIHJhOiAnMDBoIDAwbSAwMHMnLAogICAgICAgIGRlYzogJyswMMKwIDAwXCcgMDAiJwogICAgICB9LAoKICAgICAgLy8g5qCh5YeG5pWw5o2uCiAgICAgIGlzQ2FsaWJyYXRpb25Db21wbGV0ZTogZmFsc2UsCiAgICAgIGlzUG9sYXJBbGlnbmVkOiBmYWxzZSwKCiAgICAgIC8vIOiwg+aVtOS/oeaBrwogICAgICBhZGp1c3RtZW50OiB7CiAgICAgICAgYXppbXV0aDogMC4wLAogICAgICAgIGFsdGl0dWRlOiAwLjAKICAgICAgfSwKCiAgICAgIC8vIOaXpeW/l+ezu+e7nyAtIOS9v+eUqOW+queOr+aVsOe7hOS8mOWMluWGheWtmAogICAgICBsb2dzOiBbXSwKICAgICAgbG9nSW5kZXg6IDAsCiAgICAgIGxvZ0NhcGFjaXR5OiBMT0dfTElNSVQsCgogICAgICAvLyDmoKHlh4bov5DooYznirbmgIEKICAgICAgaXNDYWxpYnJhdGlvblJ1bm5pbmc6IGZhbHNlLAoKICAgICAgLy8g6KeG5Zy65pWw5o2uCiAgICAgIGZpZWxkRGF0YTogbnVsbCwKCiAgICAgIC8vIOW9k+WJjei/m+W6pgogICAgICBjdXJyZW50UHJvZ3Jlc3M6IDAsCgogICAgICAvLyA9PT0g5paw5aKe77ya55WM6Z2i5o6n5Yi254q25oCBID09PQogICAgICAvLyDmi5bliqjnirbmgIEKICAgICAgaXNEcmFnZ2luZzogZmFsc2UsCiAgICAgIGRyYWdPZmZzZXQ6IHsgeDogMCwgeTogMCB9LAoKICAgICAgLy8g5o6n5Lu25L2N572uCiAgICAgIHBvc2l0aW9uOiB7IHg6IDUwLCB5OiA1MCB9LAoKICAgICAgLy8g55WM6Z2i54q25oCBCiAgICAgIGlzTWluaW1pemVkOiBmYWxzZSwKICAgICAgaXNDb2xsYXBzZWQ6IGZhbHNlLAoKICAgICAgLy8gPT09IOaWsOWinu+8muaAp+iDveS8mOWMliA9PT0KICAgICAgLy8g57yT5a2Y5bC65a+46K6h566X57uT5p6cCiAgICAgIGNhY2hlZERpbWVuc2lvbnM6IHsKICAgICAgICB3aWR0aDogMzUwLAogICAgICAgIGhlaWdodDogNDAwCiAgICAgIH0sCiAgICAgIC8vIOaLluWKqOeKtuaAgeagh+iusAogICAgICBpc0RyYWdnaW5nU3RhdGU6IGZhbHNlLAoKICAgICAgLy8g5YaF5a2Y5riF55CG5a6a5pe25ZmoCiAgICAgIG1lbW9yeUNsZWFudXBUaW1lcjogbnVsbCwKCiAgICAgIC8vIOiuoeeul+e8k+WtmAogICAgICBjYWNoZWRBemltdXRoQXJjbWluOiBudWxsLAogICAgICBjYWNoZWRBbHRpdHVkZUFyY21pbjogbnVsbCwKICAgICAgbGFzdEF6aW11dGhWYWx1ZTogbnVsbCwKICAgICAgbGFzdEFsdGl0dWRlVmFsdWU6IG51bGwsCgogICAgICAvLyDmi5bliqjmgKfog73kvJjljJYKICAgICAgbGFzdERyYWdUaW1lOiAwLAoKICAgICAgLy8g5p6B6L205YGP56e76YePCiAgICAgIHBvbGFyQXhpc09mZnNldDogewogICAgICAgIGF6aW11dGg6IDAsCiAgICAgICAgYWx0aXR1ZGU6IDAKICAgICAgfSwKCiAgICAgIC8vIOagoeWHhuW+queOr+iuoeaVsAogICAgICBjYWxpYnJhdGlvbkxvb3BDb3VudDogMCwKICAgICAgbGFzdENhbGlicmF0aW9uUHJvZ3Jlc3M6IDAsCgogICAgICAvLyDmoKHlh4bpmLbmrrXnirbmgIEKICAgICAgY2FsaWJyYXRpb25QaGFzZTogJ2luaXRpYWwnLCAvLyAnaW5pdGlhbCcsICdjb2xsZWN0aW5nJywgJ2FkanVzdGluZycsICd2ZXJpZnlpbmcnCiAgICAgIGNhbGlicmF0aW9uUG9pbnRzOiBbXSwgLy8g5a2Y5YKo5LiJ5Liq5qCh5YeG54K555qE5Z2Q5qCHCiAgICAgIG1heENhbGlicmF0aW9uUG9pbnRzOiAzLCAvLyDmnIDlpKfmoKHlh4bngrnmlbDph48KICAgICAgdGFyZ2V0UG9pbnQ6IG51bGwsIC8vIOWtmOWCqOebruagh+eCueWdkOaghwoKICAgICAgLy8g56e76Zmk5YGH5p6B6L2055u45YWz5pWw5o2uCiAgICAgIC8vIGZha2VQb2xhckF4aXM6IHsKICAgICAgLy8gICByYTogbnVsbCwKICAgICAgLy8gICBkZWM6IG51bGwsCiAgICAgIC8vICAgY2FsY3VsYXRlZDogZmFsc2UKICAgICAgLy8gfSwKICAgIH0KICB9LAoKICBjb21wdXRlZDogewogICAgLy8g5pi+56S655qE5pel5b+XIC0g5L2/55So57yT5a2Y5LyY5YyWCiAgICBkaXNwbGF5TG9ncygpIHsKICAgICAgLy8g6L+U5Zue5pyA6L+R55qEMTDmnaHml6Xlv5fvvIzmjInml7bpl7TlgJLluo/vvIjnlKjkuo7mmL7npLrmnIDmlrDkuIDmnaHvvIkKICAgICAgY29uc3QgbG9ncyA9IHRoaXMubG9ncwogICAgICBpZiAobG9ncy5sZW5ndGggPD0gRElTUExBWV9MT0dfTElNSVQpIHsKICAgICAgICByZXR1cm4gbG9ncy5zbGljZSgpLnJldmVyc2UoKQogICAgICB9CiAgICAgIHJldHVybiBsb2dzLnNsaWNlKC1ESVNQTEFZX0xPR19MSU1JVCkucmV2ZXJzZSgpCiAgICB9LAoKICAgIC8vIOagoeWHhui/m+W6pueZvuWIhuavlAogICAgcHJvZ3Jlc3NQZXJjZW50YWdlKCkgewogICAgICAvLyDkvb/nlKjku47lkI7nq6/kvKDlhaXnmoTov5vluqYKICAgICAgcmV0dXJuIHRoaXMuY3VycmVudFByb2dyZXNzCiAgICB9LAoKICAgIC8vIOaYr+WQpuWPr+S7peiHquWKqOagoeWHhgogICAgY2FuQXV0b0NhbGlicmF0ZSgpIHsKICAgICAgcmV0dXJuIHRoaXMuaXNDb25uZWN0ZWQKICAgIH0sCgogICAgLy8g5piv5ZCm6ZyA6KaB5pa55L2N6KeS6LCD5pW0IC0g5L2/55So57yT5a2Y6YG/5YWN6YeN5aSN6K6h566XCiAgICBuZWVkc0F6aW11dGhBZGp1c3RtZW50KCkgewogICAgICBjb25zdCB2ID0gdGhpcy5hZGp1c3RtZW50Py5hemltdXRoCiAgICAgIGlmICghTnVtYmVyLmlzRmluaXRlKHYpKSByZXR1cm4gZmFsc2UKICAgICAgLy8g5L2/55So57yT5a2Y55qE5YC877yM6YG/5YWN6YeN5aSN6K6h566XCiAgICAgIHJldHVybiB0aGlzLmNhY2hlZEF6aW11dGhBcmNtaW4gIT09IG51bGwgPyAKICAgICAgICBNYXRoLmFicyh0aGlzLmNhY2hlZEF6aW11dGhBcmNtaW4pID4gdGhpcy5kZWFkYmFuZEFyY21pbiA6IAogICAgICAgIE1hdGguYWJzKHRoaXMudW5pdFRvQXJjbWluKHYsIHRoaXMuYWRqdXN0bWVudFVuaXQpKSA+IHRoaXMuZGVhZGJhbmRBcmNtaW4KICAgIH0sCgogICAgLy8g5piv5ZCm6ZyA6KaB6auY5bqm6KeS6LCD5pW0IC0g5L2/55So57yT5a2Y6YG/5YWN6YeN5aSN6K6h566XCiAgICBuZWVkc0FsdGl0dWRlQWRqdXN0bWVudCgpIHsKICAgICAgY29uc3QgdiA9IHRoaXMuYWRqdXN0bWVudD8uYWx0aXR1ZGUKICAgICAgaWYgKCFOdW1iZXIuaXNGaW5pdGUodikpIHJldHVybiBmYWxzZQogICAgICAvLyDkvb/nlKjnvJPlrZjnmoTlgLzvvIzpgb/lhY3ph43lpI3orqHnrpcKICAgICAgcmV0dXJuIHRoaXMuY2FjaGVkQWx0aXR1ZGVBcmNtaW4gIT09IG51bGwgPyAKICAgICAgICBNYXRoLmFicyh0aGlzLmNhY2hlZEFsdGl0dWRlQXJjbWluKSA+IHRoaXMuZGVhZGJhbmRBcmNtaW4gOiAKICAgICAgICBNYXRoLmFicyh0aGlzLnVuaXRUb0FyY21pbih2LCB0aGlzLmFkanVzdG1lbnRVbml0KSkgPiB0aGlzLmRlYWRiYW5kQXJjbWluCiAgICB9CiAgfSwKCiAgd2F0Y2g6IHsKICAgIHZpc2libGUobmV3VmFsKSB7CiAgICAgIGlmIChuZXdWYWwgJiYgdGhpcy5hdXRvU3RhcnQpIHsKICAgICAgICB0aGlzLnN0YXJ0QXV0b0NhbGlicmF0aW9uKCkKICAgICAgfQogICAgfSwKICAgIAogICAgLy8g55uR5ZCs5b2T5YmN5Z2Q5qCH5Y+Y5YyW77yM6Ieq5Yqo5pu05paw5pyd5ZCR5p6B54K5CiAgICAnJHN0b3JlLnN0YXRlLmN1cnJlbnRMb2NhdGlvbi5sYXQnOiB7CiAgICAgIGhhbmRsZXIobmV3TGF0LCBvbGRMYXQpIHsKICAgICAgICBpZiAobmV3TGF0ICE9PSBvbGRMYXQgJiYgbmV3TGF0ICE9PSB1bmRlZmluZWQpIHsKICAgICAgICAgIGNvbnN0IGZhY2luZ1BvbGUgPSB0aGlzLmNhbGN1bGF0ZUZhY2luZ1BvbGUoKQogICAgICAgICAgdGhpcy5hZGRMb2codGhpcy4kdCgnTG9jYXRpb24gQ2hhbmdlZCcsIFtmYWNpbmdQb2xlLCBuZXdMYXRdKSwgJ2luZm8nKQogICAgICAgICAgCiAgICAgICAgICAvLyDlpoLmnpzmraPlnKjosIPmlbTpmLbmrrXvvIzph43mlrDorqHnrpfosIPmlbTlu7rorq4KICAgICAgICAgIGlmICh0aGlzLmNhbGlicmF0aW9uUGhhc2UgPT09ICdhZGp1c3RpbmcnKSB7CiAgICAgICAgICAgIHRoaXMuYWRkTG9nKHRoaXMuJHQoJ1JlY2FsY3VsYXRpbmcgQWRqdXN0bWVudCBEaXJlY3Rpb25zJyksICdpbmZvJykKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sCiAgICAgIGltbWVkaWF0ZTogZmFsc2UKICAgIH0sCgogICAgLy8g55uR5ZCs6LCD5pW05YC85Y+Y5YyW77yM5pu05paw57yT5a2YIC0g5L2/55So6Ziy5oqW6YG/5YWN6aKR57mB5pu05pawCiAgICAnYWRqdXN0bWVudC5hemltdXRoJzogewogICAgICBoYW5kbGVyOiBmdW5jdGlvbihuZXdWYWwpIHsKICAgICAgICBpZiAoTnVtYmVyLmlzRmluaXRlKG5ld1ZhbCkpIHsKICAgICAgICAgIC8vIOa4hemZpOS5i+WJjeeahOWumuaXtuWZqAogICAgICAgICAgaWYgKHRoaXMuX2F6aW11dGhVcGRhdGVUaW1lcikgewogICAgICAgICAgICBjbGVhclRpbWVvdXQodGhpcy5fYXppbXV0aFVwZGF0ZVRpbWVyKQogICAgICAgICAgfQogICAgICAgICAgLy8g5L2/55So6Ziy5oqW77yM5bu26L+fMTAwbXPmm7TmlrAKICAgICAgICAgIHRoaXMuX2F6aW11dGhVcGRhdGVUaW1lciA9IHNldFRpbWVvdXQoKCkgPT4gewogICAgICAgICAgICB0aGlzLmNhY2hlZEF6aW11dGhBcmNtaW4gPSB0aGlzLnVuaXRUb0FyY21pbihuZXdWYWwsIHRoaXMuYWRqdXN0bWVudFVuaXQpCiAgICAgICAgICAgIHRoaXMubGFzdEF6aW11dGhWYWx1ZSA9IG5ld1ZhbAogICAgICAgICAgfSwgMTAwKQogICAgICAgIH0KICAgICAgfSwKICAgICAgaW1tZWRpYXRlOiB0cnVlCiAgICB9LAoKICAgICdhZGp1c3RtZW50LmFsdGl0dWRlJzogewogICAgICBoYW5kbGVyOiBmdW5jdGlvbihuZXdWYWwpIHsKICAgICAgICBpZiAoTnVtYmVyLmlzRmluaXRlKG5ld1ZhbCkpIHsKICAgICAgICAgIC8vIOa4hemZpOS5i+WJjeeahOWumuaXtuWZqAogICAgICAgICAgaWYgKHRoaXMuX2FsdGl0dWRlVXBkYXRlVGltZXIpIHsKICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHRoaXMuX2FsdGl0dWRlVXBkYXRlVGltZXIpCiAgICAgICAgICB9CiAgICAgICAgICAvLyDkvb/nlKjpmLLmipbvvIzlu7bov58xMDBtc+abtOaWsAogICAgICAgICAgdGhpcy5fYWx0aXR1ZGVVcGRhdGVUaW1lciA9IHNldFRpbWVvdXQoKCkgPT4gewogICAgICAgICAgICB0aGlzLmNhY2hlZEFsdGl0dWRlQXJjbWluID0gdGhpcy51bml0VG9BcmNtaW4obmV3VmFsLCB0aGlzLmFkanVzdG1lbnRVbml0KQogICAgICAgICAgICB0aGlzLmxhc3RBbHRpdHVkZVZhbHVlID0gbmV3VmFsCiAgICAgICAgICB9LCAxMDApCiAgICAgICAgfQogICAgICB9LAogICAgICBpbW1lZGlhdGU6IHRydWUKICAgIH0KICB9LAoKICAgIG1vdW50ZWQoKSB7CiAgICAgIC8vIOWunueOsOe7hOS7tuWIneWni+WMlumAu+i+kQogICAgICB0aGlzLmluaXRpYWxpemUoKQoKICAgICAgLy8g5Yid5aeL5YyW57yT5a2Y55qE5bC65a+45L+h5oGvCiAgICAgIHRoaXMudXBkYXRlQ2FjaGVkRGltZW5zaW9ucygpCgogICAgICAvLyDnm5HlkKzkv6Hlj7fmgLvnur/kuovku7YKICAgICAgdGhpcy4kYnVzLiRvbignc2hvd1BvbGFyQWxpZ25tZW50JywgdGhpcy5zaG93SW50ZXJmYWNlKQogICAgICB0aGlzLiRidXMuJG9uKCdoaWRlUG9sYXJBbGlnbm1lbnQnLCB0aGlzLmhpZGVJbnRlcmZhY2UpCgogICAgICAvLyDnm5HlkKzotaTpgZPku6rov57mjqXnirbmgIEKICAgICAgdGhpcy4kYnVzLiRvbignTW91bnRDb25uZWN0ZWQnLCB0aGlzLnVwZGF0ZU1vdW50Q29ubmVjdGlvbikKCiAgICAgIC8vIOaOpeaUtueKtuaAgeabtOaWsAogICAgICB0aGlzLiRidXMuJG9uKCdQb2xhckFsaWdubWVudFN0YXRlJywgdGhpcy51cGRhdGVQb2xhckFsaWdubWVudFN0YXRlKQoKICAgICAgLy8g55uR5ZCs6KeG5Zy65pWw5o2u5pu05pawCiAgICAgIHRoaXMuJGJ1cy4kb24oJ0ZpZWxkRGF0YVVwZGF0ZScsIHRoaXMudXBkYXRlRmllbGREYXRhKQoKICAgICAgLy8g55uR5ZCs5Y2h54mH5L+h5oGv5pu05pawCiAgICAgIHRoaXMuJGJ1cy4kb24oJ3VwZGF0ZUNhcmRJbmZvJywgdGhpcy51cGRhdGVDYXJkSW5mbykKCiAgICAgIC8vIOWQr+WKqOWumuacn+WGheWtmOa4heeQhu+8iOavjzXliIbpkp/muIXnkIbkuIDmrKHvvIkKICAgICAgdGhpcy5zdGFydE1lbW9yeUNsZWFudXAoKQogICAgfSwKCiAgICBiZWZvcmVEZXN0cm95KCkgewogICAgICAvLyDnp7vpmaTkv6Hlj7fmgLvnur/nm5HlkKwKICAgICAgdGhpcy4kYnVzLiRvZmYoJ3Nob3dQb2xhckFsaWdubWVudCcsIHRoaXMuc2hvd0ludGVyZmFjZSkKICAgICAgdGhpcy4kYnVzLiRvZmYoJ2hpZGVQb2xhckFsaWdubWVudCcsIHRoaXMuaGlkZUludGVyZmFjZSkKICAgICAgdGhpcy4kYnVzLiRvZmYoJ01vdW50Q29ubmVjdGVkJywgdGhpcy51cGRhdGVNb3VudENvbm5lY3Rpb24pCiAgICAgIHRoaXMuJGJ1cy4kb2ZmKCdQb2xhckFsaWdubWVudFN0YXRlJywgdGhpcy51cGRhdGVQb2xhckFsaWdubWVudFN0YXRlKQogICAgICB0aGlzLiRidXMuJG9mZignRmllbGREYXRhVXBkYXRlJywgdGhpcy51cGRhdGVGaWVsZERhdGEpCiAgICAgIHRoaXMuJGJ1cy4kb2ZmKCd1cGRhdGVDYXJkSW5mbycsIHRoaXMudXBkYXRlQ2FyZEluZm8pCgogICAgICAvLyDmuIXnkIbmi5bliqjkuovku7bnm5HlkKwKICAgICAgdGhpcy5jbGVhbnVwRHJhZ0xpc3RlbmVycygpCgogICAgICAvLyDmuIXnkIbnvJPlrZjmlbDmja4KICAgICAgdGhpcy5jbGVhckNhY2hlZERhdGEoKQoKICAgICAgLy8g5YGc5q2i5YaF5a2Y5riF55CG5a6a5pe25ZmoCiAgICAgIHRoaXMuc3RvcE1lbW9yeUNsZWFudXAoKQoKICAgICAgLy8g5riF55CG6Ziy5oqW5a6a5pe25ZmoCiAgICAgIHRoaXMuY2xlYXJEZWJvdW5jZVRpbWVycygpCgogICAgICAvLyDlrp7njrDnu4Tku7bplIDmr4HpgLvovpEKICAgICAgdGhpcy5jbGVhbnVwKCkKICAgIH0sCgogICAgbWV0aG9kczogewogICAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiAgICAgIC8vIOS/oeWPt+aAu+e6v+S6i+S7tuWkhOeQhgogICAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiAgICAgIHNob3dJbnRlcmZhY2UoKSB7CiAgICAgICAgdGhpcy4kZW1pdCgndXBkYXRlOnZpc2libGUnLCB0cnVlKQogICAgICB9LAoKICAgICAgaGlkZUludGVyZmFjZSgpIHsKICAgICAgICB0aGlzLiRlbWl0KCd1cGRhdGU6dmlzaWJsZScsIGZhbHNlKQogICAgICB9LAoKICAgICAgdXBkYXRlTW91bnRDb25uZWN0aW9uKHN0YXR1cykgewogICAgICAgIHRoaXMuaXNDb25uZWN0ZWQgPSBzdGF0dXMgPT09IDEKICAgICAgICBjb25zdCBzdGF0dXNUZXh0ID0gdGhpcy5pc0Nvbm5lY3RlZCA/IHRoaXMuJHQoJ0Nvbm5lY3RlZCcpIDogdGhpcy4kdCgnRGlzY29ubmVjdGVkJykKICAgICAgICB0aGlzLmFkZExvZyh0aGlzLiR0KCdNb3VudCBDb25uZWN0aW9uIFN0YXR1cycsIFtzdGF0dXNUZXh0XSksIHRoaXMuaXNDb25uZWN0ZWQgPyAnc3VjY2VzcycgOiAnd2FybmluZycpCiAgICAgIH0sCgogICAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiAgICAgIC8vIOWIneWni+WMluWSjOa4heeQhgogICAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiAgICAgIGluaXRpYWxpemUoKSB7CiAgICAgICAgdGhpcy5hZGRMb2codGhpcy4kdCgnUG9sYXIgQWxpZ25tZW50IENvbXBvbmVudCBJbml0aWFsaXplZCcpLCAnaW5mbycpCiAgICAgICAgCiAgICAgICAgLy8g6K6w5b2V5b2T5YmN5pyd5ZCR5p6B54K5CiAgICAgICAgY29uc3QgZmFjaW5nUG9sZSA9IHRoaXMuY2FsY3VsYXRlRmFjaW5nUG9sZSgpCiAgICAgICAgY29uc3QgbGF0ID0gdGhpcy4kc3RvcmU/LnN0YXRlPy5jdXJyZW50TG9jYXRpb24/LmxhdCB8fCAndW5rbm93bicKICAgICAgICB0aGlzLmFkZExvZyh0aGlzLiR0KCdGYWNpbmcgUG9sZScsIFtmYWNpbmdQb2xlLCBsYXRdKSwgJ2luZm8nKQogICAgICB9LAoKICAgICAgY2xlYW51cCgpIHsKICAgICAgICB0aGlzLmFkZExvZyh0aGlzLiR0KCdQb2xhciBBbGlnbm1lbnQgQ29tcG9uZW50IENsZWFuZWQnKSwgJ2luZm8nKQogICAgICB9LAoKICAgICAgLy8g5YaF5a2Y5L2/55So55uR5o6n77yI5LuF5Zyo5byA5Y+R546v5aKD77yJCiAgICAgIGdldE1lbW9yeVVzYWdlKCkgewogICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50JyAmJiBwZXJmb3JtYW5jZS5tZW1vcnkpIHsKICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIHVzZWRKU0hlYXBTaXplOiBNYXRoLnJvdW5kKHBlcmZvcm1hbmNlLm1lbW9yeS51c2VkSlNIZWFwU2l6ZSAvIDEwMjQgLyAxMDI0KSArICdNQicsCiAgICAgICAgICAgIHRvdGFsSlNIZWFwU2l6ZTogTWF0aC5yb3VuZChwZXJmb3JtYW5jZS5tZW1vcnkudG90YWxKU0hlYXBTaXplIC8gMTAyNCAvIDEwMjQpICsgJ01CJywKICAgICAgICAgICAganNIZWFwU2l6ZUxpbWl0OiBNYXRoLnJvdW5kKHBlcmZvcm1hbmNlLm1lbW9yeS5qc0hlYXBTaXplTGltaXQgLyAxMDI0IC8gMTAyNCkgKyAnTUInLAogICAgICAgICAgICBsb2dzQ291bnQ6IHRoaXMubG9ncy5sZW5ndGgsCiAgICAgICAgICAgIGNhbGlicmF0aW9uUG9pbnRzQ291bnQ6IHRoaXMuY2FsaWJyYXRpb25Qb2ludHMubGVuZ3RoCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIHJldHVybiBudWxsCiAgICAgIH0sCgogICAgICAvLyDlkK/liqjlrprmnJ/lhoXlrZjmuIXnkIYKICAgICAgc3RhcnRNZW1vcnlDbGVhbnVwKCkgewogICAgICAgIHRoaXMubWVtb3J5Q2xlYW51cFRpbWVyID0gc2V0SW50ZXJ2YWwoKCkgPT4gewogICAgICAgICAgdGhpcy5wZXJmb3JtTWVtb3J5Q2xlYW51cCgpCiAgICAgICAgfSwgNSAqIDYwICogMTAwMCkgLy8g5q+PNeWIhumSn+a4heeQhuS4gOasoQogICAgICB9LAoKICAgICAgLy8g5YGc5q2i5YaF5a2Y5riF55CG5a6a5pe25ZmoCiAgICAgIHN0b3BNZW1vcnlDbGVhbnVwKCkgewogICAgICAgIGlmICh0aGlzLm1lbW9yeUNsZWFudXBUaW1lcikgewogICAgICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLm1lbW9yeUNsZWFudXBUaW1lcikKICAgICAgICAgIHRoaXMubWVtb3J5Q2xlYW51cFRpbWVyID0gbnVsbAogICAgICAgIH0KICAgICAgfSwKCiAgICAgIC8vIOaJp+ihjOWGheWtmOa4heeQhgogICAgICBwZXJmb3JtTWVtb3J5Q2xlYW51cCgpIHsKICAgICAgICAvLyDmuIXnkIbov4fmnJ/nmoTml6Xlv5fvvIjkv53nlZnmnIDov5E1MOadoe+8iQogICAgICAgIGlmICh0aGlzLmxvZ3MubGVuZ3RoID4gNTApIHsKICAgICAgICAgIHRoaXMubG9ncyA9IHRoaXMubG9ncy5zbGljZSgtNTApCiAgICAgICAgICB0aGlzLmxvZ0luZGV4ID0gTWF0aC5taW4odGhpcy5sb2dJbmRleCwgNTApCiAgICAgICAgfQoKICAgICAgICAvLyDmuIXnkIbov4fmnJ/nmoTmoKHlh4bngrnvvIjlpoLmnpzotoXov4fmnIDlpKfmlbDph4/vvIkKICAgICAgICBpZiAodGhpcy5jYWxpYnJhdGlvblBvaW50cy5sZW5ndGggPiB0aGlzLm1heENhbGlicmF0aW9uUG9pbnRzKSB7CiAgICAgICAgICB0aGlzLmNhbGlicmF0aW9uUG9pbnRzID0gdGhpcy5jYWxpYnJhdGlvblBvaW50cy5zbGljZSgtdGhpcy5tYXhDYWxpYnJhdGlvblBvaW50cykKICAgICAgICB9CgogICAgICAgIC8vIOW8uuWItuWeg+WcvuWbnuaUtu+8iOWmguaenOWPr+eUqO+8iQogICAgICAgIGlmICh3aW5kb3cuZ2MgJiYgdHlwZW9mIHdpbmRvdy5nYyA9PT0gJ2Z1bmN0aW9uJykgewogICAgICAgICAgd2luZG93LmdjKCkKICAgICAgICB9CgogICAgICAgIC8vIOWcqOW8gOWPkeeOr+Wig+i+k+WHuuWGheWtmOS9v+eUqOaDheWGtQogICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50JykgewogICAgICAgICAgY29uc3QgbWVtb3J5SW5mbyA9IHRoaXMuZ2V0TWVtb3J5VXNhZ2UoKQogICAgICAgICAgaWYgKG1lbW9yeUluZm8pIHsKICAgICAgICAgICAgY29uc29sZS5sb2coJ01lbW9yeSBjbGVhbnVwIHBlcmZvcm1lZDonLCBtZW1vcnlJbmZvKQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwKCiAgICAgIC8vIOa4heeQhuaLluWKqOS6i+S7tuebkeWQrOWZqAogICAgICBjbGVhbnVwRHJhZ0xpc3RlbmVycygpIHsKICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCB0aGlzLm9uRHJhZykKICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZXVwJywgdGhpcy5zdG9wRHJhZykKICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCd0b3VjaG1vdmUnLCB0aGlzLm9uRHJhZykKICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCd0b3VjaGVuZCcsIHRoaXMuc3RvcERyYWcpCiAgICAgIH0sCgogICAgICAvLyDmuIXnkIbpmLLmipblrprml7blmagKICAgICAgY2xlYXJEZWJvdW5jZVRpbWVycygpIHsKICAgICAgICBpZiAodGhpcy5fYXppbXV0aFVwZGF0ZVRpbWVyKSB7CiAgICAgICAgICBjbGVhclRpbWVvdXQodGhpcy5fYXppbXV0aFVwZGF0ZVRpbWVyKQogICAgICAgICAgdGhpcy5fYXppbXV0aFVwZGF0ZVRpbWVyID0gbnVsbAogICAgICAgIH0KICAgICAgICBpZiAodGhpcy5fYWx0aXR1ZGVVcGRhdGVUaW1lcikgewogICAgICAgICAgY2xlYXJUaW1lb3V0KHRoaXMuX2FsdGl0dWRlVXBkYXRlVGltZXIpCiAgICAgICAgICB0aGlzLl9hbHRpdHVkZVVwZGF0ZVRpbWVyID0gbnVsbAogICAgICAgIH0KICAgICAgfSwKCiAgICAgIC8vIOa4heeQhue8k+WtmOaVsOaNrgogICAgICBjbGVhckNhY2hlZERhdGEoKSB7CiAgICAgICAgLy8g5riF55CG6K6h566X57yT5a2YCiAgICAgICAgdGhpcy5jYWNoZWRBemltdXRoQXJjbWluID0gbnVsbAogICAgICAgIHRoaXMuY2FjaGVkQWx0aXR1ZGVBcmNtaW4gPSBudWxsCiAgICAgICAgdGhpcy5sYXN0QXppbXV0aFZhbHVlID0gbnVsbAogICAgICAgIHRoaXMubGFzdEFsdGl0dWRlVmFsdWUgPSBudWxsCiAgICAgICAgdGhpcy5sYXN0RHJhZ1RpbWUgPSAwCiAgICAgICAgCiAgICAgICAgLy8g5riF55CG5pel5b+X5pWw5o2uCiAgICAgICAgdGhpcy5sb2dzID0gW10KICAgICAgICB0aGlzLmxvZ0luZGV4ID0gMAogICAgICAgIAogICAgICAgIC8vIOa4heeQhuagoeWHhuaVsOaNrgogICAgICAgIHRoaXMuY2FsaWJyYXRpb25Qb2ludHMgPSBbXQogICAgICAgIHRoaXMudGFyZ2V0UG9pbnQgPSBudWxsCiAgICAgICAgdGhpcy5maWVsZERhdGEgPSBudWxsCiAgICAgICAgCiAgICAgICAgLy8g5riF55CG5L2N572u5pWw5o2uCiAgICAgICAgdGhpcy5jdXJyZW50UG9zaXRpb24gPSB7IHJhOiAnMDBoIDAwbSAwMHMnLCBkZWM6ICcrMDDCsCAwMFwnIDAwIicgfQogICAgICAgIHRoaXMudGFyZ2V0UG9zaXRpb24gPSB7IHJhOiAnMDBoIDAwbSAwMHMnLCBkZWM6ICcrMDDCsCAwMFwnIDAwIicgfQogICAgICAgIHRoaXMucHJldmlvdXNQb3NpdGlvbiA9IHsgcmE6ICcwMGggMDBtIDAwcycsIGRlYzogJyswMMKwIDAwXCcgMDAiJyB9CiAgICAgICAgCiAgICAgICAgLy8g5riF55CG6LCD5pW05pWw5o2uCiAgICAgICAgdGhpcy5hZGp1c3RtZW50ID0geyBhemltdXRoOiAwLjAsIGFsdGl0dWRlOiAwLjAgfQogICAgICAgIHRoaXMucG9sYXJBeGlzT2Zmc2V0ID0geyBhemltdXRoOiAwLCBhbHRpdHVkZTogMCB9CiAgICAgICAgCiAgICAgICAgLy8g6YeN572u54q25oCBCiAgICAgICAgdGhpcy5pc0NhbGlicmF0aW9uQ29tcGxldGUgPSBmYWxzZQogICAgICAgIHRoaXMuaXNQb2xhckFsaWduZWQgPSBmYWxzZQogICAgICAgIHRoaXMuY2FsaWJyYXRpb25Mb29wQ291bnQgPSAwCiAgICAgICAgdGhpcy5sYXN0Q2FsaWJyYXRpb25Qcm9ncmVzcyA9IDAKICAgICAgICB0aGlzLmNhbGlicmF0aW9uUGhhc2UgPSAnaW5pdGlhbCcKICAgICAgfSwKCiAgICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KICAgICAgLy8g5ouW5Yqo5o6n5Yi25pa55rOVCiAgICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KICAgICAgc3RhcnREcmFnKGV2ZW50KSB7CiAgICAgICAgaWYgKGV2ZW50LnRhcmdldC5jbG9zZXN0KCcuaGVhZGVyLWNvbnRyb2xzLCAubWluaW1pemVkLWNvbnRyb2xzLCAuaGVhZGVyLWJ0biwgLm1pbmltaXplZC1idG4nKSkgewogICAgICAgICAgcmV0dXJuCiAgICAgICAgfQoKICAgICAgICB0aGlzLmlzRHJhZ2dpbmcgPSB0cnVlCiAgICAgICAgdGhpcy5pc0RyYWdnaW5nU3RhdGUgPSB0cnVlCgogICAgICAgIC8vIOa3u+WKoGRyYWdnaW5n57G777yM56e76Zmk6L+H5rih5Yqo55S7CiAgICAgICAgdGhpcy4kZWwuY2xhc3NMaXN0LmFkZCgnZHJhZ2dpbmcnKQoKICAgICAgICBjb25zdCByZWN0ID0gZXZlbnQuY3VycmVudFRhcmdldC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKQogICAgICAgIGNvbnN0IGNsaWVudFggPSBldmVudC5jbGllbnRYIHx8IGV2ZW50LnRvdWNoZXM/LlswXT8uY2xpZW50WCB8fCAwCiAgICAgICAgY29uc3QgY2xpZW50WSA9IGV2ZW50LmNsaWVudFkgfHwgZXZlbnQudG91Y2hlcz8uWzBdPy5jbGllbnRZIHx8IDAKCiAgICAgICAgdGhpcy5kcmFnT2Zmc2V0ID0gewogICAgICAgICAgeDogY2xpZW50WCAtIHJlY3QubGVmdCwKICAgICAgICAgIHk6IGNsaWVudFkgLSByZWN0LnRvcAogICAgICAgIH0KCiAgICAgICAgLy8g6aKE6K6h566X5bm257yT5a2Y5bC65a+477yM6YG/5YWN5ouW5Yqo5pe26YeN5aSN6K6h566XCiAgICAgICAgdGhpcy51cGRhdGVDYWNoZWREaW1lbnNpb25zKCkKCiAgICAgICAgLy8g5LyY5YyW6Kem5pG45LqL5Lu25aSE55CGCiAgICAgICAgaWYgKGV2ZW50LnR5cGUgPT09ICd0b3VjaHN0YXJ0JykgewogICAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2htb3ZlJywgdGhpcy5vbkRyYWcsIHsgcGFzc2l2ZTogZmFsc2UgfSkKICAgICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNoZW5kJywgdGhpcy5zdG9wRHJhZywgeyBwYXNzaXZlOiBmYWxzZSB9KQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCB0aGlzLm9uRHJhZykKICAgICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCB0aGlzLnN0b3BEcmFnKQogICAgICAgIH0KICAgICAgfSwKCiAgICAgIG9uRHJhZyhldmVudCkgewogICAgICAgIGlmICghdGhpcy5pc0RyYWdnaW5nKSByZXR1cm4KCiAgICAgICAgLy8g6Zi75q2i6buY6K6k6KGM5Li677yM5o+Q6auY6Kem5pG45ZON5bqU5oCnCiAgICAgICAgaWYgKGV2ZW50LnR5cGUgPT09ICd0b3VjaG1vdmUnKSB7CiAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpCiAgICAgICAgfQoKICAgICAgICAvLyDkvb/nlKjmm7Tpq5jmlYjnmoToioLmtYHmnLrliLYKICAgICAgICBjb25zdCBub3cgPSBEYXRlLm5vdygpCiAgICAgICAgaWYgKHRoaXMubGFzdERyYWdUaW1lICYmIG5vdyAtIHRoaXMubGFzdERyYWdUaW1lIDwgMTYpIHJldHVybiAvLyA2MGZwc+mZkOWItgogICAgICAgIHRoaXMubGFzdERyYWdUaW1lID0gbm93CiAgICAgICAgCiAgICAgICAgY29uc3QgY2xpZW50WCA9IGV2ZW50LmNsaWVudFggfHwgZXZlbnQudG91Y2hlcz8uWzBdPy5jbGllbnRYIHx8IDAKICAgICAgICBjb25zdCBjbGllbnRZID0gZXZlbnQuY2xpZW50WSB8fCBldmVudC50b3VjaGVzPy5bMF0/LmNsaWVudFkgfHwgMAoKICAgICAgICBjb25zdCBuZXdYID0gY2xpZW50WCAtIHRoaXMuZHJhZ09mZnNldC54CiAgICAgICAgY29uc3QgbmV3WSA9IGNsaWVudFkgLSB0aGlzLmRyYWdPZmZzZXQueQoKICAgICAgICAvLyDkvb/nlKjnvJPlrZjnmoTlsLrlr7jvvIzpgb/lhY3ph43lpI3orqHnrpcKICAgICAgICBjb25zdCBtYXhYID0gd2luZG93LmlubmVyV2lkdGggLSB0aGlzLmNhY2hlZERpbWVuc2lvbnMud2lkdGgKICAgICAgICBjb25zdCBtYXhZID0gd2luZG93LmlubmVySGVpZ2h0IC0gdGhpcy5jYWNoZWREaW1lbnNpb25zLmhlaWdodAoKICAgICAgICB0aGlzLnBvc2l0aW9uID0gewogICAgICAgICAgeDogTWF0aC5tYXgoMCwgTWF0aC5taW4obmV3WCwgbWF4WCkpLAogICAgICAgICAgeTogTWF0aC5tYXgoMCwgTWF0aC5taW4obmV3WSwgbWF4WSkpCiAgICAgICAgfQogICAgICB9LAoKICAgICAgc3RvcERyYWcoKSB7CiAgICAgICAgdGhpcy5pc0RyYWdnaW5nID0gZmFsc2UKICAgICAgICB0aGlzLmlzRHJhZ2dpbmdTdGF0ZSA9IGZhbHNlCgogICAgICAgIC8vIOenu+mZpGRyYWdnaW5n57G777yM5oGi5aSN6L+H5rih5Yqo55S7CiAgICAgICAgdGhpcy4kZWwuY2xhc3NMaXN0LnJlbW92ZSgnZHJhZ2dpbmcnKQoKICAgICAgICAvLyDmuIXnkIbmiYDmnInkuovku7bnm5HlkKzlmagKICAgICAgICB0aGlzLmNsZWFudXBEcmFnTGlzdGVuZXJzKCkKICAgICAgfSwKCiAgICAgIC8vIOaWsOWinu+8muabtOaWsOe8k+WtmOeahOWwuuWvuOS/oeaBrwogICAgICB1cGRhdGVDYWNoZWREaW1lbnNpb25zKCkgewogICAgICAgIGlmICh0aGlzLmlzTWluaW1pemVkKSB7CiAgICAgICAgICB0aGlzLmNhY2hlZERpbWVuc2lvbnMgPSB7IC4uLkRJTUVOU0lPTlMuTUlOSU1JWkVEIH0KICAgICAgICB9IGVsc2UgaWYgKHRoaXMuaXNDb2xsYXBzZWQpIHsKICAgICAgICAgIHRoaXMuY2FjaGVkRGltZW5zaW9ucyA9IHsgLi4uRElNRU5TSU9OUy5DT0xMQVBTRUQgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAvLyDlsZXlvIDnirbmgIHvvIzkvb/nlKjln7rnoYDlsLrlr7gKICAgICAgICAgIHRoaXMuY2FjaGVkRGltZW5zaW9ucyA9IHsgLi4uRElNRU5TSU9OUy5FWFBBTkRFRCB9CiAgICAgICAgfQogICAgICB9LAoKICAgICAgLy8g6I635Y+W57uE5Lu26auY5bqm77yI5LyY5YyW54mI5pys77yJCiAgICAgIGdldENvbXBvbmVudEhlaWdodCgpIHsKICAgICAgICAvLyDlpoLmnpzmraPlnKjmi5bliqjvvIzkvb/nlKjnvJPlrZjnmoTlsLrlr7gKICAgICAgICBpZiAodGhpcy5pc0RyYWdnaW5nU3RhdGUpIHsKICAgICAgICAgIHJldHVybiB0aGlzLmNhY2hlZERpbWVuc2lvbnMuaGVpZ2h0CiAgICAgICAgfQoKICAgICAgICAvLyDmraPluLjnirbmgIHkuIvnmoTorqHnrpcKICAgICAgICBpZiAodGhpcy5pc01pbmltaXplZCkgewogICAgICAgICAgcmV0dXJuIDgwIC8vIOacgOWwj+WMlueKtuaAgemrmOW6pgogICAgICAgIH0gZWxzZSBpZiAodGhpcy5pc0NvbGxhcHNlZCkgewogICAgICAgICAgcmV0dXJuIDEyMCAvLyDmlLbnvKnnirbmgIHpq5jluqYKICAgICAgICB9IGVsc2UgewogICAgICAgICAgLy8g5bGV5byA54q25oCB77yM5qC55o2u5YaF5a656Ieq6YCC5bqUCiAgICAgICAgICBjb25zdCBiYXNlSGVpZ2h0ID0gNDAwIC8vIOWfuuehgOmrmOW6pgogICAgICAgICAgY29uc3QgbG9nSGVpZ2h0ID0gdGhpcy5kaXNwbGF5TG9ncy5sZW5ndGggPiAwID8gNjAgOiA0MAogICAgICAgICAgY29uc3QgYWRqdXN0bWVudEhlaWdodCA9IHRoaXMubmVlZHNBemltdXRoQWRqdXN0bWVudCB8fCB0aGlzLm5lZWRzQWx0aXR1ZGVBZGp1c3RtZW50ID8gMTIwIDogODAKICAgICAgICAgIHJldHVybiBNYXRoLm1pbihiYXNlSGVpZ2h0ICsgbG9nSGVpZ2h0ICsgYWRqdXN0bWVudEhlaWdodCwgd2luZG93LmlubmVySGVpZ2h0ICogMC44KQogICAgICAgIH0KICAgICAgfSwKCiAgICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KICAgICAgLy8g55WM6Z2i54q25oCB5o6n5Yi25pa55rOVCiAgICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KICAgICAgdG9nZ2xlTWluaW1pemUoKSB7CiAgICAgICAgdGhpcy5pc01pbmltaXplZCA9ICF0aGlzLmlzTWluaW1pemVkCiAgICAgICAgdGhpcy5pc0NvbGxhcHNlZCA9IGZhbHNlCiAgICAgICAgLy8g5pu05paw57yT5a2Y55qE5bC65a+45L+h5oGvCiAgICAgICAgdGhpcy51cGRhdGVDYWNoZWREaW1lbnNpb25zKCkKICAgICAgICB0aGlzLmFkZExvZyh0aGlzLmlzTWluaW1pemVkID8gdGhpcy4kdCgnSW50ZXJmYWNlIE1pbmltaXplZCcpIDogdGhpcy4kdCgnSW50ZXJmYWNlIEV4cGFuZGVkJyksICdpbmZvJykKICAgICAgfSwKCiAgICAgIHRvZ2dsZUNvbGxhcHNlKCkgewogICAgICAgIHRoaXMuaXNDb2xsYXBzZWQgPSAhdGhpcy5pc0NvbGxhcHNlZAogICAgICAgIC8vIOabtOaWsOe8k+WtmOeahOWwuuWvuOS/oeaBrwogICAgICAgIHRoaXMudXBkYXRlQ2FjaGVkRGltZW5zaW9ucygpCiAgICAgICAgdGhpcy5hZGRMb2codGhpcy5pc0NvbGxhcHNlZCA/IHRoaXMuJHQoJ0ludGVyZmFjZSBDb2xsYXBzZWQnKSA6IHRoaXMuJHQoJ0ludGVyZmFjZSBFeHBhbmRlZCcpLCAnaW5mbycpCiAgICAgIH0sCgogICAgICByZXNldENhbGlicmF0aW9uKCkgewogICAgICAgIC8vIOS9v+eUqOe7n+S4gOeahOWGheWtmOa4heeQhuaWueazlQogICAgICAgIHRoaXMuY2xlYXJDYWNoZWREYXRhKCkKCiAgICAgICAgdGhpcy5hZGRMb2codGhpcy4kdCgnQ2FsaWJyYXRpb24gRGF0YSBSZXNldCcpLCAnaW5mbycpCiAgICAgICAgdGhpcy4kYnVzLiRlbWl0KCdBcHBTZW5kTWVzc2FnZScsICdWdWVfQ29tbWFuZCcsICdSZXNldEF1dG9Qb2xhckFsaWdubWVudCcpCiAgICAgICAgdGhpcy4kYnVzLiRlbWl0KCdDbGVhckNhbGlicmF0aW9uUG9pbnRzJykKICAgICAgICB0aGlzLiRidXMuJGVtaXQoJ0NsZWFyU3RhdHVzVGV4dEZyb21TdGFyTWFwJykKICAgICAgfSwKCiAgICAgIHJlc3RvcmVDYWxpYnJhdGlvbigpIHsKICAgICAgICB0aGlzLmFkZExvZyh0aGlzLiR0KCdDYWxpYnJhdGlvbiBEYXRhIFJlc3RvcmVkJyksICdzdWNjZXNzJykKICAgICAgICB0aGlzLiRidXMuJGVtaXQoJ0FwcFNlbmRNZXNzYWdlJywgJ1Z1ZV9Db21tYW5kJywgJ1Jlc3RvcmVBdXRvUG9sYXJBbGlnbm1lbnQnKQogICAgICB9LAoKICAgICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQogICAgICAvLyDmoKHlh4bmjqfliLbmlrnms5UKICAgICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQogICAgICBzdGFydEF1dG9DYWxpYnJhdGlvbigpIHsKICAgICAgICBpZiAoIXRoaXMuaXNDb25uZWN0ZWQpIHsKICAgICAgICAgIHRoaXMuYWRkTG9nKHRoaXMuJHQoJ0Vycm9yOiBNb3VudCBOb3QgQ29ubmVjdGVkJyksICdlcnJvcicpCiAgICAgICAgICByZXR1cm4KICAgICAgICB9CiAgICAgICAgaWYgKHRoaXMuaXNDYWxpYnJhdGlvblJ1bm5pbmcpIHsKICAgICAgICAgIHRoaXMuc3RvcEF1dG9DYWxpYnJhdGlvbigpCiAgICAgICAgICByZXR1cm4KICAgICAgICB9CiAgICAgICAgdGhpcy5pc0NhbGlicmF0aW9uUnVubmluZyA9IHRydWUKICAgICAgICB0aGlzLnJlc2V0Q2FsaWJyYXRpb24oKQogICAgICAgIHRoaXMuYWRkTG9nKHRoaXMuJHQoJ1N0YXJ0aW5nIEF1dG8gQ2FsaWJyYXRpb24nKSwgJ2luZm8nKQogICAgICAgIHRoaXMuJGJ1cy4kZW1pdCgnQXBwU2VuZE1lc3NhZ2UnLCAnVnVlX0NvbW1hbmQnLCAnU3RhcnRBdXRvUG9sYXJBbGlnbm1lbnQnKQogICAgICB9LAoKICAgICAgc3RvcEF1dG9DYWxpYnJhdGlvbigpIHsKICAgICAgICB0aGlzLmlzQ2FsaWJyYXRpb25SdW5uaW5nID0gZmFsc2UKICAgICAgICB0aGlzLmFkZExvZyh0aGlzLiR0KCdBdXRvIENhbGlicmF0aW9uIFN0b3BwZWQnKSwgJ3dhcm5pbmcnKQogICAgICAgIHRoaXMuJGJ1cy4kZW1pdCgnQXBwU2VuZE1lc3NhZ2UnLCAnVnVlX0NvbW1hbmQnLCAnU3RvcEF1dG9Qb2xhckFsaWdubWVudCcpCiAgICAgIH0sCiAgICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KICAgICAgLy8g6KeG5Zy65pWw5o2u5aSE55CG5pa55rOVCiAgICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KICAgICAgdXBkYXRlRmllbGREYXRhKGRhdGEpIHsKICAgICAgICBpZiAoZGF0YSAmJiBBcnJheS5pc0FycmF5KGRhdGEpICYmIGRhdGEubGVuZ3RoID49IDEyKSB7IC8vIOS/ruaUuemVv+W6puajgOafpe+8jOehruS/neWMheWQq+WBh+aegei9tOaVsOaNrgogICAgICAgICAgY29uc3QgaXNWYWxpZERhdGEgPSBkYXRhLmV2ZXJ5KHZhbCA9PiB0eXBlb2YgdmFsID09PSAnbnVtYmVyJyAmJiAhaXNOYU4odmFsKSkKICAgICAgICAgIGlmICghaXNWYWxpZERhdGEpIHsKICAgICAgICAgICAgdGhpcy5hZGRMb2codGhpcy4kdCgnV2FybmluZzogSW52YWxpZCBGaWVsZCBEYXRhIFJlY2VpdmVkJyksICd3YXJuaW5nJykKICAgICAgICAgICAgcmV0dXJuCiAgICAgICAgICB9CgogICAgICAgICAgdGhpcy5maWVsZERhdGEgPSB7CiAgICAgICAgICAgIHJhOiBkYXRhWzBdLAogICAgICAgICAgICBkZWM6IGRhdGFbMV0sCiAgICAgICAgICAgIHJhMDogZGF0YVsyXSwKICAgICAgICAgICAgZGVjMDogZGF0YVszXSwKICAgICAgICAgICAgcmExOiBkYXRhWzRdLAogICAgICAgICAgICBkZWMxOiBkYXRhWzVdLAogICAgICAgICAgICByYTI6IGRhdGFbNl0sCiAgICAgICAgICAgIGRlYzI6IGRhdGFbN10sCiAgICAgICAgICAgIHJhMzogZGF0YVs4XSwKICAgICAgICAgICAgZGVjMzogZGF0YVs5XSwKICAgICAgICAgICAgdGFyZ2V0cmE6IGRhdGFbMTBdLAogICAgICAgICAgICB0YXJnZXRkZWM6IGRhdGFbMTFdLAogICAgICAgICAgICBmYWtlUG9sYXJSQTogZGF0YVsxMl0sCiAgICAgICAgICAgIGZha2VQb2xhckRFQzogZGF0YVsxM10sCiAgICAgICAgICAgIHJlYWxQb2xhclJBOiBkYXRhWzE0XSwKICAgICAgICAgICAgcmVhbFBvbGFyREVDOiBkYXRhWzE1XQogICAgICAgICAgfQoKICAgICAgICAgIC8vIOS/neWtmOS4iuS4gOasoeS9jee9ru+8iOWcqOabtOaWsOW9k+WJjeS9jee9ruS5i+WJje+8iQogICAgICAgICAgaWYgKHRoaXMuY3VycmVudFBvc2l0aW9uLnJhICE9PSAnMDBoIDAwbSAwMHMnKSB7CiAgICAgICAgICAgIHRoaXMucHJldmlvdXNQb3NpdGlvbiA9IHsgLi4udGhpcy5jdXJyZW50UG9zaXRpb24gfQogICAgICAgICAgfQoKICAgICAgICAgIC8vIOabtOaWsOW9k+WJjeS9jee9rgogICAgICAgICAgdGhpcy5jdXJyZW50UG9zaXRpb24gPSB7CiAgICAgICAgICAgIHJhOiB0aGlzLmZvcm1hdENvb3JkaW5hdGUoZGF0YVswXSwgJ3JhJyksCiAgICAgICAgICAgIGRlYzogdGhpcy5mb3JtYXRDb29yZGluYXRlKGRhdGFbMV0sICdkZWMnKQogICAgICAgICAgfQoKICAgICAgICAgIGlmIChkYXRhWzEwXSA9PT0gLTEgJiYgZGF0YVsxMV0gPT09IC0xKSB7CiAgICAgICAgICAgIC8vIOagoeWHhueCueaUtumbhumYtuautQogICAgICAgICAgICB0aGlzLmNhbGlicmF0aW9uUGhhc2UgPSAnY29sbGVjdGluZycKICAgICAgICAgICAgY29uc3QgcG9pbnROdW1iZXIgPSB0aGlzLmNhbGlicmF0aW9uUG9pbnRzLmxlbmd0aCArIDEKCiAgICAgICAgICAgIC8vIOa3u+WKoOiwg+ivleS/oeaBrwogICAgICAgICAgICB0aGlzLmFkZExvZyhg5YeG5aSH5pS26ZuG5qCh5YeG54K5JHtwb2ludE51bWJlcn3vvIzlvZPliY3lt7LmnIkke3RoaXMuY2FsaWJyYXRpb25Qb2ludHMubGVuZ3RofeS4queCuWAsICdpbmZvJykKCiAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgdGhpcy5kcmF3Q2FsaWJyYXRpb25Qb2ludFBvbHlnb24oZGF0YVswXSwgZGF0YVsxXSwgcG9pbnROdW1iZXIsIHRoaXMuZmllbGREYXRhKQogICAgICAgICAgICAgIHRoaXMuYWRkTG9nKHRoaXMuJHQoJ0NhbGlicmF0aW9uIFBvaW50JywgW3BvaW50TnVtYmVyLCBkYXRhWzBdLnRvRml4ZWQoNCksIGRhdGFbMV0udG9GaXhlZCg0KV0pLCAnaW5mbycpCgogICAgICAgICAgICAgIC8vIOS/neWtmOagoeWHhueCuSAtIOmZkOWItuacgOWkp+aVsOmHjwogICAgICAgICAgICAgIGlmICh0aGlzLmNhbGlicmF0aW9uUG9pbnRzLmxlbmd0aCA8IHRoaXMubWF4Q2FsaWJyYXRpb25Qb2ludHMpIHsKICAgICAgICAgICAgICAgIHRoaXMuY2FsaWJyYXRpb25Qb2ludHMucHVzaCh7CiAgICAgICAgICAgICAgICAgIHJhOiBkYXRhWzBdLAogICAgICAgICAgICAgICAgICBkZWM6IGRhdGFbMV0sCiAgICAgICAgICAgICAgICAgIGluZGV4OiBwb2ludE51bWJlcgogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgLy8g5aaC5p6c6LaF6L+H5pyA5aSn5pWw6YeP77yM5pu/5o2i5pyA5pen55qE54K5CiAgICAgICAgICAgICAgICBjb25zdCBvbGRlc3RJbmRleCA9IChwb2ludE51bWJlciAtIDEpICUgdGhpcy5tYXhDYWxpYnJhdGlvblBvaW50cwogICAgICAgICAgICAgICAgdGhpcy5jYWxpYnJhdGlvblBvaW50c1tvbGRlc3RJbmRleF0gPSB7CiAgICAgICAgICAgICAgICAgIHJhOiBkYXRhWzBdLAogICAgICAgICAgICAgICAgICBkZWM6IGRhdGFbMV0sCiAgICAgICAgICAgICAgICAgIGluZGV4OiBwb2ludE51bWJlcgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgdGhpcy5hZGRMb2coYOagoeWHhueCuSR7cG9pbnROdW1iZXJ95bey5re75Yqg77yM546w5Zyo5oC75YWx5pyJJHt0aGlzLmNhbGlicmF0aW9uUG9pbnRzLmxlbmd0aH3kuKrngrlgLCAnaW5mbycpCgogICAgICAgICAgICAgIC8vIOWmguaenOaUtumbhuS6hjPkuKrngrnvvIzov5vlhaXosIPmlbTpmLbmrrUKICAgICAgICAgICAgICBpZiAodGhpcy5jYWxpYnJhdGlvblBvaW50cy5sZW5ndGggPT09IHRoaXMubWF4Q2FsaWJyYXRpb25Qb2ludHMpIHsKICAgICAgICAgICAgICAgIHRoaXMuY2FsaWJyYXRpb25QaGFzZSA9ICdhZGp1c3RpbmcnCiAgICAgICAgICAgICAgICB0aGlzLmFkZExvZyh0aGlzLiR0KCdUaHJlZSBjYWxpYnJhdGlvbiBwb2ludHMgY29sbGVjdGVkLCBlbnRlcmluZyBhZGp1c3RtZW50IHBoYXNlJyksICdzdWNjZXNzJykKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgICAgICAgdGhpcy5hZGRMb2codGhpcy4kdCgnRXJyb3IgcHJvY2Vzc2luZyBjYWxpYnJhdGlvbiBwb2ludCcsIFtlcnJvci5tZXNzYWdlXSksICdlcnJvcicpCiAgICAgICAgICAgICAgY29uc29sZS5lcnJvcign5aSE55CG5qCh5YeG54K56ZSZ6K+v77yaJywgZXJyb3IpCiAgICAgICAgICAgIH0KICAgICAgICAgIH0gZWxzZSBpZiAoZGF0YVsxMF0gIT09IC0xICYmIGRhdGFbMTFdICE9PSAtMSkgewogICAgICAgICAgICAvLyDosIPmlbTpmLbmrrXvvJrmmL7npLrnm67moIfkvY3nva7lkozlgYfmnoHovbQKICAgICAgICAgICAgdGhpcy5jYWxpYnJhdGlvblBoYXNlID0gJ2FkanVzdGluZycKICAgICAgICAgICAgdGhpcy50YXJnZXRQb2ludCA9IHsgcmE6IGRhdGFbMTBdLCBkZWM6IGRhdGFbMTFdIH0KCiAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgLy8g5YWI5riF6Zmk5omA5pyJ5LmL5YmN55qE5YWD57SgCiAgICAgICAgICAgICAgdGhpcy5hZGRMb2coJ+iwg+aVtOaooeW8j++8muWHhuWkh+a4hemZpOS5i+WJjeeahOagoeWHhuWFg+e0oCcsICdpbmZvJykKICAgICAgICAgICAgICB0aGlzLiRidXMuJGVtaXQoJ0NsZWFyQ2FsaWJyYXRpb25Qb2ludHMnKQogICAgICAgICAgICAgIHRoaXMuYWRkTG9nKCfosIPmlbTmqKHlvI/vvJrmuIXpmaTlkb3ku6Tlt7Llj5HpgIEnLCAnaW5mbycpCgogICAgICAgICAgICAgIC8vIOe7mOWItuagoeWHhueCue+8iOWmguaenOW3suaUtumbhjPkuKrngrnvvIkKICAgICAgICAgICAgICBpZiAodGhpcy5jYWxpYnJhdGlvblBvaW50cy5sZW5ndGggPT09IHRoaXMubWF4Q2FsaWJyYXRpb25Qb2ludHMpIHsKICAgICAgICAgICAgICAgIHRoaXMuY2FsaWJyYXRpb25Qb2ludHMuZm9yRWFjaCgocG9pbnQsIGluZGV4KSA9PiB7CiAgICAgICAgICAgICAgICAgIGNvbnN0IHBvaW50Q29vcmRpbmF0ZXMgPSB0aGlzLmNhbGN1bGF0ZUZpZWxkQ29ybmVycyhwb2ludC5yYSwgcG9pbnQuZGVjLCB0aGlzLmZpZWxkRGF0YSwgZmFsc2UpCiAgICAgICAgICAgICAgICAgIGNvbnN0IHBvaW50Q29sb3IgPSB7CiAgICAgICAgICAgICAgICAgICAgc3Ryb2tlOiAiI0ZGRDcwMCIsICAgICAgICAvLyDph5HoibLovrnmoYbvvJrmoKHlh4bngrkKICAgICAgICAgICAgICAgICAgICBzdHJva2VPcGFjaXR5OiAxLCAgICAgICAgIC8vIOi+ueahhuS4jemAj+aYjuW6pgogICAgICAgICAgICAgICAgICAgIGZpbGw6ICIjRkZENzAwIiwgICAgICAgICAgLy8g6YeR6Imy5aGr5YWF77ya5qCh5YeG54K5CiAgICAgICAgICAgICAgICAgICAgZmlsbE9wYWNpdHk6IDAuMyAgICAgICAgICAvLyDloavlhYXkuI3pgI/mmI7luqbvvIjljYrpgI/mmI7vvIkKICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgdGhpcy4kYnVzLiRlbWl0KCdEcmF3Q2FsaWJyYXRpb25Qb2ludFBvbHlnb24nLCBwb2ludENvb3JkaW5hdGVzLCBwb2ludENvbG9yLAogICAgICAgICAgICAgICAgICAgIGBDYWxpYnJhdGlvbl9Qb2ludF8ke2luZGV4ICsgMX1gLCBg5qCh5YeG54K5JHtpbmRleCArIDF9YCwgIiNGRkQ3MDAiKQogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIC8vIOe7mOWItuW9k+WJjeS9jee9ru+8iOiTneiJsu+8iQogICAgICAgICAgICAgIGNvbnN0IGN1cnJlbnRDb29yZGluYXRlcyA9IHRoaXMuY2FsY3VsYXRlRmllbGRDb3JuZXJzKGRhdGFbMF0sIGRhdGFbMV0sIHRoaXMuZmllbGREYXRhLCBmYWxzZSkKICAgICAgICAgICAgICBjb25zdCBjdXJyZW50Q29sb3IgPSB7CiAgICAgICAgICAgICAgICBzdHJva2U6ICIjMDBCRkZGIiwgICAgICAgIC8vIOiTneiJsui+ueahhu+8muW9k+WJjeS9jee9rgogICAgICAgICAgICAgICAgc3Ryb2tlT3BhY2l0eTogMSwgICAgICAgICAvLyDovrnmoYbkuI3pgI/mmI7luqYKICAgICAgICAgICAgICAgIGZpbGw6ICIjMDBCRkZGIiwgICAgICAgICAgLy8g6JOd6Imy5aGr5YWF77ya5b2T5YmN5L2N572uCiAgICAgICAgICAgICAgICBmaWxsT3BhY2l0eTogMC4zICAgICAgICAgIC8vIOWhq+WFheS4jemAj+aYjuW6pu+8iOWNiumAj+aYju+8iQogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgdGhpcy4kYnVzLiRlbWl0KCdEcmF3Q2FsaWJyYXRpb25Qb2ludFBvbHlnb24nLCBjdXJyZW50Q29vcmRpbmF0ZXMsIGN1cnJlbnRDb2xvciwKICAgICAgICAgICAgICAgICdDdXJyZW50X1Bvc2l0aW9uJywgJ+W9k+WJjeS9jee9ricsICIjMDBCRkZGIikKCiAgICAgICAgICAgICAgLy8g57uY5Yi255uu5qCH54K577yI57u/6Imy5ZyG5b2i77yJCiAgICAgICAgICAgICAgY29uc3QgdGFyZ2V0Q29sb3IgPSB7CiAgICAgICAgICAgICAgICBzdHJva2U6ICIjNENBRjUwIiwgICAgICAgIC8vIOe7v+iJsui+ueahhu+8muebruagh+eCuQogICAgICAgICAgICAgICAgc3Ryb2tlT3BhY2l0eTogMSwgICAgICAgICAvLyDovrnmoYbkuI3pgI/mmI7luqYKICAgICAgICAgICAgICAgIGZpbGw6ICIjNENBRjUwIiwgICAgICAgICAgLy8g57u/6Imy5aGr5YWF77ya55uu5qCH54K5CiAgICAgICAgICAgICAgICBmaWxsT3BhY2l0eTogMC4zICAgICAgICAgIC8vIOWhq+WFheS4jemAj+aYjuW6pu+8iOWNiumAj+aYju+8iQogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgY29uc3QgeyBheiwgYWx0IH0gPSB0aGlzLmVxdWF0b3JpYWxUb0hvcml6b250YWwoZGF0YVsxMF0sIGRhdGFbMTFdLCBuZXcgRGF0ZShEYXRlLm5vdygpKSwgdGhpcy4kc3RvcmUuc3RhdGUuY3VycmVudExvY2F0aW9uLmxhdCwgdGhpcy4kc3RvcmUuc3RhdGUuY3VycmVudExvY2F0aW9uLmxuZykKICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZygn5b2T5YmN5L2N572u55uu5qCH54K5JywgZGF0YVs2XSwgZGF0YVs3XSArICcg6L2s5YyW5Li65Zyw5bmz5Z2Q5qCH5Li6JyArIGF6ICsgJyAnICsgYWx0KTsKICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZygn5L2/55So5pe26Ze05ZKM5Zyw54K5JywgbmV3IERhdGUoRGF0ZS5ub3coKSksICRzdG9yZS5zdGF0ZS5jdXJyZW50TG9jYXRpb24ubGF0LCAkc3RvcmUuc3RhdGUuY3VycmVudExvY2F0aW9uLmxuZyk7CgogICAgICAgICAgICAgIHRoaXMuJGJ1cy4kZW1pdCgnRHJhd1RhcmdldFBvaW50Q2lyY2xlJywKICAgICAgICAgICAgICAgIGF6LAogICAgICAgICAgICAgICAgYWx0LAogICAgICAgICAgICAgICAgdGFyZ2V0Q29sb3IsCiAgICAgICAgICAgICAgICAnVGFyZ2V0X1BvaW50JywKICAgICAgICAgICAgICAgICfnm67moIfngrknCiAgICAgICAgICAgICAgKQoKICAgICAgICAgICAgICAvLyDnu5jliLblgYfmnoHovbTvvIjntKvoibLlnIblvaLvvIkKICAgICAgICAgICAgICBpZiAoZGF0YVsxMl0gIT09IC0xICYmIGRhdGFbMTNdICE9PSAtMSAmJiAhaXNOYU4oZGF0YVsxMl0pICYmICFpc05hTihkYXRhWzEzXSkpIHsKICAgICAgICAgICAgICAgIGNvbnN0IHsgYXosIGFsdCB9ID0gdGhpcy5lcXVhdG9yaWFsVG9Ib3Jpem9udGFsKGRhdGFbMTJdLCBkYXRhWzEzXSwgbmV3IERhdGUoRGF0ZS5ub3coKSksIHRoaXMuJHN0b3JlLnN0YXRlLmN1cnJlbnRMb2NhdGlvbi5sYXQsIHRoaXMuJHN0b3JlLnN0YXRlLmN1cnJlbnRMb2NhdGlvbi5sbmcpCiAgICAgICAgICAgICAgICB0aGlzLmRyYXdGYWtlUG9sYXJBeGlzKGF6LCBhbHQpCiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICB0aGlzLmFkZExvZyhg6LCD5pW05qih5byP77ya5b2T5YmN5L2N572uKCR7ZGF0YVswXS50b0ZpeGVkKDQpfSwgJHtkYXRhWzFdLnRvRml4ZWQoNCl9KSDnm67moIfkvY3nva4oJHtkYXRhWzZdLnRvRml4ZWQoNCl9LCAke2RhdGFbN10udG9GaXhlZCg0KX0pIOWBh+aegei9tCgke2RhdGFbOF0udG9GaXhlZCg0KX0sICR7ZGF0YVs5XS50b0ZpeGVkKDQpfSlgLCAnaW5mbycpCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgICAgICAgdGhpcy5hZGRMb2codGhpcy4kdCgnRXJyb3IgcHJvY2Vzc2luZyBhZGp1c3RtZW50IGRhdGEnLCBbZXJyb3IubWVzc2FnZV0pLCAnZXJyb3InKQogICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ+WkhOeQhuiwg+aVtOaVsOaNrumUmeivr++8micsIGVycm9yKQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRoaXMuYWRkTG9nKHRoaXMuJHQoJ0Vycm9yOiBJbnZhbGlkIEZpZWxkIERhdGEgRm9ybWF0JyksICdlcnJvcicpCiAgICAgICAgfQogICAgICB9LAoKICAgICAgLy8g57uY5Yi25qCh5YeG54K5CiAgICAgIGRyYXdDYWxpYnJhdGlvblBvaW50UG9seWdvbihyYSwgZGVjLCBwb2ludE51bWJlciwgZmllbGREYXRhKSB7CiAgICAgICAgdGhpcy5hZGRMb2codGhpcy4kdCgnRHJhd2luZyBDYWxpYnJhdGlvbiBQb2ludCcsIFtwb2ludE51bWJlciwgcmEsIGRlY10pLCAnaW5mbycpCgogICAgICAgIHRyeSB7CiAgICAgICAgICBjb25zdCBjb29yZGluYXRlcyA9IHRoaXMuY2FsY3VsYXRlRmllbGRDb3JuZXJzKHJhLCBkZWMsIGZpZWxkRGF0YSkKICAgICAgICAgIHRoaXMuYWRkTG9nKHRoaXMuJHQoJ0NhbGN1bGF0ZWQgRmllbGQgQ29ybmVyIENvb3JkaW5hdGVzJywgW0pTT04uc3RyaW5naWZ5KGNvb3JkaW5hdGVzKV0pLCAnaW5mbycpCgogICAgICAgICAgLy8g6aqM6K+B5Z2Q5qCH5pyJ5pWI5oCnCiAgICAgICAgICBjb25zdCB2YWxpZENvb3JkaW5hdGVzID0gY29vcmRpbmF0ZXMuZXZlcnkoKGNvb3JkLCBpbmRleCkgPT4gewogICAgICAgICAgICBjb25zdCBpc1ZhbGlkID0gY29vcmQgJiYgdHlwZW9mIGNvb3JkLnJhID09PSAnbnVtYmVyJyAmJiB0eXBlb2YgY29vcmQuZGVjID09PSAnbnVtYmVyJyAmJgogICAgICAgICAgICAgICFpc05hTihjb29yZC5yYSkgJiYgIWlzTmFOKGNvb3JkLmRlYykgJiYgaXNGaW5pdGUoY29vcmQucmEpICYmIGlzRmluaXRlKGNvb3JkLmRlYykKICAgICAgICAgICAgaWYgKCFpc1ZhbGlkKSB7CiAgICAgICAgICAgICAgdGhpcy5hZGRMb2codGhpcy4kdCgnV2FybmluZzogSW52YWxpZCBDb29yZGluYXRlIFBvaW50JywgW2luZGV4LCBKU09OLnN0cmluZ2lmeShjb29yZCldKSwgJ3dhcm5pbmcnKQogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiBpc1ZhbGlkCiAgICAgICAgICB9KQoKICAgICAgICAgIGlmICghdmFsaWRDb29yZGluYXRlcykgewogICAgICAgICAgICB0aGlzLmFkZExvZyh0aGlzLiR0KCdJbnZhbGlkIEZpZWxkIENvb3JkaW5hdGVzJyksICdlcnJvcicpCiAgICAgICAgICAgIHJldHVybgogICAgICAgICAgfQoKICAgICAgICAgIGNvbnN0IGNvbG9yID0gdGhpcy5nZXRDYWxpYnJhdGlvblBvaW50Q29sb3IoKQoKICAgICAgICAgIC8vIOa3u+WKoOaWh+acrOagh+etvgogICAgICAgICAgY29uc3QgbGFiZWwgPSBg5qCh5YeG54K5JHtwb2ludE51bWJlcn1gCiAgICAgICAgICBjb25zdCBsYWJlbENvbG9yID0gIiNGRkZGRkYiCgogICAgICAgICAgdGhpcy5hZGRMb2codGhpcy4kdCgnU2VuZGluZyBEcmF3IENhbGlicmF0aW9uIEV2ZW50JywgW3BvaW50TnVtYmVyXSksICdpbmZvJykKICAgICAgICAgIHRoaXMuJGJ1cy4kZW1pdCgnRHJhd0NhbGlicmF0aW9uUG9pbnRQb2x5Z29uJywgY29vcmRpbmF0ZXMsIGNvbG9yLCBgQ2FsaWJyYXRpb25fJHtwb2ludE51bWJlcn1gLCBsYWJlbCwgbGFiZWxDb2xvcikKCiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICAgIHRoaXMuYWRkTG9nKHRoaXMuJHQoJ0Vycm9yIERyYXdpbmcgQ2FsaWJyYXRpb24gUG9pbnQnLCBbZXJyb3IubWVzc2FnZV0pLCAnZXJyb3InKQogICAgICAgICAgY29uc29sZS5lcnJvcign57uY5Yi25qCh5YeG54K56ZSZ6K+v77yaJywgZXJyb3IpCiAgICAgICAgfQogICAgICB9LAoKICAgICAgLy8g5riF6Zmk5omA5pyJ5qCh5YeG54K5CiAgICAgIGNsZWFyQ2FsaWJyYXRpb25Qb2ludHMoKSB7CiAgICAgICAgdGhpcy5hZGRMb2codGhpcy4kdCgnQ2xlYXJpbmcgQWxsIENhbGlicmF0aW9uIFBvaW50cycpLCAnaW5mbycpCiAgICAgICAgdGhpcy4kYnVzLiRlbWl0KCdDbGVhckNhbGlicmF0aW9uUG9pbnRzJykKICAgICAgICB0aGlzLiRidXMuJGVtaXQoJ0NsZWFyU3RhdHVzVGV4dEZyb21TdGFyTWFwJykKICAgICAgfSwKCiAgICAgIC8qKgogICAgICAgKiDnu5jliLbmnoHovbTmoKHlh4bosIPmlbTngrkKICAgICAgICog5Zyo5pif5Zu+5LiK57uY5Yi25b2T5YmN5L2N572u44CB55uu5qCH5L2N572u44CB5qCh5YeG54K5562J5YWz6ZSu5L2N572u5qCH6K6wCiAgICAgICAqIEBwYXJhbSB7bnVtYmVyfSBjdXJyZW50UmEgLSDlvZPliY3otaTnu4/kvY3nva4KICAgICAgICogQHBhcmFtIHtudW1iZXJ9IGN1cnJlbnREZWMgLSDlvZPliY3otaTnuqzkvY3nva4gIAogICAgICAgKiBAcGFyYW0ge251bWJlcn0gdGFyZ2V0UmEgLSDnm67moIfotaTnu4/kvY3nva4KICAgICAgICogQHBhcmFtIHtudW1iZXJ9IHRhcmdldERlYyAtIOebruagh+i1pOe6rOS9jee9rgogICAgICAgKiBAcGFyYW0ge29iamVjdH0gZmllbGREYXRhIC0g6KeG5Zy65pWw5o2u77yI5YyF5ZCr6KeG5Zy66L6555WM5L+h5oGv77yJCiAgICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gaXNUaW1lclVwZGF0ZSAtIOaYr+WQpuS4uuWumuaXtuWZqOabtOaWsO+8iOeUqOS6juWMuuWIhuaJi+WKqOabtOaWsOWSjOiHquWKqOabtOaWsO+8iQogICAgICAgKi8KICAgICAgZHJhd0FkanVzdG1lbnRQb2ludHMoY3VycmVudFJhLCBjdXJyZW50RGVjLCB0YXJnZXRSYSwgdGFyZ2V0RGVjLCBmaWVsZERhdGEsIGlzVGltZXJVcGRhdGUgPSBmYWxzZSkgewogICAgICAgIC8vIOi/meS4quaWueazleeOsOWcqOS4u+imgeeUqOS6juagoeWHhueCueaUtumbhumYtuautQogICAgICAgIC8vIOiwg+aVtOmYtuauteeahOe7mOWItumAu+i+keW3sue7j+enu+WIsHVwZGF0ZUZpZWxkRGF0YeaWueazleS4rQoKICAgICAgICB0aGlzLmFkZExvZyh0aGlzLiR0KCdTdGFydGluZyBEcmF3IEFkanVzdG1lbnQgUG9pbnRzJywgW2N1cnJlbnRSYSwgY3VycmVudERlYywgdGFyZ2V0UmEsIHRhcmdldERlY10pLCAnaW5mbycpCgogICAgICAgIHRyeSB7CiAgICAgICAgICAvLyDlj6rlnKjmoKHlh4bngrnmlLbpm4bpmLbmrrXkvb/nlKjov5nkuKrmlrnms5UKICAgICAgICAgIGlmICh0aGlzLmNhbGlicmF0aW9uUGhhc2UgPT09ICdjb2xsZWN0aW5nJykgewogICAgICAgICAgICAvLyDnu5jliLbmoKHlh4bngrnmlLbpm4bpmLbmrrXnmoTpgLvovpEKICAgICAgICAgICAgY29uc3QgY3VycmVudENvb3JkaW5hdGVzID0gdGhpcy5jYWxjdWxhdGVGaWVsZENvcm5lcnMoY3VycmVudFJhLCBjdXJyZW50RGVjLCBmaWVsZERhdGEsIGZhbHNlKQogICAgICAgICAgICBjb25zdCBjdXJyZW50Q29sb3IgPSB7CiAgICAgICAgICAgICAgc3Ryb2tlOiAiIzAwQkZGRiIsICAgICAgICAvLyDok53oibLovrnmoYbvvJrlvZPliY3kvY3nva4KICAgICAgICAgICAgICBzdHJva2VPcGFjaXR5OiAxLCAgICAgICAgIC8vIOi+ueahhuS4jemAj+aYjuW6pgogICAgICAgICAgICAgIGZpbGw6ICIjMDBCRkZGIiwgICAgICAgICAgLy8g6JOd6Imy5aGr5YWF77ya5b2T5YmN5L2N572uCiAgICAgICAgICAgICAgZmlsbE9wYWNpdHk6IDAuMyAgICAgICAgICAvLyDloavlhYXkuI3pgI/mmI7luqbvvIjljYrpgI/mmI7vvIkKICAgICAgICAgICAgfQoKICAgICAgICAgICAgdGhpcy4kYnVzLiRlbWl0KCdEcmF3Q2FsaWJyYXRpb25Qb2ludFBvbHlnb24nLCBjdXJyZW50Q29vcmRpbmF0ZXMsIGN1cnJlbnRDb2xvciwKICAgICAgICAgICAgICAnQ3VycmVudF9Qb3NpdGlvbicsICflvZPliY3kvY3nva4nLCAiIzAwQkZGRiIpCiAgICAgICAgICB9CgogICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgICB0aGlzLmFkZExvZyh0aGlzLiR0KCdFcnJvciBEcmF3aW5nIEFkanVzdG1lbnQgUG9pbnRzJywgW2Vycm9yLm1lc3NhZ2VdKSwgJ2Vycm9yJykKICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ+e7mOWItuiwg+aVtOeCuemUmeivr++8micsIGVycm9yKQogICAgICAgIH0KICAgICAgfSwKCiAgICAgIC8qKgogICAgICAgKiDorqHnrpfop4blnLrnmoTkupTkuKrop5LngrnlnZDmoIcKICAgICAgICogQHBhcmFtIHtudW1iZXJ9IGNlbnRlclJhIC0g6KeG5Zy65Lit5b+D55qE6LWk57uP5Z2Q5qCHCiAgICAgICAqIEBwYXJhbSB7bnVtYmVyfSBjZW50ZXJEZWMgLSDop4blnLrkuK3lv4PnmoTotaTnuqzlnZDmoIcKICAgICAgICogQHBhcmFtIHtvYmplY3R9IGZpZWxkRGF0YSAtIOinhuWcuuaVsOaNru+8iOWMheWQq+inhuWcuui+ueeVjOS/oeaBr++8iQogICAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IHVzZURlZmF1bHRTaXplIC0g5piv5ZCm5L2/55So6buY6K6k6KeG5Zy65aSn5bCP77yI55So5LqO55uu5qCH54K5562J5Zu65a6a5L2N572u77yJCiAgICAgICAqIEByZXR1cm5zIHtBcnJheX0g5YyF5ZCrNeS4quinkueCueWdkOagh+eahOaVsOe7hO+8jOeUqOS6jue7mOWItuWkmui+ueW9ogogICAgICAgKi8KICAgICAgY2FsY3VsYXRlRmllbGRDb3JuZXJzKGNlbnRlclJhLCBjZW50ZXJEZWMsIGZpZWxkRGF0YSwgdXNlRGVmYXVsdFNpemUgPSBmYWxzZSkgewogICAgICAgIHRoaXMuYWRkTG9nKHRoaXMuJHQoJ0NhbGN1bGF0aW5nIEZpZWxkIENvcm5lcnMnLCBbY2VudGVyUmEsIGNlbnRlckRlY10pLCAnaW5mbycpCgogICAgICAgIC8vIOWmguaenOaMh+WumuS9v+eUqOm7mOiupOWkp+Wwj+aIluiAheayoeacieinhuWcuuaVsOaNru+8jOS9v+eUqOm7mOiupOeahDAuNeW6puinhuWcuuWkp+WwjwogICAgICAgIGlmICh1c2VEZWZhdWx0U2l6ZSB8fCAhZmllbGREYXRhKSB7CiAgICAgICAgICB0aGlzLmFkZExvZyh0aGlzLiR0KCdVc2luZyBEZWZhdWx0IEZpZWxkIFNpemU6IDAuNSBEZWdyZWVzJyksICdpbmZvJykKICAgICAgICAgIGNvbnN0IGZpZWxkU2l6ZSA9IDAuNQogICAgICAgICAgY29uc3QgY29vcmRpbmF0ZXMgPSBbCiAgICAgICAgICAgIHsgcmE6IGNlbnRlclJhICsgZmllbGRTaXplIC8gMiwgZGVjOiBjZW50ZXJEZWMgKyBmaWVsZFNpemUgLyAyIH0sCiAgICAgICAgICAgIHsgcmE6IGNlbnRlclJhIC0gZmllbGRTaXplIC8gMiwgZGVjOiBjZW50ZXJEZWMgKyBmaWVsZFNpemUgLyAyIH0sCiAgICAgICAgICAgIHsgcmE6IGNlbnRlclJhIC0gZmllbGRTaXplIC8gMiwgZGVjOiBjZW50ZXJEZWMgLSBmaWVsZFNpemUgLyAyIH0sCiAgICAgICAgICAgIHsgcmE6IGNlbnRlclJhICsgZmllbGRTaXplIC8gMiwgZGVjOiBjZW50ZXJEZWMgLSBmaWVsZFNpemUgLyAyIH0sCiAgICAgICAgICAgIHsgcmE6IGNlbnRlclJhICsgZmllbGRTaXplIC8gMiwgZGVjOiBjZW50ZXJEZWMgKyBmaWVsZFNpemUgLyAyIH0KICAgICAgICAgIF0KICAgICAgICAgIHRoaXMuYWRkTG9nKHRoaXMuJHQoJ0RlZmF1bHQgRmllbGQgQ29ybmVycycsIFtKU09OLnN0cmluZ2lmeShjb29yZGluYXRlcyldKSwgJ2luZm8nKQogICAgICAgICAgcmV0dXJuIGNvb3JkaW5hdGVzCiAgICAgICAgfQoKICAgICAgICAvLyDlpoLmnpzmnInop4blnLrmlbDmja7kuJTkuI3lvLrliLbkvb/nlKjpu5jorqTlpKflsI/vvIzln7rkuo7kvKDlhaXnmoTkuK3lv4PngrnlnZDmoIforqHnrpfop4blnLrop5LngrkKICAgICAgICAvLyDov5nnp43mg4XlhrXkuLvopoHnlKjkuo7lvZPliY3kvY3nva7nmoTmmL7npLrvvIzpnIDopoHlj43mmKDlrp7pmYXnmoTop4blnLrlpKflsI8KICAgICAgICBjb25zdCB7IHJhMCwgZGVjMCwgcmExLCBkZWMxLCByYTIsIGRlYzIsIHJhMywgZGVjMyB9ID0gZmllbGREYXRhCgogICAgICAgIC8vIOiuoeeul+inhuWcuueahOWunumZheWkp+Wwj++8iFJB5ZKMREVD5pa55ZCR55qE6Leo5bqm77yJCiAgIAoKICAgICAgICAvLyDln7rkuo7kvKDlhaXnmoTkuK3lv4PngrnlnZDmoIfvvIzorqHnrpfop4blnLrnmoTkupTkuKrop5LngrkKICAgICAgICBjb25zdCBjb29yZGluYXRlcyA9IFsKICAgICAgICAgIHsgcmE6IHJhMCwgZGVjOiBkZWMwIH0sICAgICAvLyDlj7PkuIrop5IKICAgICAgICAgIHsgcmE6IHJhMSwgZGVjOiBkZWMxIH0sICAgICAvLyDlt6bkuIrop5IKICAgICAgICAgIHsgcmE6IHJhMiwgZGVjOiBkZWMyIH0sICAgICAvLyDlt6bkuIvop5IKICAgICAgICAgIHsgcmE6IHJhMywgZGVjOiBkZWMzIH0sICAgICAvLyDlj7PkuIvop5IKICAgICAgICAgIHsgcmE6IHJhMCwgZGVjOiBkZWMwIH0gICAgICAvLyDlm57liLDlj7PkuIrop5LvvIjpl63lkIjlpJrovrnlvaLvvIkKICAgICAgICBdCgogICAgICAgIHRoaXMuYWRkTG9nKHRoaXMuJHQoJ1VzaW5nIEZpZWxkIERhdGEnLCBbcmEwLCBkZWMwLCByYTEsIGRlYzEsIHJhMiwgZGVjMiwgcmEzLCBkZWMzXSksICdpbmZvJykKICAgICAgICB0aGlzLmFkZExvZyh0aGlzLiR0KCdGaWVsZCBDb3JuZXIgQ2FsY3VsYXRpb24gUmVzdWx0JywgW0pTT04uc3RyaW5naWZ5KGNvb3JkaW5hdGVzKV0pLCAnaW5mbycpCiAgICAgICAgcmV0dXJuIGNvb3JkaW5hdGVzCiAgICAgIH0sCgoKCiAgICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KICAgICAgLy8g5qC85byP5YyW5pa55rOVCiAgICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KICAgICAgZm9ybWF0VGltZSh0aW1lc3RhbXApIHsKICAgICAgICBpZiAoIXRpbWVzdGFtcCkgcmV0dXJuICcnCiAgICAgICAgY29uc3QgZGF0ZSA9IG5ldyBEYXRlKHRpbWVzdGFtcCkKICAgICAgICByZXR1cm4gZGF0ZS50b0xvY2FsZVRpbWVTdHJpbmcoJ3poLUNOJywgewogICAgICAgICAgaG91cjEyOiBmYWxzZSwKICAgICAgICAgIGhvdXI6ICcyLWRpZ2l0JywKICAgICAgICAgIG1pbnV0ZTogJzItZGlnaXQnLAogICAgICAgICAgc2Vjb25kOiAnMi1kaWdpdCcKICAgICAgICB9KQogICAgICB9LAoKICAgICAgZm9ybWF0QWRqdXN0bWVudFZhbHVlKHZhbHVlKSB7CiAgICAgICAgaWYgKCFOdW1iZXIuaXNGaW5pdGUodmFsdWUpKSByZXR1cm4gYDAuMCR7dGhpcy51bml0R2x5cGgodGhpcy5hZGp1c3RtZW50VW5pdCl9YAogICAgICAgIC8vIHZhbHVlIOeahOWNleS9jSA9IHByb3BzLmFkanVzdG1lbnRVbml0CiAgICAgICAgY29uc3QgdmFsQXJjbWluID0gdGhpcy51bml0VG9BcmNtaW4odmFsdWUsIHRoaXMuYWRqdXN0bWVudFVuaXQpCiAgICAgICAgLy8g5bGV56S65Y2V5L2N5LuN54S255SoIHByb3BzLmFkanVzdG1lbnRVbml077yI5Lmf5Y+v5pS55oiQ5Zu65a6a4oCYYXJjbWlu4oCZ77yJCiAgICAgICAgcmV0dXJuIHRoaXMuZm9ybWF0V2l0aFVuaXQodmFsQXJjbWluLCB0aGlzLmFkanVzdG1lbnRVbml0LCAxKQogICAgICB9LAoKICAgICAgLy8g5qC85byP5YyW5Z2Q5qCH5pi+56S6CiAgICAgIGZvcm1hdENvb3JkaW5hdGUodmFsdWUsIHR5cGUpIHsKICAgICAgICBpZiAodmFsdWUgPT09IG51bGwgfHwgdmFsdWUgPT09IHVuZGVmaW5lZCB8fCBpc05hTih2YWx1ZSkpIHsKICAgICAgICAgIHJldHVybiB0eXBlID09PSAncmEnID8gJzAwaCAwMG0gMDBzJyA6ICcrMDDCsCAwMFwnIDAwIicKICAgICAgICB9CgogICAgICAgIGlmICh0eXBlID09PSAncmEnKSB7CiAgICAgICAgICAvLyDmoLzlvI/ljJZSQeS4uuaXtuWIhuenkuagvOW8jwogICAgICAgICAgY29uc3QgaG91cnMgPSBNYXRoLmZsb29yKHZhbHVlIC8gMTUpCiAgICAgICAgICBjb25zdCBtaW51dGVzID0gTWF0aC5mbG9vcigodmFsdWUgJSAxNSkgKiA0KQogICAgICAgICAgY29uc3Qgc2Vjb25kcyA9IE1hdGguZmxvb3IoKCh2YWx1ZSAlIDE1KSAqIDQgLSBtaW51dGVzKSAqIDYwKQogICAgICAgICAgcmV0dXJuIGAke2hvdXJzLnRvU3RyaW5nKCkucGFkU3RhcnQoMiwgJzAnKX1oICR7bWludXRlcy50b1N0cmluZygpLnBhZFN0YXJ0KDIsICcwJyl9bSAke3NlY29uZHMudG9TdHJpbmcoKS5wYWRTdGFydCgyLCAnMCcpfXNgCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIC8vIOagvOW8j+WMlkRFQ+S4uuW6puWIhuenkuagvOW8jwogICAgICAgICAgY29uc3Qgc2lnbiA9IHZhbHVlID49IDAgPyAnKycgOiAnLScKICAgICAgICAgIGNvbnN0IGFic1ZhbHVlID0gTWF0aC5hYnModmFsdWUpCiAgICAgICAgICBjb25zdCBkZWdyZWVzID0gTWF0aC5mbG9vcihhYnNWYWx1ZSkKICAgICAgICAgIGNvbnN0IG1pbnV0ZXMgPSBNYXRoLmZsb29yKChhYnNWYWx1ZSAtIGRlZ3JlZXMpICogNjApCiAgICAgICAgICBjb25zdCBzZWNvbmRzID0gTWF0aC5mbG9vcigoKGFic1ZhbHVlIC0gZGVncmVlcykgKiA2MCAtIG1pbnV0ZXMpICogNjApCiAgICAgICAgICByZXR1cm4gYCR7c2lnbn0ke2RlZ3JlZXMudG9TdHJpbmcoKS5wYWRTdGFydCgyLCAnMCcpfcKwICR7bWludXRlcy50b1N0cmluZygpLnBhZFN0YXJ0KDIsICcwJyl9JyAke3NlY29uZHMudG9TdHJpbmcoKS5wYWRTdGFydCgyLCAnMCcpfSJgCiAgICAgICAgfQogICAgICB9LAoKCiAgICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KICAgICAgLy8g6L6F5Yqp5pa55rOVCiAgICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KICAgICAgcGFyc2VDb29yZGluYXRlKHZhbHVlLCB0eXBlKSB7CiAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycpIHsKICAgICAgICAgIGlmICh0eXBlID09PSAncmEnKSB7CiAgICAgICAgICAgIC8vIOino+aekOaXtuWIhuenkuagvOW8jyAiMDBoIDAwbSAwMHMiCiAgICAgICAgICAgIGNvbnN0IG1hdGNoID0gdmFsdWUubWF0Y2goLyhcZCspaFxzKihcZCspbVxzKihcZCspcy8pCiAgICAgICAgICAgIGlmIChtYXRjaCkgewogICAgICAgICAgICAgIGNvbnN0IGhvdXJzID0gcGFyc2VJbnQobWF0Y2hbMV0pCiAgICAgICAgICAgICAgY29uc3QgbWludXRlcyA9IHBhcnNlSW50KG1hdGNoWzJdKQogICAgICAgICAgICAgIGNvbnN0IHNlY29uZHMgPSBwYXJzZUludChtYXRjaFszXSkKICAgICAgICAgICAgICByZXR1cm4gaG91cnMgKyBtaW51dGVzIC8gNjAgKyBzZWNvbmRzIC8gMzYwMAogICAgICAgICAgICB9CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAvLyDop6PmnpDluqbliIbnp5LmoLzlvI8gIiswMMKwIDAwJyAwMCIiCiAgICAgICAgICAgIGNvbnN0IG1hdGNoID0gdmFsdWUubWF0Y2goLyhbKy1dPykoXGQrKcKwXHMqKFxkKyknXHMqKFxkKykiLykKICAgICAgICAgICAgaWYgKG1hdGNoKSB7CiAgICAgICAgICAgICAgY29uc3Qgc2lnbiA9IG1hdGNoWzFdID09PSAnLScgPyAtMSA6IDEKICAgICAgICAgICAgICBjb25zdCBkZWdyZWVzID0gcGFyc2VJbnQobWF0Y2hbMl0pCiAgICAgICAgICAgICAgY29uc3QgbWludXRlcyA9IHBhcnNlSW50KG1hdGNoWzNdKQogICAgICAgICAgICAgIGNvbnN0IHNlY29uZHMgPSBwYXJzZUludChtYXRjaFs0XSkKICAgICAgICAgICAgICByZXR1cm4gc2lnbiAqIChkZWdyZWVzICsgbWludXRlcyAvIDYwICsgc2Vjb25kcyAvIDM2MDApCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgcmV0dXJuIG51bGwKICAgICAgfSwKCiAgICAgIGFkZFN0YXR1c1RleHRUb1N0YXJNYXAoKSB7CiAgICAgICAgLy8g5re75Yqg54q25oCB5paH5pys5Yiw5pif5Zu+CiAgICAgICAgY29uc3Qgc3RhdHVzVGV4dCA9IHsKICAgICAgICAgIHRleHQ6IGDmnoHovbTmoKHlh4bosIPmlbTkuK0gLSDmoKHlh4bngrk6ICR7dGhpcy5jYWxpYnJhdGlvblBvaW50cy5sZW5ndGh9LzNgLAogICAgICAgICAgcG9zaXRpb246IHsgcmE6IHRoaXMuY3VycmVudFBvc2l0aW9uLnJhLCBkZWM6IHRoaXMuY3VycmVudFBvc2l0aW9uLmRlYyB9LAogICAgICAgICAgY29sb3I6ICIjRkZGRkZGIiwKICAgICAgICAgIGZvbnRTaXplOiAxNCwKICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogInJnYmEoMCwgMCwgMCwgMC43KSIKICAgICAgICB9CgogICAgICAgIC8vIOWPkemAgeeKtuaAgeaWh+acrOWIsOaYn+WbvgogICAgICAgIC8vIHRoaXMuJGJ1cy4kZW1pdCgnQWRkU3RhdHVzVGV4dFRvU3Rhck1hcCcsIHN0YXR1c1RleHQpCiAgICAgIH0sCgogICAgICBnZXRTdGVwQ2xhc3MoaW5kZXgpIHsKICAgICAgICAvLyDmoLnmja7ov5vluqbnmb7liIbmr5Tnoa7lrproioLngrnnirbmgIEKICAgICAgICBjb25zdCBwcm9ncmVzcyA9IHRoaXMucHJvZ3Jlc3NQZXJjZW50YWdlCgogICAgICAgIHN3aXRjaCAoaW5kZXgpIHsKICAgICAgICAgIGNhc2UgMDogLy8g5Yid5aeL5YyW6IqC54K5CiAgICAgICAgICAgIGlmIChwcm9ncmVzcyA+PSBQUk9HUkVTU19USFJFU0hPTERTLklOSVRJQUxJWkFUSU9OKSByZXR1cm4geyBjb21wbGV0ZWQ6IHRydWUgfQogICAgICAgICAgICBpZiAocHJvZ3Jlc3MgPj0gMCkgcmV0dXJuIHsgY3VycmVudDogdHJ1ZSB9CiAgICAgICAgICAgIHJldHVybiB7fQoKICAgICAgICAgIGNhc2UgMTogLy8g56ys5LiA5qyh5qCh5YeG6IqC54K5CiAgICAgICAgICAgIGlmIChwcm9ncmVzcyA+PSBQUk9HUkVTU19USFJFU0hPTERTLkZJUlNUX0NBTElCUkFUSU9OKSByZXR1cm4geyBjb21wbGV0ZWQ6IHRydWUgfQogICAgICAgICAgICBpZiAocHJvZ3Jlc3MgPj0gUFJPR1JFU1NfVEhSRVNIT0xEUy5JTklUSUFMSVpBVElPTikgcmV0dXJuIHsgY3VycmVudDogdHJ1ZSB9CiAgICAgICAgICAgIHJldHVybiB7fQoKICAgICAgICAgIGNhc2UgMjogLy8g56ys5LqM5qyh5qCh5YeG6IqC54K5CiAgICAgICAgICAgIGlmIChwcm9ncmVzcyA+PSBQUk9HUkVTU19USFJFU0hPTERTLlNFQ09ORF9DQUxJQlJBVElPTikgcmV0dXJuIHsgY29tcGxldGVkOiB0cnVlIH0KICAgICAgICAgICAgaWYgKHByb2dyZXNzID49IFBST0dSRVNTX1RIUkVTSE9MRFMuRklSU1RfQ0FMSUJSQVRJT04pIHJldHVybiB7IGN1cnJlbnQ6IHRydWUgfQogICAgICAgICAgICByZXR1cm4ge30KCiAgICAgICAgICBjYXNlIDM6IC8vIOesrOS4ieasoeagoeWHhuiKgueCuQogICAgICAgICAgICBpZiAocHJvZ3Jlc3MgPj0gUFJPR1JFU1NfVEhSRVNIT0xEUy5USElSRF9DQUxJQlJBVElPTikgcmV0dXJuIHsgY29tcGxldGVkOiB0cnVlIH0KICAgICAgICAgICAgaWYgKHByb2dyZXNzID49IFBST0dSRVNTX1RIUkVTSE9MRFMuU0VDT05EX0NBTElCUkFUSU9OKSByZXR1cm4geyBjdXJyZW50OiB0cnVlIH0KICAgICAgICAgICAgcmV0dXJuIHt9CgogICAgICAgICAgZGVmYXVsdDoKICAgICAgICAgICAgcmV0dXJuIHt9CiAgICAgICAgfQogICAgICB9LAoKICAgICAgZ2V0QXppbXV0aEFjdGlvbihhelZhbCkgewogICAgICAgIGlmICghTnVtYmVyLmlzRmluaXRlKGF6VmFsKSkgcmV0dXJuICcnCiAgICAgICAgY29uc3QgYXJjbWluID0gdGhpcy51bml0VG9BcmNtaW4oYXpWYWwsIHRoaXMuYWRqdXN0bWVudFVuaXQpCiAgICAgICAgaWYgKE1hdGguYWJzKGFyY21pbikgPD0gdGhpcy5kZWFkYmFuZEFyY21pbikgcmV0dXJuIHRoaXMuJHQoJ05vIGFkanVzdG1lbnQgbmVlZGVkJykKICAgICAgICBjb25zdCBkaXIgPSB0aGlzLmF6TGFiZWxCeVNpZ24oYXJjbWluKQogICAgICAgIC8vIOi+k+WHuuWNleS9jeS4jiBwcm9wcy5hZGp1c3RtZW50VW5pdCDkv53mjIHkuIDoh7QKICAgICAgICByZXR1cm4gYCR7ZGlyfSAke3RoaXMuZm9ybWF0V2l0aFVuaXQoYXJjbWluLCB0aGlzLmFkanVzdG1lbnRVbml0LCAxKX1gCiAgICAgIH0sCgogICAgICBnZXRBbHRpdHVkZUFjdGlvbihhbHRWYWwpIHsKICAgICAgICBpZiAoIU51bWJlci5pc0Zpbml0ZShhbHRWYWwpKSByZXR1cm4gJycKICAgICAgICBjb25zdCBhcmNtaW4gPSB0aGlzLnVuaXRUb0FyY21pbihhbHRWYWwsIHRoaXMuYWRqdXN0bWVudFVuaXQpCiAgICAgICAgaWYgKE1hdGguYWJzKGFyY21pbikgPD0gdGhpcy5kZWFkYmFuZEFyY21pbikgcmV0dXJuIHRoaXMuJHQoJ05vIGFkanVzdG1lbnQgbmVlZGVkJykKICAgICAgICBjb25zdCBkaXIgPSB0aGlzLmFsdExhYmVsQnlTaWduKGFyY21pbikKICAgICAgICByZXR1cm4gYCR7ZGlyfSAke3RoaXMuZm9ybWF0V2l0aFVuaXQoYXJjbWluLCB0aGlzLmFkanVzdG1lbnRVbml0LCAxKX1gCiAgICAgIH0sCgoKCiAgICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KICAgICAgLy8g5pel5b+X5pa55rOVCiAgICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KICAgICAgYWRkTG9nKG1lc3NhZ2UsIGxldmVsID0gJ2luZm8nKSB7CiAgICAgICAgY29uc3QgbG9nID0gewogICAgICAgICAgaWQ6IERhdGUubm93KCkgKyBNYXRoLnJhbmRvbSgpLAogICAgICAgICAgbWVzc2FnZSwKICAgICAgICAgIGxldmVsLAogICAgICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpCiAgICAgICAgfQogICAgICAgIAogICAgICAgIC8vIOeUn+S6p+eOr+Wig+WHj+WwkWNvbnNvbGXovpPlh7oKICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcpIHsKICAgICAgICAgIGNvbnNvbGUubG9nKGxvZy5tZXNzYWdlKQogICAgICAgIH0KICAgICAgICAKICAgICAgICAvLyDkvb/nlKjlvqrnjq/mlbDnu4TkvJjljJblhoXlrZjkvb/nlKgKICAgICAgICBpZiAodGhpcy5sb2dzLmxlbmd0aCA8IHRoaXMubG9nQ2FwYWNpdHkpIHsKICAgICAgICAgIHRoaXMubG9ncy5wdXNoKGxvZykKICAgICAgICB9IGVsc2UgewogICAgICAgICAgLy8g5b6q546v6KaG55uW5pen5pel5b+XCiAgICAgICAgICB0aGlzLmxvZ3NbdGhpcy5sb2dJbmRleF0gPSBsb2cKICAgICAgICAgIHRoaXMubG9nSW5kZXggPSAodGhpcy5sb2dJbmRleCArIDEpICUgdGhpcy5sb2dDYXBhY2l0eQogICAgICAgIH0KICAgICAgfSwKCiAgICAgIGNsZWFyTG9ncygpIHsKICAgICAgICB0aGlzLmxvZ3MgPSBbXQogICAgICAgIHRoaXMubG9nSW5kZXggPSAwCiAgICAgIH0sCgogICAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiAgICAgIC8vIOaegei9tOagoeWHhueKtuaAgeabtOaWsOaWueazlQogICAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiAgICAgIGNhbGN1bGF0ZVBvbGFyQXhpc09mZnNldCgpIHsKICAgICAgICB0aGlzLnBvbGFyQXhpc09mZnNldCA9IHsKICAgICAgICAgIGF6aW11dGg6IHRoaXMuYWRqdXN0bWVudC5hemltdXRoLAogICAgICAgICAgYWx0aXR1ZGU6IHRoaXMuYWRqdXN0bWVudC5hbHRpdHVkZQogICAgICAgIH0KICAgICAgfSwKCiAgICAgIHVwZGF0ZVBvbGFyQWxpZ25tZW50U3RhdGUoc3RhdGVOdW1iZXIsIGxvZ01lc3NhZ2UsIHByb2dyZXNzKSB7CiAgICAgICAgaWYgKGxvZ01lc3NhZ2UgJiYgdHlwZW9mIGxvZ01lc3NhZ2UgPT09ICdzdHJpbmcnKSB7CiAgICAgICAgICBsZXQgbGV2ZWwgPSAnaW5mbycKICAgICAgICAgIGlmIChsb2dNZXNzYWdlLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoJ2Vycm9yJykgfHwgbG9nTWVzc2FnZS50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKCflpLHotKUnKSkgewogICAgICAgICAgICBsZXZlbCA9ICdlcnJvcicKICAgICAgICAgIH0gZWxzZSBpZiAobG9nTWVzc2FnZS50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKCd3YXJuaW5nJykgfHwgbG9nTWVzc2FnZS50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKCforablkYonKSkgewogICAgICAgICAgICBsZXZlbCA9ICd3YXJuaW5nJwogICAgICAgICAgfSBlbHNlIGlmIChsb2dNZXNzYWdlLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoJ3N1Y2Nlc3MnKSB8fCBsb2dNZXNzYWdlLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoJ+aIkOWKnycpIHx8IGxvZ01lc3NhZ2UudG9Mb3dlckNhc2UoKS5pbmNsdWRlcygn5a6M5oiQJykpIHsKICAgICAgICAgICAgbGV2ZWwgPSAnc3VjY2VzcycKICAgICAgICAgIH0KICAgICAgICAgIHRoaXMuYWRkTG9nKGxvZ01lc3NhZ2UsIGxldmVsKQogICAgICAgIH0KCiAgICAgICAgaWYgKHByb2dyZXNzICE9PSB1bmRlZmluZWQgJiYgcHJvZ3Jlc3MgIT09IG51bGwpIHsKICAgICAgICAgIHRoaXMuY3VycmVudFByb2dyZXNzID0gcHJvZ3Jlc3MKCiAgICAgICAgICBpZiAocHJvZ3Jlc3MgPj0gMCAmJiBwcm9ncmVzcyA8PSAxMDApIHsKICAgICAgICAgICAgLy8g5qC55o2u6L+b5bqm5pu05paw5qCh5YeG54q25oCBCiAgICAgICAgICAgIGlmIChwcm9ncmVzcyA+PSAwICYmIHByb2dyZXNzIDwgMTUpIHsKICAgICAgICAgICAgICAvLyDliJ3lp4vljJbpmLbmrrUKICAgICAgICAgICAgICB0aGlzLmNhbGlicmF0aW9uUG9pbnRzID0gW10KICAgICAgICAgICAgICB0aGlzLmlzQ2FsaWJyYXRpb25Db21wbGV0ZSA9IGZhbHNlCiAgICAgICAgICAgICAgdGhpcy5pc1BvbGFyQWxpZ25lZCA9IGZhbHNlCiAgICAgICAgICAgIH0gZWxzZSBpZiAocHJvZ3Jlc3MgPj0gMTUgJiYgcHJvZ3Jlc3MgPCAyNSkgewogICAgICAgICAgICAgIC8vIOesrOS4gOasoeagoeWHhumYtuautSAtIOenu+mZpOaooeaLn+aVsOaNrua3u+WKoO+8jOWunumZheagoeWHhueCueeUsXVwZGF0ZUZpZWxkRGF0YeWkhOeQhgogICAgICAgICAgICAgIC8vIOi/memHjOWPquabtOaWsOeKtuaAge+8jOS4jea3u+WKoOaooeaLn+agoeWHhueCuQogICAgICAgICAgICB9IGVsc2UgaWYgKHByb2dyZXNzID49IDI1ICYmIHByb2dyZXNzIDwgNTApIHsKICAgICAgICAgICAgICAvLyDnrKzkuozmrKHmoKHlh4bpmLbmrrUgLSDnp7vpmaTmqKHmi5/mlbDmja7mt7vliqDvvIzlrp7pmYXmoKHlh4bngrnnlLF1cGRhdGVGaWVsZERhdGHlpITnkIYKICAgICAgICAgICAgICAvLyDov5nph4zlj6rmm7TmlrDnirbmgIHvvIzkuI3mt7vliqDmqKHmi5/moKHlh4bngrkKICAgICAgICAgICAgfSBlbHNlIGlmIChwcm9ncmVzcyA+PSA1MCAmJiBwcm9ncmVzcyA8IDc1KSB7CiAgICAgICAgICAgICAgLy8g56ys5LiJ5qyh5qCh5YeG6Zi25q61IC0g56e76Zmk5qih5ouf5pWw5o2u5re75Yqg77yM5a6e6ZmF5qCh5YeG54K555SxdXBkYXRlRmllbGREYXRh5aSE55CGCiAgICAgICAgICAgICAgLy8g6L+Z6YeM5Y+q5pu05paw54q25oCB77yM5LiN5re75Yqg5qih5ouf5qCh5YeG54K5CiAgICAgICAgICAgIH0gZWxzZSBpZiAocHJvZ3Jlc3MgPj0gNzUgJiYgcHJvZ3Jlc3MgPCA5NSkgewogICAgICAgICAgICAgIC8vIOW+queOr+agoeWHhuiwg+aVtOmYtuautQogICAgICAgICAgICAgIHRoaXMuaXNDYWxpYnJhdGlvbkNvbXBsZXRlID0gdHJ1ZQogICAgICAgICAgICAgIHRoaXMuY2FsY3VsYXRlUG9sYXJBeGlzT2Zmc2V0KCkKCiAgICAgICAgICAgICAgLy8g5qOA5rWL5qCh5YeG5b6q546vCiAgICAgICAgICAgICAgaWYgKHByb2dyZXNzIDwgdGhpcy5sYXN0Q2FsaWJyYXRpb25Qcm9ncmVzcyAmJiB0aGlzLmxhc3RDYWxpYnJhdGlvblByb2dyZXNzID49IDc1KSB7CiAgICAgICAgICAgICAgICB0aGlzLmNhbGlicmF0aW9uTG9vcENvdW50KysKICAgICAgICAgICAgICAgIHRoaXMuYWRkTG9nKHRoaXMuJHQoJ0NhbGlicmF0aW9uIFJvdW5kIFN0YXJ0ZWQnLCBbdGhpcy5jYWxpYnJhdGlvbkxvb3BDb3VudF0pLCAnaW5mbycpCiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAvLyDlnKjlvqrnjq/moKHlh4bpmLbmrrXvvIzov5vluqblj6/og73kvJrlnKg3NS05NeS5i+mXtOazouWKqAogICAgICAgICAgICAgIC8vIOi/meihqOekuuezu+e7n+ato+WcqOi/m+ihjOWkmuasoeagoeWHhuiwg+aVtAogICAgICAgICAgICAgIGlmIChwcm9ncmVzcyA+IDg1KSB7CiAgICAgICAgICAgICAgICB0aGlzLmFkZExvZyh0aGlzLiR0KCdDYWxpYnJhdGlvbiBQcm9ncmVzcyBJbmZvJywgW01hdGgucm91bmQocHJvZ3Jlc3MpLCB0aGlzLmNhbGlicmF0aW9uTG9vcENvdW50XSksICdpbmZvJykKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIHRoaXMubGFzdENhbGlicmF0aW9uUHJvZ3Jlc3MgPSBwcm9ncmVzcwogICAgICAgICAgICB9IGVsc2UgaWYgKHByb2dyZXNzID49IDk1ICYmIHByb2dyZXNzIDw9IDEwMCkgewogICAgICAgICAgICAgIC8vIOacgOe7iOmqjOivgemYtuautQogICAgICAgICAgICAgIHRoaXMuaXNDYWxpYnJhdGlvbkNvbXBsZXRlID0gdHJ1ZQogICAgICAgICAgICAgIHRoaXMuY2FsY3VsYXRlUG9sYXJBeGlzT2Zmc2V0KCkKCiAgICAgICAgICAgICAgaWYgKE1hdGguYWJzKHRoaXMucG9sYXJBeGlzT2Zmc2V0LmF6aW11dGgpIDwgMS4wICYmIE1hdGguYWJzKHRoaXMucG9sYXJBeGlzT2Zmc2V0LmFsdGl0dWRlKSA8IDEuMCkgewogICAgICAgICAgICAgICAgdGhpcy5pc1BvbGFyQWxpZ25lZCA9IHRydWUKICAgICAgICAgICAgICAgIHRoaXMuYWRkTG9nKHRoaXMuJHQoJ1BvbGFyIEFsaWdubWVudCBDb21wbGV0ZWQnKSwgJ3N1Y2Nlc3MnKQogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICB0aGlzLmFkZExvZyh0aGlzLiR0KCdQb2xhciBBbGlnbm1lbnQgTmVlZHMgTWFudWFsIEFkanVzdG1lbnQnKSwgJ3dhcm5pbmcnKQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwKCiAgICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KICAgICAgLy8g5Z2Q5qCH6L2s5o2i5pa55rOVCiAgICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KICAgICAgLyoqCiAgICAgICAqIOi1pOmBk+WdkOaghyAoUkEsIERlYykg4oaSIOWcsOW5s+WdkOaghyAoQXosIEFsdCkKICAgICAgICogQHBhcmFtIHtudW1iZXJ9IHJhRGVnIOi1pOe7jyAo5bqmLCAwfjM2MCkKICAgICAgICogQHBhcmFtIHtudW1iZXJ9IGRlY0RlZyDotaTnuqwgKOW6piwgLTkwfis5MCkKICAgICAgICogQHBhcmFtIHtEYXRlfSBkYXRlVVRDIOingua1i+aXtumXtCAoVVRDIOaXtumXtCkKICAgICAgICogQHBhcmFtIHtudW1iZXJ9IGxhdERlZyDop4LmtYvngrnnuqzluqYgKOW6piwg5YyX5q2j5Y2X6LSfKQogICAgICAgKiBAcGFyYW0ge251bWJlcn0gbG9uRGVnIOingua1i+eCuee7j+W6piAo5bqmLCDkuJzmraPopb/otJ8pCiAgICAgICAqIEByZXR1cm5zIHt7YXo6IG51bWJlciwgYWx0OiBudW1iZXJ9fSDmlrnkvY3op5Iv6auY5bqm6KeSICjluqYpCiAgICAgICAqLwogICAgICBlcXVhdG9yaWFsVG9Ib3Jpem9udGFsKHJhRGVnLCBkZWNEZWcsIGRhdGVVVEMsIGxhdERlZywgbG9uRGVnKSB7CiAgICAgICAgLy8g5bel5YW3CiAgICAgICAgY29uc3QgdG9KRCA9IGQgPT4gKE51bWJlcihkKSAvIDg2NDAwMDAwKSArIDI0NDA1ODcuNTsgLy8gRGF0ZS9tcyDihpIgSkQKICAgICAgICBjb25zdCBkMnIgPSB4ID0+IHggKiBNYXRoLlBJIC8gMTgwLCByMmQgPSB4ID0+IHggKiAxODAgLyBNYXRoLlBJOwogICAgICAgIGNvbnN0IG5vcm0zNjAgPSBhID0+ICgoYSAlIDM2MCkgKyAzNjApICUgMzYwOwogICAgICAgIGNvbnN0IGNsYW1wID0gKHgsIGxvID0gLTEsIGhpID0gMSkgPT4gTWF0aC5taW4oaGksIE1hdGgubWF4KGxvLCB4KSk7CgogICAgICAgIC8vIOWFpeWPguW9kuS4gOWMliArIOehrOagoemqjAogICAgICAgIHJhRGVnID0gTnVtYmVyKHJhRGVnKTsKICAgICAgICBkZWNEZWcgPSBOdW1iZXIoZGVjRGVnKTsKICAgICAgICBsYXREZWcgPSBOdW1iZXIobGF0RGVnKTsKICAgICAgICBsb25EZWcgPSBOdW1iZXIobG9uRGVnKTsKICAgICAgICBjb25zdCB0bXMgPSBOdW1iZXIoZGF0ZVVUQyk7IC8vIERhdGUg5oiW5pe26Ze05oiz6YO95Y+vCgogICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50JykgewogICAgICAgICAgY29uc29sZS5sb2coJ0VR4oaSSE9SIOWFpeWPgjonLCB7IHJhRGVnLCBkZWNEZWcsIGxhdERlZywgbG9uRGVnLCBkYXRlVVRDLCB0bXMgfSk7CiAgICAgICAgfQoKICAgICAgICBpZiAoIVtyYURlZywgZGVjRGVnLCBsYXREZWcsIGxvbkRlZywgdG1zXS5ldmVyeShOdW1iZXIuaXNGaW5pdGUpKSB7CiAgICAgICAgICBjb25zb2xlLmVycm9yKCdFUeKGkkhPUiDlhaXlj4LpnZ7ms5U6JywgeyByYURlZywgZGVjRGVnLCBsYXREZWcsIGxvbkRlZywgZGF0ZVVUQywgdG1zIH0pOwogICAgICAgICAgcmV0dXJuIHsgYXo6IE5hTiwgYWx0OiBOYU4gfTsKICAgICAgICB9CgogICAgICAgIHRyeSB7CiAgICAgICAgICAvLyAxKSBKRCAmIEdNU1QKICAgICAgICAgIGNvbnN0IEpEID0gdG9KRCh0bXMpOwogICAgICAgICAgY29uc3QgZCA9IEpEIC0gMjQ1MTU0NS4wOwogICAgICAgICAgbGV0IEdNU1QgPSBub3JtMzYwKDI4MC40NjA2MTgzNyArIDM2MC45ODU2NDczNjYyOSAqIGQpOyAvLyDluqYKCiAgICAgICAgICAvLyAyKSBMU1TvvIjkuJznu4/kuLrmraPvvIkKICAgICAgICAgIGxldCBMU1QgPSBub3JtMzYwKEdNU1QgKyBsb25EZWcpOwoKICAgICAgICAgIC8vIDMpIEhB77yILTE4MH4xODAg5pu056iz77yJCiAgICAgICAgICBsZXQgSEEgPSBMU1QgLSByYURlZzsKICAgICAgICAgIEhBID0gKChIQSArIDE4MCkgJSAzNjApIC0gMTgwOwoKICAgICAgICAgIC8vIDQpIEFsdCAvIEF677yI56iz5a6a5b2i5byP77yJCiAgICAgICAgICBjb25zdCBoYSA9IGQycihIQSk7CiAgICAgICAgICBjb25zdCBkZWMgPSBkMnIoZGVjRGVnKTsKICAgICAgICAgIGNvbnN0IGxhdCA9IGQycihsYXREZWcpOwoKICAgICAgICAgIGNvbnN0IHNpbkFsdCA9IGNsYW1wKAogICAgICAgICAgICBNYXRoLnNpbihkZWMpICogTWF0aC5zaW4obGF0KSArIE1hdGguY29zKGRlYykgKiBNYXRoLmNvcyhsYXQpICogTWF0aC5jb3MoaGEpCiAgICAgICAgICApOwogICAgICAgICAgY29uc3QgYWx0ID0gTWF0aC5hc2luKHNpbkFsdCk7CiAgICAgICAgICBjb25zdCB5ID0gLU1hdGguc2luKGhhKSAqIE1hdGguY29zKGRlYyk7CiAgICAgICAgICBjb25zdCB4ID0gTWF0aC5zaW4oZGVjKSAqIE1hdGguY29zKGxhdCkgLSBNYXRoLmNvcyhkZWMpICogTWF0aC5zaW4obGF0KSAqIE1hdGguY29zKGhhKTsKICAgICAgICAgIGNvbnN0IGF6ID0gTWF0aC5hdGFuMih5LCB4KTsKCiAgICAgICAgICBjb25zdCBhbHREZWcgPSByMmQoYWx0KTsKICAgICAgICAgIGNvbnN0IGF6RGVnID0gbm9ybTM2MChyMmQoYXopKTsKCiAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcpIHsKICAgICAgICAgICAgY29uc29sZS5sb2coJ0VR4oaSSE9SIOe7k+aenDonLCB7CiAgICAgICAgICAgICAgSkQsIEdNU1QsIExTVCwgSEEsCiAgICAgICAgICAgICAgaGFSYWQ6IGhhLCBkZWNSYWQ6IGRlYywgbGF0UmFkOiBsYXQsCiAgICAgICAgICAgICAgYXo6IGF6RGVnLCBhbHQ6IGFsdERlZwogICAgICAgICAgICB9KTsKICAgICAgICAgIH0KCiAgICAgICAgICByZXR1cm4geyBhejogYXpEZWcsIGFsdDogYWx0RGVnIH07CiAgICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgICAgY29uc29sZS5lcnJvcignRVHihpJIT1Ig6K6h566X5byC5bi4OicsIGUsIHsKICAgICAgICAgICAgcmFEZWcsIGRlY0RlZywgbGF0RGVnLCBsb25EZWcsIGRhdGVVVEMsIHRtcwogICAgICAgICAgfSk7CiAgICAgICAgICByZXR1cm4geyBhejogTmFOLCBhbHQ6IE5hTiB9OwogICAgICAgIH0KICAgICAgfSwKCgoKCgogICAgICAvLyA9PT0g5aKe5by655qE5Y2h54mH5L+h5oGv5pu05paw5pa55rOVID09PQogICAgICB1cGRhdGVDYXJkSW5mbyhjdXJyZW50UmEsIGN1cnJlbnREZWMsIHRhcmdldFJhLCB0YXJnZXREZWMsIGF6aW11dGhWYWwsIGFsdGl0dWRlVmFsLCByYUFkanVzdG1lbnQsIGRlY0FkanVzdG1lbnQsIHVuaXRIaW50KSB7CiAgICAgICAgY29uc3QgcGFyc2VWYWx1ZSA9IHYgPT4gKHYgPT09IG51bGwgfHwgdiA9PT0gJycgfHwgdiA9PT0gdW5kZWZpbmVkKSA/IDAgOiAoTnVtYmVyKHYpIHx8IDApCgogICAgICAgIGNvbnN0IGN1cnJlbnRSYU51bSA9IHBhcnNlVmFsdWUoY3VycmVudFJhKQogICAgICAgIGNvbnN0IGN1cnJlbnREZWNOdW0gPSBwYXJzZVZhbHVlKGN1cnJlbnREZWMpCiAgICAgICAgY29uc3QgdGFyZ2V0UmFOdW0gPSBwYXJzZVZhbHVlKHRhcmdldFJhKQogICAgICAgIGNvbnN0IHRhcmdldERlY051bSA9IHBhcnNlVmFsdWUodGFyZ2V0RGVjKQogICAgICAgIGNvbnN0IGF6VmFsID0gcGFyc2VWYWx1ZShhemltdXRoVmFsKQogICAgICAgIGNvbnN0IGFsdFZhbCA9IHBhcnNlVmFsdWUoYWx0aXR1ZGVWYWwpCgogICAgICAgIC8vIDEpIOS9jee9ruaYvuekuu+8iOWOn+agt++8iQogICAgICAgIHRoaXMuY3VycmVudFBvc2l0aW9uLnJhID0gdGhpcy5mb3JtYXRDb29yZGluYXRlKGN1cnJlbnRSYU51bSwgJ3JhJykKICAgICAgICB0aGlzLmN1cnJlbnRQb3NpdGlvbi5kZWMgPSB0aGlzLmZvcm1hdENvb3JkaW5hdGUoY3VycmVudERlY051bSwgJ2RlYycpCiAgICAgICAgdGhpcy50YXJnZXRQb3NpdGlvbi5yYSA9IHRoaXMuZm9ybWF0Q29vcmRpbmF0ZSh0YXJnZXRSYU51bSwgJ3JhJykKICAgICAgICB0aGlzLnRhcmdldFBvc2l0aW9uLmRlYyA9IHRoaXMuZm9ybWF0Q29vcmRpbmF0ZSh0YXJnZXREZWNOdW0sICdkZWMnKQoKICAgICAgICAvLyAyKSDosIPmlbTph4/vvJrku6XkvKDlhaXljZXkvY3kuLrlh4blhpnlhaXvvIjpu5jorqTnlKggcHJvcHMuYWRqdXN0bWVudFVuaXTvvIkKICAgICAgICBjb25zdCBpblVuaXQgPSB1bml0SGludCB8fCB0aGlzLmFkanVzdG1lbnRVbml0CiAgICAgICAgLy8g5aaC5p6c5Lyg5YWl5pivIuW6piLvvIzkvYbkvaAgcHJvcHMg6K6+5Li65LqGImFyY21pbiLvvIzkuZ/msqHlhbPns7vigJTigJTmmL7npLrkvJroh6rliqjmjaLnrpcKICAgICAgICAvLyDov5nph4zkv53lrZgi5Y6f5aeL5pWwICsg5a6D55qE5Y2V5L2N77yI6YCa6L+HIHByb3Bz77yJIgogICAgICAgIHRoaXMuYWRqdXN0bWVudC5hemltdXRoID0gYXpWYWwKICAgICAgICB0aGlzLmFkanVzdG1lbnQuYWx0aXR1ZGUgPSBhbHRWYWwKICAgICAgICB0aGlzLmFkanVzdG1lbnRVbml0ID0gaW5Vbml0ICAvLyDlpoLmnpzluIzmnJvmr4/mrKHpmo/mlbDmja7liIfmjaLljZXkvY3vvIzlj6/liqDlhaXov5nkuIDooYwKCiAgICAgICAgLy8gMykg5Zyo6LCD5pW06Zi25q6177yM5q+P5qyh5o6l5pS25Yiw6LCD5pW05pWw5o2u5pe25aKe5Yqg5qCh5YeG6L2u5pWwCiAgICAgICAgaWYgKHRoaXMuY2FsaWJyYXRpb25QaGFzZSA9PT0gJ2FkanVzdGluZycpIHsKICAgICAgICAgIHRoaXMuY2FsaWJyYXRpb25Mb29wQ291bnQrKwogICAgICAgICAgdGhpcy5hZGRMb2codGhpcy4kdCgnQ2FsaWJyYXRpb24gUm91bmQgU3RhcnRlZCcsIFt0aGlzLmNhbGlicmF0aW9uTG9vcENvdW50XSksICdpbmZvJykKICAgICAgICB9CgogICAgICAgIC8vIDQpIOaegei9tOWujOaIkOWIpOWumu+8iOeUqOinkuWIhuavlOi+g++8iQogICAgICAgIGNvbnN0IGF6QXJjbWluID0gdGhpcy51bml0VG9BcmNtaW4oYXpWYWwsIGluVW5pdCkKICAgICAgICBjb25zdCBhbHRBcmNtaW4gPSB0aGlzLnVuaXRUb0FyY21pbihhbHRWYWwsIGluVW5pdCkKICAgICAgICB0aGlzLmlzUG9sYXJBbGlnbmVkID0gTWF0aC5hYnMoYXpBcmNtaW4pIDwgMS4wICYmIE1hdGguYWJzKGFsdEFyY21pbikgPCAxLjAKCiAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnKSB7CiAgICAgICAgICBjb25zb2xlLmxvZygnUG9sYXJBbGlnbm1lbnQgdXBkYXRlOicsIHsKICAgICAgICAgICAgdW5pdDogaW5Vbml0LAogICAgICAgICAgICBhZGpfcmF3OiB7IGF6aW11dGg6IGF6VmFsLCBhbHRpdHVkZTogYWx0VmFsIH0sCiAgICAgICAgICAgIGFkal9hcmNtaW46IHsgYXo6IGF6QXJjbWluLCBhbHQ6IGFsdEFyY21pbiB9LAogICAgICAgICAgICBpc1BvbGFyQWxpZ25lZDogdGhpcy5pc1BvbGFyQWxpZ25lZCwKICAgICAgICAgICAgY2FsaWJyYXRpb25Sb3VuZDogdGhpcy5jYWxpYnJhdGlvbkxvb3BDb3VudAogICAgICAgICAgfSkKICAgICAgICB9CiAgICAgIH0sCgoKICAgICAgLyoqCiAgICAgICAqIOagueaNruS4ieS4quagoeWHhueCueiuoeeul+WBh+aegei9tOS9jee9rgogICAgICAgKiDkvb/nlKjkuInngrnmnoHovbTmoKHlh4bnrpfms5UKICAgICAgICovCiAgICAgIGNhbGN1bGF0ZUZha2VQb2xhckF4aXMoKSB7CiAgICAgICAgaWYgKHRoaXMuY2FsaWJyYXRpb25Qb2ludHMubGVuZ3RoICE9PSB0aGlzLm1heENhbGlicmF0aW9uUG9pbnRzKSB7CiAgICAgICAgICB0aGlzLmFkZExvZygn6ZyA6KaBM+S4quagoeWHhueCueaJjeiDveiuoeeul+WBh+aegei9tOS9jee9ricsICd3YXJuaW5nJykKICAgICAgICAgIHJldHVybiBmYWxzZQogICAgICAgIH0KCiAgICAgICAgdHJ5IHsKICAgICAgICAgIGNvbnN0IFtwMSwgcDIsIHAzXSA9IHRoaXMuY2FsaWJyYXRpb25Qb2ludHMKCiAgICAgICAgICAvLyDlsIbkuInkuKrngrnovazmjaLkuLrnrJvljaHlsJTlnZDmoIcKICAgICAgICAgIGNvbnN0IGNhcnQxID0gdGhpcy5lcXVhdG9yaWFsVG9DYXJ0ZXNpYW4ocDEucmEsIHAxLmRlYykKICAgICAgICAgIGNvbnN0IGNhcnQyID0gdGhpcy5lcXVhdG9yaWFsVG9DYXJ0ZXNpYW4ocDIucmEsIHAyLmRlYykKICAgICAgICAgIGNvbnN0IGNhcnQzID0gdGhpcy5lcXVhdG9yaWFsVG9DYXJ0ZXNpYW4ocDMucmEsIHAzLmRlYykKCiAgICAgICAgICAvLyDorqHnrpfkuKTkuKrlkJHph48KICAgICAgICAgIGNvbnN0IHYxID0gewogICAgICAgICAgICB4OiBjYXJ0Mi54IC0gY2FydDEueCwKICAgICAgICAgICAgeTogY2FydDIueSAtIGNhcnQxLnksCiAgICAgICAgICAgIHo6IGNhcnQyLnogLSBjYXJ0MS56CiAgICAgICAgICB9CiAgICAgICAgICBjb25zdCB2MiA9IHsKICAgICAgICAgICAgeDogY2FydDMueCAtIGNhcnQxLngsCiAgICAgICAgICAgIHk6IGNhcnQzLnkgLSBjYXJ0MS55LAogICAgICAgICAgICB6OiBjYXJ0My56IC0gY2FydDEuegogICAgICAgICAgfQoKICAgICAgICAgIC8vIOiuoeeul+azleWQkemHj++8iOWPieenr++8iQogICAgICAgICAgY29uc3Qgbm9ybWFsID0gdGhpcy5jcm9zc1Byb2R1Y3QodjEsIHYyKQoKICAgICAgICAgIC8vIOajgOafpeazleWQkemHj+aYr+WQpuS4uumbtuWQkemHjwogICAgICAgICAgY29uc3Qgbm9ybWFsTGVuZ3RoID0gdGhpcy52ZWN0b3JMZW5ndGgobm9ybWFsKQogICAgICAgICAgaWYgKG5vcm1hbExlbmd0aCA8IDFlLTEwKSB7CiAgICAgICAgICAgIHRoaXMuYWRkTG9nKCfkuInkuKrmoKHlh4bngrnlhbHnur/vvIzml6Dms5XorqHnrpflgYfmnoHovbTkvY3nva4nLCAnZXJyb3InKQogICAgICAgICAgICByZXR1cm4gZmFsc2UKICAgICAgICAgIH0KCiAgICAgICAgICAvLyDlvZLkuIDljJbms5XlkJHph48KICAgICAgICAgIGNvbnN0IHVuaXROb3JtYWwgPSB0aGlzLm5vcm1hbGl6ZVZlY3Rvcihub3JtYWwpCgogICAgICAgICAgLy8g6K6h566X5LiO5Y2V5L2N55CD6Z2i55qE5Lqk54K577yI5YGH5p6B54K577yJCiAgICAgICAgICBjb25zdCBmYWtlUG9sYXJQb2ludCA9IHsKICAgICAgICAgICAgeDogdW5pdE5vcm1hbC54LAogICAgICAgICAgICB5OiB1bml0Tm9ybWFsLnksCiAgICAgICAgICAgIHo6IHVuaXROb3JtYWwuegogICAgICAgICAgfQoKICAgICAgICAgIC8vIOmAieaLqeato+ehrueahOS6pOeCue+8iHrlnZDmoIfkuLrmraPnmoTvvIkKICAgICAgICAgIGlmIChmYWtlUG9sYXJQb2ludC56IDwgMCkgewogICAgICAgICAgICBmYWtlUG9sYXJQb2ludC54ID0gLWZha2VQb2xhclBvaW50LngKICAgICAgICAgICAgZmFrZVBvbGFyUG9pbnQueSA9IC1mYWtlUG9sYXJQb2ludC55CiAgICAgICAgICAgIGZha2VQb2xhclBvaW50LnogPSAtZmFrZVBvbGFyUG9pbnQuegogICAgICAgICAgfQoKICAgICAgICAgIC8vIOWwhuWBh+aegeeCuei9rOaNouS4uui1pOmBk+WdkOaghwogICAgICAgICAgY29uc3QgZmFrZVBvbGFyRXF1YXRvcmlhbCA9IHRoaXMuY2FydGVzaWFuVG9FcXVhdG9yaWFsKGZha2VQb2xhclBvaW50KQoKICAgICAgICAgIC8vIOS/neWtmOWBh+aegei9tOS9jee9rgogICAgICAgICAgdGhpcy5mYWtlUG9sYXJBeGlzLnJhID0gZmFrZVBvbGFyRXF1YXRvcmlhbC5yYQogICAgICAgICAgdGhpcy5mYWtlUG9sYXJBeGlzLmRlYyA9IGZha2VQb2xhckVxdWF0b3JpYWwuZGVjCiAgICAgICAgICB0aGlzLmZha2VQb2xhckF4aXMuY2FsY3VsYXRlZCA9IHRydWUKCiAgICAgICAgICB0aGlzLmFkZExvZyhg5YGH5p6B6L205L2N572u6K6h566X5a6M5oiQOiBSQT0ke2Zha2VQb2xhckVxdWF0b3JpYWwucmEudG9GaXhlZCg0KX3CsCwgREVDPSR7ZmFrZVBvbGFyRXF1YXRvcmlhbC5kZWMudG9GaXhlZCg0KX3CsGAsICdzdWNjZXNzJykKCiAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgICB0aGlzLmFkZExvZyhg6K6h566X5YGH5p6B6L205L2N572u5pe25Ye66ZSZOiAke2Vycm9yLm1lc3NhZ2V9YCwgJ2Vycm9yJykKICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ+iuoeeul+WBh+aegei9tOS9jee9rumUmeivr++8micsIGVycm9yKQogICAgICAgICAgcmV0dXJuIGZhbHNlCiAgICAgICAgfQogICAgICB9LAoKICAgICAgLyoqCiAgICAgICAqIOWwhui1pOmBk+WdkOagh+i9rOaNouS4uuesm+WNoeWwlOWdkOaghwogICAgICAgKi8KICAgICAgZXF1YXRvcmlhbFRvQ2FydGVzaWFuKHJhLCBkZWMsIHJhZGl1cyA9IDEpIHsKICAgICAgICBjb25zdCByYVJhZCA9IHJhICogTWF0aC5QSSAvIDE4MC4wCiAgICAgICAgY29uc3QgZGVjUmFkID0gZGVjICogTWF0aC5QSSAvIDE4MC4wCgogICAgICAgIHJldHVybiB7CiAgICAgICAgICB4OiByYWRpdXMgKiBNYXRoLmNvcyhkZWNSYWQpICogTWF0aC5jb3MocmFSYWQpLAogICAgICAgICAgeTogcmFkaXVzICogTWF0aC5jb3MoZGVjUmFkKSAqIE1hdGguc2luKHJhUmFkKSwKICAgICAgICAgIHo6IHJhZGl1cyAqIE1hdGguc2luKGRlY1JhZCkKICAgICAgICB9CiAgICAgIH0sCgogICAgICAvKioKICAgICAgICog5bCG56yb5Y2h5bCU5Z2Q5qCH6L2s5o2i5Li66LWk6YGT5Z2Q5qCHCiAgICAgICAqLwogICAgICBjYXJ0ZXNpYW5Ub0VxdWF0b3JpYWwoY2FydCkgewogICAgICAgIGNvbnN0IHJhZGl1cyA9IE1hdGguc3FydChjYXJ0LnggKiBjYXJ0LnggKyBjYXJ0LnkgKiBjYXJ0LnkgKyBjYXJ0LnogKiBjYXJ0LnopCgogICAgICAgIGNvbnN0IGRlYyA9IE1hdGguYXNpbihjYXJ0LnogLyByYWRpdXMpICogMTgwLjAgLyBNYXRoLlBJCiAgICAgICAgbGV0IHJhID0gTWF0aC5hdGFuMihjYXJ0LnksIGNhcnQueCkgKiAxODAuMCAvIE1hdGguUEkKCiAgICAgICAgLy8g56Gu5L+dUkHlnKgwLTM2MOW6puiMg+WbtOWGhQogICAgICAgIGlmIChyYSA8IDApIHJhICs9IDM2MC4wCgogICAgICAgIHJldHVybiB7IHJhLCBkZWMgfQogICAgICB9LAoKICAgICAgLyoqCiAgICAgICAqIOiuoeeul+S4pOS4quWQkemHj+eahOWPieenrwogICAgICAgKi8KICAgICAgY3Jvc3NQcm9kdWN0KHYxLCB2MikgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICB4OiB2MS55ICogdjIueiAtIHYxLnogKiB2Mi55LAogICAgICAgICAgeTogdjEueiAqIHYyLnggLSB2MS54ICogdjIueiwKICAgICAgICAgIHo6IHYxLnggKiB2Mi55IC0gdjEueSAqIHYyLngKICAgICAgICB9CiAgICAgIH0sCgogICAgICAvKioKICAgICAgICog6K6h566X5ZCR6YeP6ZW/5bqmCiAgICAgICAqLwogICAgICB2ZWN0b3JMZW5ndGgodikgewogICAgICAgIHJldHVybiBNYXRoLnNxcnQodi54ICogdi54ICsgdi55ICogdi55ICsgdi56ICogdi56KQogICAgICB9LAoKICAgICAgLyoqCiAgICAgICAqIOW9kuS4gOWMluWQkemHjwogICAgICAgKi8KICAgICAgbm9ybWFsaXplVmVjdG9yKHYpIHsKICAgICAgICBjb25zdCBsZW5ndGggPSB0aGlzLnZlY3Rvckxlbmd0aCh2KQogICAgICAgIHJldHVybiB7CiAgICAgICAgICB4OiB2LnggLyBsZW5ndGgsCiAgICAgICAgICB5OiB2LnkgLyBsZW5ndGgsCiAgICAgICAgICB6OiB2LnogLyBsZW5ndGgKICAgICAgICB9CiAgICAgIH0sCgogICAgICAvKioKICAgICAgICog57uY5Yi25YGH5p6B6L205L2N572uCiAgICAgICAqLwogICAgICBkcmF3RmFrZVBvbGFyQXhpcyhmYWtlUG9sYXJSQSwgZmFrZVBvbGFyREVDKSB7CiAgICAgICAgdGhpcy5hZGRMb2coYOe7mOWItuWBh+aegei9tOS9jee9rjogUkE9JHtmYWtlUG9sYXJSQS50b0ZpeGVkKDQpfcKwLCBERUM9JHtmYWtlUG9sYXJERUMudG9GaXhlZCg0KX3CsGAsICdpbmZvJykKCiAgICAgICAgdHJ5IHsKICAgICAgICAgIC8vIOWumuS5ieWBh+aegei9tOeahOminOiJsu+8iOe0q+iJsu+8iQogICAgICAgICAgY29uc3QgZmFrZVBvbGFyQ29sb3IgPSB7CiAgICAgICAgICAgIHN0cm9rZTogIiM5QzI3QjAiLCAgICAgICAgLy8g57Sr6Imy6L655qGGCiAgICAgICAgICAgIHN0cm9rZU9wYWNpdHk6IDEsICAgICAgICAgLy8g6L655qGG5LiN6YCP5piO5bqmCiAgICAgICAgICAgIGZpbGw6ICIjOUMyN0IwIiwgICAgICAgICAgLy8g57Sr6Imy5aGr5YWFCiAgICAgICAgICAgIGZpbGxPcGFjaXR5OiAwLjMgICAgICAgICAgLy8g5aGr5YWF5LiN6YCP5piO5bqm77yI5Y2K6YCP5piO77yJCiAgICAgICAgICB9CgogICAgICAgICAgLy8g5L2/55So5LiT6Zeo55qE5YGH5p6B6L2057uY5Yi25LqL5Lu277yM6YG/5YWN5LiO55uu5qCH54K55Yay56qBCiAgICAgICAgICB0aGlzLiRidXMuJGVtaXQoJ0RyYXdGYWtlUG9sYXJBeGlzQ2lyY2xlJywKICAgICAgICAgICAgZmFrZVBvbGFyUkEsCiAgICAgICAgICAgIGZha2VQb2xhckRFQywKICAgICAgICAgICAgZmFrZVBvbGFyQ29sb3IsCiAgICAgICAgICAgICdGYWtlUG9sYXJBeGlzJywKICAgICAgICAgICAgJ+WBh+aegei9tCcKICAgICAgICAgICkKCiAgICAgICAgICB0aGlzLmFkZExvZyhg5YGH5p6B6L205L2N572u5bey57uY5Yi2OiBSQT0ke2Zha2VQb2xhclJBLnRvRml4ZWQoNCl9wrAsIERFQz0ke2Zha2VQb2xhckRFQy50b0ZpeGVkKDQpfcKwYCwgJ2luZm8nKQoKICAgICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgICAgdGhpcy5hZGRMb2coYOe7mOWItuWBh+aegei9tOS9jee9ruaXtuWHuumUmTogJHtlcnJvci5tZXNzYWdlfWAsICdlcnJvcicpCiAgICAgICAgICBjb25zb2xlLmVycm9yKCfnu5jliLblgYfmnoHovbTkvY3nva7plJnor6/vvJonLCBlcnJvcikKICAgICAgICB9CiAgICAgIH0sCiAgICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KICAgICAgLy8g5Y2V5L2N5o2i566X5pa55rOVCiAgICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KICAgICAgdW5pdFRvQXJjbWluKHZhbCwgdW5pdCkgewogICAgICAgIGlmICghTnVtYmVyLmlzRmluaXRlKHZhbCkpIHJldHVybiBOYU4KICAgICAgICBpZiAodW5pdCA9PT0gJ2RlZycpIHJldHVybiB2YWwgKiA2MAogICAgICAgIGlmICh1bml0ID09PSAnYXJjc2VjJykgcmV0dXJuIHZhbCAvIDYwCiAgICAgICAgcmV0dXJuIHZhbCAvLyAnYXJjbWluJwogICAgICB9LAogICAgICBhcmNtaW5Ub1VuaXQodmFsQXJjbWluLCB1bml0KSB7CiAgICAgICAgaWYgKCFOdW1iZXIuaXNGaW5pdGUodmFsQXJjbWluKSkgcmV0dXJuIE5hTgogICAgICAgIGlmICh1bml0ID09PSAnZGVnJykgcmV0dXJuIHZhbEFyY21pbiAvIDYwCiAgICAgICAgaWYgKHVuaXQgPT09ICdhcmNzZWMnKSByZXR1cm4gdmFsQXJjbWluICogNjAKICAgICAgICByZXR1cm4gdmFsQXJjbWluCiAgICAgIH0sCiAgICAgIHVuaXRHbHlwaCh1bml0KSB7CiAgICAgICAgaWYgKHVuaXQgPT09ICdkZWcnKSByZXR1cm4gJ8KwJwogICAgICAgIGlmICh1bml0ID09PSAnYXJjc2VjJykgcmV0dXJuICfigLMnCiAgICAgICAgcmV0dXJuICfigLInIC8vIGFyY21pbgogICAgICB9LAoKICAgICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQogICAgICAvLyDlt6blj7Mv5LiK5LiL5pig5bCE77yI6Z2i5ZCR5p6B54K577yJ5pa55rOVCiAgICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KICAgICAgLy8g5qC55o2u5b2T5YmN5Z2Q5qCH6K6h566X5pyd5ZCR5ZOq5Liq5p6B54K5CiAgICAgIGNhbGN1bGF0ZUZhY2luZ1BvbGUoKSB7CiAgICAgICAgaWYgKCF0aGlzLiRzdG9yZSB8fCAhdGhpcy4kc3RvcmUuc3RhdGUuY3VycmVudExvY2F0aW9uKSB7CiAgICAgICAgICByZXR1cm4gJ25vcnRoJyAvLyDpu5jorqTov5Tlm57ljJfmnoEKICAgICAgICB9CiAgICAgICAgCiAgICAgICAgY29uc3QgbGF0ID0gdGhpcy4kc3RvcmUuc3RhdGUuY3VycmVudExvY2F0aW9uLmxhdAogICAgICAgIC8vIOWMl+WNiueQg++8iOe6rOW6piA+IDDvvInpnaLlkJHljJfmnoHvvIzljZfljYrnkIPvvIjnuqzluqYgPCAw77yJ6Z2i5ZCR5Y2X5p6BCiAgICAgICAgcmV0dXJuIGxhdCA+PSAwID8gJ25vcnRoJyA6ICdzb3V0aCcKICAgICAgfSwKCiAgICAgIC8vIGF6U2lnbiA+IDAgPSDmnJ3kuJzvvJthelNpZ24gPCAwID0g5pyd6KW/CiAgICAgIGF6TGFiZWxCeVNpZ24oYXpTaWduKSB7CiAgICAgICAgLy8g5Yqo5oCB6K6h566X5pyd5ZCR5p6B54K577yM6ICM5LiN5piv5L2/55SoIHByb3BzCiAgICAgICAgY29uc3QgZmFjaW5nUG9sZSA9IHRoaXMuY2FsY3VsYXRlRmFjaW5nUG9sZSgpCiAgICAgICAgLy8g6Z2i5ZCR5YyX5p6B54K577ya5LicPeKGkuWPs++8jOilvz3ihpDlt6bvvJvpnaLlkJHljZfmnoHngrnliJnnm7jlj40KICAgICAgICBjb25zdCBlYXN0ID0gKGZhY2luZ1BvbGUgPT09ICdub3J0aCcpID8gdGhpcy4kdCgn4oaSIFJpZ2h0IChFYXN0KScpIDogdGhpcy4kdCgn4oaQIExlZnQgKEVhc3QpJykKICAgICAgICBjb25zdCB3ZXN0ID0gKGZhY2luZ1BvbGUgPT09ICdub3J0aCcpID8gdGhpcy4kdCgn4oaQIExlZnQgKFdlc3QpJykgOiB0aGlzLiR0KCfihpIgUmlnaHQgKFdlc3QpJykKICAgICAgICByZXR1cm4gYXpTaWduID49IDAgPyBlYXN0IDogd2VzdAogICAgICB9LAogICAgICAvLyBhbHRTaWduID4gMCA9IOaKrOmrmO+8m2FsdFNpZ24gPCAwID0g6ZmN5L2OCiAgICAgIGFsdExhYmVsQnlTaWduKGFsdFNpZ24pIHsKICAgICAgICByZXR1cm4gYWx0U2lnbiA+PSAwID8gdGhpcy4kdCgn4oaRIFVwIChSYWlzZSknKSA6IHRoaXMuJHQoJ+KGkyBEb3duIChMb3dlciknKQogICAgICB9LAoKICAgICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQogICAgICAvLyDnu5/kuIDmoLzlvI/ljJYi5pWw5YC8ICsg5Y2V5L2NIuaWueazlQogICAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiAgICAgIGZvcm1hdFdpdGhVbml0KHZhbEluQXJjbWluLCB1bml0LCBkaWdpdHMgPSAxKSB7CiAgICAgICAgY29uc3QgdiA9IHRoaXMuYXJjbWluVG9Vbml0KE1hdGguYWJzKHZhbEluQXJjbWluKSwgdW5pdCkKICAgICAgICBjb25zdCBnbHlwaCA9IHRoaXMudW5pdEdseXBoKHVuaXQpCiAgICAgICAgcmV0dXJuIGAke3YudG9GaXhlZChkaWdpdHMpfSR7Z2x5cGh9YAogICAgICB9LAoKICAgICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQogICAgICAvLyDpopzoibLlt6Xlhbfmlrnms5UKICAgICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQogICAgICBnZXRDYWxpYnJhdGlvblBvaW50Q29sb3IoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIHN0cm9rZTogQ09MT1JTLldISVRFLAogICAgICAgICAgc3Ryb2tlT3BhY2l0eTogMSwKICAgICAgICAgIGZpbGw6IENPTE9SUy5XSElURSwKICAgICAgICAgIGZpbGxPcGFjaXR5OiAwLjIKICAgICAgICB9CiAgICAgIH0sCgogICAgICBnZXRDdXJyZW50UG9zaXRpb25Db2xvcigpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgc3Ryb2tlOiAiIzAwQkZGRiIsCiAgICAgICAgICBzdHJva2VPcGFjaXR5OiAxLAogICAgICAgICAgZmlsbDogIiMwMEJGRkYiLAogICAgICAgICAgZmlsbE9wYWNpdHk6IDAuMwogICAgICAgIH0KICAgICAgfSwKCiAgICAgIGdldFRhcmdldFBvaW50Q29sb3IoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIHN0cm9rZTogQ09MT1JTLlNVQ0NFU1MsCiAgICAgICAgICBzdHJva2VPcGFjaXR5OiAxLAogICAgICAgICAgZmlsbDogQ09MT1JTLlNVQ0NFU1MsCiAgICAgICAgICBmaWxsT3BhY2l0eTogMC4zCiAgICAgICAgfQogICAgICB9LAoKICAgICAgZ2V0RmFrZVBvbGFyQXhpc0NvbG9yKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICBzdHJva2U6ICIjOUMyN0IwIiwKICAgICAgICAgIHN0cm9rZU9wYWNpdHk6IDEsCiAgICAgICAgICBmaWxsOiAiIzlDMjdCMCIsCiAgICAgICAgICBmaWxsT3BhY2l0eTogMC4zCiAgICAgICAgfQogICAgICB9LAogICAgfSwKICB9Cg=="},{"version":3,"sources":["AutomaticPolarAlignmentCalibration.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AutomaticPolarAlignmentCalibration.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <!-- 最小化状态 -->\n  <div v-if=\"visible && isMinimized\" class=\"polar-alignment-minimized\" :class=\"{ 'dragging': isDraggingState }\"\n    :style=\"{ left: position.x + 'px', top: position.y + 'px' }\">\n    <div class=\"minimized-header\">\n      <div class=\"minimized-drag-area\" @mousedown=\"startDrag\" @touchstart=\"startDrag\">\n        <v-icon class=\"minimized-icon\">mdi-compass-rose</v-icon>\n        <span class=\"minimized-title\">{{ $t('Polar Alignment') }}</span>\n      </div>\n      <div class=\"minimized-controls\">\n        <button class=\"minimized-btn\" @click=\"toggleMinimize\" :title=\"$t('Expand')\">\n          <v-icon>mdi-chevron-up</v-icon>\n        </button>\n      </div>\n    </div>\n    <div class=\"minimized-status\">\n      <div class=\"status-indicator\" :class=\"{ 'online': isConnected }\"></div>\n      <span class=\"status-text\">{{ isConnected ? $t('Connected') : $t('Disconnected') }}</span>\n    </div>\n  </div>\n\n  <!-- 完整界面 -->\n  <div v-else-if=\"visible\" class=\"polar-alignment-widget\"\n    :class=\"{ 'collapsed': isCollapsed, 'dragging': isDraggingState }\"\n    :style=\"{ left: position.x + 'px', top: position.y + 'px' }\">\n\n    <!-- 拖动手柄 -->\n    <div class=\"widget-header\">\n      <div class=\"header-drag-area\" @mousedown=\"startDrag\" @touchstart=\"startDrag\">\n        <div class=\"header-left\">\n          <v-icon class=\"header-icon\">mdi-compass-rose</v-icon>\n          <span class=\"header-title\">{{ $t('Polar Alignment Calibration') }}</span>\n          <div class=\"connection-indicator\">\n            <div class=\"status-dot\" :class=\"{ 'online': isConnected }\"></div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"header-controls\">\n        <button class=\"header-btn\" @click=\"toggleCollapse\" :title=\"isCollapsed ? $t('Expand') : $t('Collapse')\">\n          <v-icon>{{ isCollapsed ? 'mdi-chevron-down' : 'mdi-chevron-up' }}</v-icon>\n        </button>\n        <button class=\"header-btn\" @click=\"toggleMinimize\" :title=\"$t('Minimize')\">\n          <v-icon>mdi-minus</v-icon>\n        </button>\n      </div>\n    </div>\n\n    <!-- 收缩状态内容 -->\n    <div v-if=\"isCollapsed\" class=\"widget-content collapsed\" :class=\"{ 'dragging': isDraggingState }\">\n      <div class=\"collapsed-info\">\n        <div class=\"collapsed-progress\">\n          <div class=\"progress-circle\" :style=\"{ '--progress': progressPercentage + '%' }\">\n            <span class=\"progress-text\">{{ Math.round(progressPercentage) }}%</span>\n          </div>\n        </div>\n        <div class=\"collapsed-status\">\n          <div class=\"status-item\">\n            <span class=\"status-label\">方位角:</span>\n            <span class=\"status-value\" :class=\"{ 'needs-adjustment': needsAzimuthAdjustment }\">\n              {{ formatAdjustmentValue(adjustment.azimuth) }}\n            </span>\n          </div>\n          <div class=\"status-item\">\n            <span class=\"status-label\">高度角:</span>\n            <span class=\"status-value\" :class=\"{ 'needs-adjustment': needsAltitudeAdjustment }\">\n              {{ formatAdjustmentValue(adjustment.altitude) }}\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 展开状态内容 -->\n    <div v-else class=\"widget-content expanded\" :class=\"{ 'dragging': isDraggingState }\">\n      <div class=\"content-sections\">\n        <!-- 校准步骤进度条 -->\n        <div class=\"calibration-progress\">\n          <div class=\"progress-header\">\n            <div class=\"progress-title\">{{ $t('Calibration Progress') }}</div>\n            <div v-if=\"progressPercentage >= 75 && progressPercentage < 95\" class=\"calibration-loop-info\">\n              {{ $t('Calibration Round', [calibrationLoopCount]) }}\n            </div>\n          </div>\n          <div class=\"progress-bar\">\n            <div class=\"progress-fill\" :style=\"{ width: progressPercentage + '%' }\"></div>\n            <div class=\"progress-nodes\">\n              <!-- 初始化节点 -->\n              <div class=\"progress-node\" :class=\"getStepClass(0)\">\n                <div class=\"node-circle\">\n                  <v-icon v-if=\"progressPercentage >= 15\">mdi-check</v-icon>\n                  <v-icon v-else>mdi-cog</v-icon>\n                </div>\n                <div class=\"node-label\">{{ $t('Initialization') }}</div>\n              </div>\n\n              <!-- 第一次校准节点 -->\n              <div class=\"progress-node\" :class=\"getStepClass(1)\">\n                <div class=\"node-circle\">\n                  <v-icon v-if=\"progressPercentage >= 25\">mdi-check</v-icon>\n                  <span v-else>1</span>\n                </div>\n                <div class=\"node-label\">{{ $t('First Calibration') }}</div>\n              </div>\n\n              <!-- 第二次校准节点 -->\n              <div class=\"progress-node\" :class=\"getStepClass(2)\">\n                <div class=\"node-circle\">\n                  <v-icon v-if=\"progressPercentage >= 50\">mdi-check</v-icon>\n                  <span v-else>2</span>\n                </div>\n                <div class=\"node-label\">{{ $t('Second Calibration') }}</div>\n              </div>\n\n              <!-- 第三次校准节点 -->\n              <div class=\"progress-node\" :class=\"getStepClass(3)\">\n                <div class=\"node-circle\">\n                  <v-icon v-if=\"progressPercentage >= 75\">mdi-check</v-icon>\n                  <span v-else>3</span>\n                </div>\n                <div class=\"node-label\">{{ $t('Third Calibration') }}</div>\n              </div>\n\n              <!-- 校准调整节点 -->\n              <div class=\"progress-node calibration-node\"\n                :class=\"{ 'active': progressPercentage >= 75, 'looping': progressPercentage >= 75 && progressPercentage < 95 }\">\n                <div class=\"node-circle\">\n                  <v-icon v-if=\"progressPercentage >= 95\">mdi-check</v-icon>\n                  <v-icon v-else-if=\"progressPercentage >= 75\">mdi-refresh</v-icon>\n                  <v-icon v-else>mdi-tune</v-icon>\n                </div>\n                <div class=\"node-label\">{{ $t('Calibration') }}</div>\n              </div>\n\n              <!-- 最终验证节点 -->\n              <div class=\"progress-node verification-node\" :class=\"{ 'active': progressPercentage >= 95 }\">\n                <div class=\"node-circle\">\n                  <v-icon v-if=\"isPolarAligned\">mdi-check</v-icon>\n                  <v-icon v-else>mdi-target</v-icon>\n                </div>\n                <div class=\"node-label\">{{ $t('Verification') }}</div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- 日志显示 -->\n        <div class=\"log-section\">\n          <div class=\"log-display\">\n            <div v-if=\"displayLogs.length > 0\" class=\"latest-log\" :class=\"displayLogs[0].level\">\n              <div class=\"log-timestamp\">{{ formatTime(displayLogs[0].timestamp) }}</div>\n              <div class=\"log-message\">{{ displayLogs[0].message }}</div>\n            </div>\n            <div v-else class=\"log-empty\">\n              {{ $t('No activity logs') }}\n            </div>\n          </div>\n        </div>\n\n        <!-- 位置信息 -->\n        <div class=\"position-section\">\n          <div class=\"position-grid\">\n            <div class=\"position-cell current\">\n              <div class=\"cell-label\">{{ $t('current RA') }}</div>\n              <div class=\"cell-value\">{{ currentPosition.ra }}</div>\n            </div>\n            <div class=\"position-cell current\">\n              <div class=\"cell-label\">{{ $t('current DEC') }}</div>\n              <div class=\"cell-value\">{{ currentPosition.dec }}</div>\n            </div>\n            <div class=\"position-cell target\">\n              <div class=\"cell-label\">{{ $t('target RA') }}</div>\n              <div class=\"cell-value\">{{ targetPosition.ra }}</div>\n            </div>\n            <div class=\"position-cell target\">\n              <div class=\"cell-label\">{{ $t('target DEC') }}</div>\n              <div class=\"cell-value\">{{ targetPosition.dec }}</div>\n            </div>\n          </div>\n        </div>\n\n        <!-- 调整指导 -->\n        <div class=\"adjustment-section\">\n          <div class=\"adjustment-instructions\">\n            <div class=\"adjustment-item\" :class=\"{ 'active': needsAzimuthAdjustment }\">\n              <div class=\"adjustment-icon\">\n                <v-icon>mdi-compass</v-icon>\n              </div>\n              <div class=\"adjustment-details\">\n                <div class=\"adjustment-header\">\n                  <span class=\"adjustment-type\">{{ $t('Azimuth') }}</span>\n                  <span class=\"adjustment-value\">{{ formatAdjustmentValue(adjustment.azimuth) }}</span>\n                </div>\n                <div class=\"adjustment-action\">\n                  {{ needsAzimuthAdjustment ? getAzimuthAction(adjustment.azimuth) : $t('No adjustment needed') }}\n                </div>\n\n              </div>\n            </div>\n\n            <div class=\"adjustment-item\" :class=\"{ 'active': needsAltitudeAdjustment }\">\n              <div class=\"adjustment-icon\">\n                <v-icon>mdi-compass</v-icon>\n              </div>\n              <div class=\"adjustment-details\">\n                <div class=\"adjustment-header\">\n                  <span class=\"adjustment-type\">{{ $t('Altitude') }}</span>\n                  <span class=\"adjustment-value\">{{ formatAdjustmentValue(adjustment.altitude) }}</span>\n                </div>\n                <div class=\"adjustment-action\">\n                  {{ needsAltitudeAdjustment ? getAltitudeAction(adjustment.altitude) : $t('No adjustment needed') }}\n                </div>\n\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- 控制按钮 -->\n        <div class=\"control-section\">\n          <div class=\"action-buttons\">\n            <button class=\"action-btn primary\" @click=\"startAutoCalibration\" :disabled=\"!canAutoCalibrate\">\n              <v-icon v-if=\"!isCalibrationRunning\">mdi-play-circle</v-icon>\n              <v-icon v-else>mdi-stop-circle</v-icon>\n              <span>{{ isCalibrationRunning ? $t('Stop Calibration') : $t('Start Auto Calibration') }}</span>\n            </button>\n\n\n\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n// 常量定义\nconst COLORS = {\n  PRIMARY: '#64b5f6',\n  SUCCESS: '#4caf50',\n  WARNING: '#ff9800',\n  ERROR: '#f44336',\n  INFO: '#2196f3',\n  WHITE: '#ffffff',\n  BACKGROUND: 'rgba(35, 35, 45, 0.95)',\n  SURFACE: 'rgba(60, 60, 70, 0.9)'\n}\n\nconst CALIBRATION_PHASES = {\n  INITIAL: 'initial',\n  COLLECTING: 'collecting',\n  ADJUSTING: 'adjusting',\n  VERIFYING: 'verifying'\n}\n\nconst PROGRESS_THRESHOLDS = {\n  INITIALIZATION: 15,\n  FIRST_CALIBRATION: 25,\n  SECOND_CALIBRATION: 50,\n  THIRD_CALIBRATION: 75,\n  CALIBRATION_LOOP: 95,\n  COMPLETION: 100\n}\n\nconst DIMENSIONS = {\n  MINIMIZED: { width: 250, height: 80 },\n  COLLAPSED: { width: 300, height: 120 },\n  EXPANDED: { width: 350, height: 400 }\n}\n\nconst LOG_LIMIT = 100\nconst DISPLAY_LOG_LIMIT = 10\n\nexport default {\n  name: 'AutomaticPolarAlignmentCalibration',\n\n  props: {\n    visible: {\n      type: Boolean,\n      default: false\n    },\n    autoStart: {\n      type: Boolean,\n      default: false\n    },\n    // 新增：传入调整数据的单位（'deg' | 'arcmin' | 'arcsec'）\n    adjustmentUnit: { type: String, default: 'arcmin' },\n\n    // 新增：用户站位视角（'north' | 'south'），用于左右映射\n    facingPole: { type: String, default: 'north' },\n\n    // 新增：动作死区（以角分定义，UI判定是否需要动作）\n    deadbandArcmin: { type: Number, default: 0.5 }\n  },\n\n  data() {\n    return {\n      // 连接状态\n      isConnected: false,\n\n      // 位置信息\n      currentPosition: {\n        ra: '00h 00m 00s',\n        dec: '+00° 00\\' 00\"'\n      },\n      targetPosition: {\n        ra: '00h 00m 00s',\n        dec: '+00° 00\\' 00\"'\n      },\n      previousPosition: {\n        ra: '00h 00m 00s',\n        dec: '+00° 00\\' 00\"'\n      },\n\n      // 校准数据\n      isCalibrationComplete: false,\n      isPolarAligned: false,\n\n      // 调整信息\n      adjustment: {\n        azimuth: 0.0,\n        altitude: 0.0\n      },\n\n      // 日志系统 - 使用循环数组优化内存\n      logs: [],\n      logIndex: 0,\n      logCapacity: LOG_LIMIT,\n\n      // 校准运行状态\n      isCalibrationRunning: false,\n\n      // 视场数据\n      fieldData: null,\n\n      // 当前进度\n      currentProgress: 0,\n\n      // === 新增：界面控制状态 ===\n      // 拖动状态\n      isDragging: false,\n      dragOffset: { x: 0, y: 0 },\n\n      // 控件位置\n      position: { x: 50, y: 50 },\n\n      // 界面状态\n      isMinimized: false,\n      isCollapsed: false,\n\n      // === 新增：性能优化 ===\n      // 缓存尺寸计算结果\n      cachedDimensions: {\n        width: 350,\n        height: 400\n      },\n      // 拖动状态标记\n      isDraggingState: false,\n\n      // 内存清理定时器\n      memoryCleanupTimer: null,\n\n      // 计算缓存\n      cachedAzimuthArcmin: null,\n      cachedAltitudeArcmin: null,\n      lastAzimuthValue: null,\n      lastAltitudeValue: null,\n\n      // 拖动性能优化\n      lastDragTime: 0,\n\n      // 极轴偏移量\n      polarAxisOffset: {\n        azimuth: 0,\n        altitude: 0\n      },\n\n      // 校准循环计数\n      calibrationLoopCount: 0,\n      lastCalibrationProgress: 0,\n\n      // 校准阶段状态\n      calibrationPhase: 'initial', // 'initial', 'collecting', 'adjusting', 'verifying'\n      calibrationPoints: [], // 存储三个校准点的坐标\n      maxCalibrationPoints: 3, // 最大校准点数量\n      targetPoint: null, // 存储目标点坐标\n\n      // 移除假极轴相关数据\n      // fakePolarAxis: {\n      //   ra: null,\n      //   dec: null,\n      //   calculated: false\n      // },\n    }\n  },\n\n  computed: {\n    // 显示的日志 - 使用缓存优化\n    displayLogs() {\n      // 返回最近的10条日志，按时间倒序（用于显示最新一条）\n      const logs = this.logs\n      if (logs.length <= DISPLAY_LOG_LIMIT) {\n        return logs.slice().reverse()\n      }\n      return logs.slice(-DISPLAY_LOG_LIMIT).reverse()\n    },\n\n    // 校准进度百分比\n    progressPercentage() {\n      // 使用从后端传入的进度\n      return this.currentProgress\n    },\n\n    // 是否可以自动校准\n    canAutoCalibrate() {\n      return this.isConnected\n    },\n\n    // 是否需要方位角调整 - 使用缓存避免重复计算\n    needsAzimuthAdjustment() {\n      const v = this.adjustment?.azimuth\n      if (!Number.isFinite(v)) return false\n      // 使用缓存的值，避免重复计算\n      return this.cachedAzimuthArcmin !== null ? \n        Math.abs(this.cachedAzimuthArcmin) > this.deadbandArcmin : \n        Math.abs(this.unitToArcmin(v, this.adjustmentUnit)) > this.deadbandArcmin\n    },\n\n    // 是否需要高度角调整 - 使用缓存避免重复计算\n    needsAltitudeAdjustment() {\n      const v = this.adjustment?.altitude\n      if (!Number.isFinite(v)) return false\n      // 使用缓存的值，避免重复计算\n      return this.cachedAltitudeArcmin !== null ? \n        Math.abs(this.cachedAltitudeArcmin) > this.deadbandArcmin : \n        Math.abs(this.unitToArcmin(v, this.adjustmentUnit)) > this.deadbandArcmin\n    }\n  },\n\n  watch: {\n    visible(newVal) {\n      if (newVal && this.autoStart) {\n        this.startAutoCalibration()\n      }\n    },\n    \n    // 监听当前坐标变化，自动更新朝向极点\n    '$store.state.currentLocation.lat': {\n      handler(newLat, oldLat) {\n        if (newLat !== oldLat && newLat !== undefined) {\n          const facingPole = this.calculateFacingPole()\n          this.addLog(this.$t('Location Changed', [facingPole, newLat]), 'info')\n          \n          // 如果正在调整阶段，重新计算调整建议\n          if (this.calibrationPhase === 'adjusting') {\n            this.addLog(this.$t('Recalculating Adjustment Directions'), 'info')\n          }\n        }\n      },\n      immediate: false\n    },\n\n    // 监听调整值变化，更新缓存 - 使用防抖避免频繁更新\n    'adjustment.azimuth': {\n      handler: function(newVal) {\n        if (Number.isFinite(newVal)) {\n          // 清除之前的定时器\n          if (this._azimuthUpdateTimer) {\n            clearTimeout(this._azimuthUpdateTimer)\n          }\n          // 使用防抖，延迟100ms更新\n          this._azimuthUpdateTimer = setTimeout(() => {\n            this.cachedAzimuthArcmin = this.unitToArcmin(newVal, this.adjustmentUnit)\n            this.lastAzimuthValue = newVal\n          }, 100)\n        }\n      },\n      immediate: true\n    },\n\n    'adjustment.altitude': {\n      handler: function(newVal) {\n        if (Number.isFinite(newVal)) {\n          // 清除之前的定时器\n          if (this._altitudeUpdateTimer) {\n            clearTimeout(this._altitudeUpdateTimer)\n          }\n          // 使用防抖，延迟100ms更新\n          this._altitudeUpdateTimer = setTimeout(() => {\n            this.cachedAltitudeArcmin = this.unitToArcmin(newVal, this.adjustmentUnit)\n            this.lastAltitudeValue = newVal\n          }, 100)\n        }\n      },\n      immediate: true\n    }\n  },\n\n    mounted() {\n      // 实现组件初始化逻辑\n      this.initialize()\n\n      // 初始化缓存的尺寸信息\n      this.updateCachedDimensions()\n\n      // 监听信号总线事件\n      this.$bus.$on('showPolarAlignment', this.showInterface)\n      this.$bus.$on('hidePolarAlignment', this.hideInterface)\n\n      // 监听赤道仪连接状态\n      this.$bus.$on('MountConnected', this.updateMountConnection)\n\n      // 接收状态更新\n      this.$bus.$on('PolarAlignmentState', this.updatePolarAlignmentState)\n\n      // 监听视场数据更新\n      this.$bus.$on('FieldDataUpdate', this.updateFieldData)\n\n      // 监听卡片信息更新\n      this.$bus.$on('updateCardInfo', this.updateCardInfo)\n\n      // 启动定期内存清理（每5分钟清理一次）\n      this.startMemoryCleanup()\n    },\n\n    beforeDestroy() {\n      // 移除信号总线监听\n      this.$bus.$off('showPolarAlignment', this.showInterface)\n      this.$bus.$off('hidePolarAlignment', this.hideInterface)\n      this.$bus.$off('MountConnected', this.updateMountConnection)\n      this.$bus.$off('PolarAlignmentState', this.updatePolarAlignmentState)\n      this.$bus.$off('FieldDataUpdate', this.updateFieldData)\n      this.$bus.$off('updateCardInfo', this.updateCardInfo)\n\n      // 清理拖动事件监听\n      this.cleanupDragListeners()\n\n      // 清理缓存数据\n      this.clearCachedData()\n\n      // 停止内存清理定时器\n      this.stopMemoryCleanup()\n\n      // 清理防抖定时器\n      this.clearDebounceTimers()\n\n      // 实现组件销毁逻辑\n      this.cleanup()\n    },\n\n    methods: {\n      // ========================================\n      // 信号总线事件处理\n      // ========================================\n      showInterface() {\n        this.$emit('update:visible', true)\n      },\n\n      hideInterface() {\n        this.$emit('update:visible', false)\n      },\n\n      updateMountConnection(status) {\n        this.isConnected = status === 1\n        const statusText = this.isConnected ? this.$t('Connected') : this.$t('Disconnected')\n        this.addLog(this.$t('Mount Connection Status', [statusText]), this.isConnected ? 'success' : 'warning')\n      },\n\n      // ========================================\n      // 初始化和清理\n      // ========================================\n      initialize() {\n        this.addLog(this.$t('Polar Alignment Component Initialized'), 'info')\n        \n        // 记录当前朝向极点\n        const facingPole = this.calculateFacingPole()\n        const lat = this.$store?.state?.currentLocation?.lat || 'unknown'\n        this.addLog(this.$t('Facing Pole', [facingPole, lat]), 'info')\n      },\n\n      cleanup() {\n        this.addLog(this.$t('Polar Alignment Component Cleaned'), 'info')\n      },\n\n      // 内存使用监控（仅在开发环境）\n      getMemoryUsage() {\n        if (process.env.NODE_ENV === 'development' && performance.memory) {\n          return {\n            usedJSHeapSize: Math.round(performance.memory.usedJSHeapSize / 1024 / 1024) + 'MB',\n            totalJSHeapSize: Math.round(performance.memory.totalJSHeapSize / 1024 / 1024) + 'MB',\n            jsHeapSizeLimit: Math.round(performance.memory.jsHeapSizeLimit / 1024 / 1024) + 'MB',\n            logsCount: this.logs.length,\n            calibrationPointsCount: this.calibrationPoints.length\n          }\n        }\n        return null\n      },\n\n      // 启动定期内存清理\n      startMemoryCleanup() {\n        this.memoryCleanupTimer = setInterval(() => {\n          this.performMemoryCleanup()\n        }, 5 * 60 * 1000) // 每5分钟清理一次\n      },\n\n      // 停止内存清理定时器\n      stopMemoryCleanup() {\n        if (this.memoryCleanupTimer) {\n          clearInterval(this.memoryCleanupTimer)\n          this.memoryCleanupTimer = null\n        }\n      },\n\n      // 执行内存清理\n      performMemoryCleanup() {\n        // 清理过期的日志（保留最近50条）\n        if (this.logs.length > 50) {\n          this.logs = this.logs.slice(-50)\n          this.logIndex = Math.min(this.logIndex, 50)\n        }\n\n        // 清理过期的校准点（如果超过最大数量）\n        if (this.calibrationPoints.length > this.maxCalibrationPoints) {\n          this.calibrationPoints = this.calibrationPoints.slice(-this.maxCalibrationPoints)\n        }\n\n        // 强制垃圾回收（如果可用）\n        if (window.gc && typeof window.gc === 'function') {\n          window.gc()\n        }\n\n        // 在开发环境输出内存使用情况\n        if (process.env.NODE_ENV === 'development') {\n          const memoryInfo = this.getMemoryUsage()\n          if (memoryInfo) {\n            console.log('Memory cleanup performed:', memoryInfo)\n          }\n        }\n      },\n\n      // 清理拖动事件监听器\n      cleanupDragListeners() {\n        document.removeEventListener('mousemove', this.onDrag)\n        document.removeEventListener('mouseup', this.stopDrag)\n        document.removeEventListener('touchmove', this.onDrag)\n        document.removeEventListener('touchend', this.stopDrag)\n      },\n\n      // 清理防抖定时器\n      clearDebounceTimers() {\n        if (this._azimuthUpdateTimer) {\n          clearTimeout(this._azimuthUpdateTimer)\n          this._azimuthUpdateTimer = null\n        }\n        if (this._altitudeUpdateTimer) {\n          clearTimeout(this._altitudeUpdateTimer)\n          this._altitudeUpdateTimer = null\n        }\n      },\n\n      // 清理缓存数据\n      clearCachedData() {\n        // 清理计算缓存\n        this.cachedAzimuthArcmin = null\n        this.cachedAltitudeArcmin = null\n        this.lastAzimuthValue = null\n        this.lastAltitudeValue = null\n        this.lastDragTime = 0\n        \n        // 清理日志数据\n        this.logs = []\n        this.logIndex = 0\n        \n        // 清理校准数据\n        this.calibrationPoints = []\n        this.targetPoint = null\n        this.fieldData = null\n        \n        // 清理位置数据\n        this.currentPosition = { ra: '00h 00m 00s', dec: '+00° 00\\' 00\"' }\n        this.targetPosition = { ra: '00h 00m 00s', dec: '+00° 00\\' 00\"' }\n        this.previousPosition = { ra: '00h 00m 00s', dec: '+00° 00\\' 00\"' }\n        \n        // 清理调整数据\n        this.adjustment = { azimuth: 0.0, altitude: 0.0 }\n        this.polarAxisOffset = { azimuth: 0, altitude: 0 }\n        \n        // 重置状态\n        this.isCalibrationComplete = false\n        this.isPolarAligned = false\n        this.calibrationLoopCount = 0\n        this.lastCalibrationProgress = 0\n        this.calibrationPhase = 'initial'\n      },\n\n      // ========================================\n      // 拖动控制方法\n      // ========================================\n      startDrag(event) {\n        if (event.target.closest('.header-controls, .minimized-controls, .header-btn, .minimized-btn')) {\n          return\n        }\n\n        this.isDragging = true\n        this.isDraggingState = true\n\n        // 添加dragging类，移除过渡动画\n        this.$el.classList.add('dragging')\n\n        const rect = event.currentTarget.getBoundingClientRect()\n        const clientX = event.clientX || event.touches?.[0]?.clientX || 0\n        const clientY = event.clientY || event.touches?.[0]?.clientY || 0\n\n        this.dragOffset = {\n          x: clientX - rect.left,\n          y: clientY - rect.top\n        }\n\n        // 预计算并缓存尺寸，避免拖动时重复计算\n        this.updateCachedDimensions()\n\n        // 优化触摸事件处理\n        if (event.type === 'touchstart') {\n          document.addEventListener('touchmove', this.onDrag, { passive: false })\n          document.addEventListener('touchend', this.stopDrag, { passive: false })\n        } else {\n          document.addEventListener('mousemove', this.onDrag)\n          document.addEventListener('mouseup', this.stopDrag)\n        }\n      },\n\n      onDrag(event) {\n        if (!this.isDragging) return\n\n        // 阻止默认行为，提高触摸响应性\n        if (event.type === 'touchmove') {\n          event.preventDefault()\n        }\n\n        // 使用更高效的节流机制\n        const now = Date.now()\n        if (this.lastDragTime && now - this.lastDragTime < 16) return // 60fps限制\n        this.lastDragTime = now\n        \n        const clientX = event.clientX || event.touches?.[0]?.clientX || 0\n        const clientY = event.clientY || event.touches?.[0]?.clientY || 0\n\n        const newX = clientX - this.dragOffset.x\n        const newY = clientY - this.dragOffset.y\n\n        // 使用缓存的尺寸，避免重复计算\n        const maxX = window.innerWidth - this.cachedDimensions.width\n        const maxY = window.innerHeight - this.cachedDimensions.height\n\n        this.position = {\n          x: Math.max(0, Math.min(newX, maxX)),\n          y: Math.max(0, Math.min(newY, maxY))\n        }\n      },\n\n      stopDrag() {\n        this.isDragging = false\n        this.isDraggingState = false\n\n        // 移除dragging类，恢复过渡动画\n        this.$el.classList.remove('dragging')\n\n        // 清理所有事件监听器\n        this.cleanupDragListeners()\n      },\n\n      // 新增：更新缓存的尺寸信息\n      updateCachedDimensions() {\n        if (this.isMinimized) {\n          this.cachedDimensions = { ...DIMENSIONS.MINIMIZED }\n        } else if (this.isCollapsed) {\n          this.cachedDimensions = { ...DIMENSIONS.COLLAPSED }\n        } else {\n          // 展开状态，使用基础尺寸\n          this.cachedDimensions = { ...DIMENSIONS.EXPANDED }\n        }\n      },\n\n      // 获取组件高度（优化版本）\n      getComponentHeight() {\n        // 如果正在拖动，使用缓存的尺寸\n        if (this.isDraggingState) {\n          return this.cachedDimensions.height\n        }\n\n        // 正常状态下的计算\n        if (this.isMinimized) {\n          return 80 // 最小化状态高度\n        } else if (this.isCollapsed) {\n          return 120 // 收缩状态高度\n        } else {\n          // 展开状态，根据内容自适应\n          const baseHeight = 400 // 基础高度\n          const logHeight = this.displayLogs.length > 0 ? 60 : 40\n          const adjustmentHeight = this.needsAzimuthAdjustment || this.needsAltitudeAdjustment ? 120 : 80\n          return Math.min(baseHeight + logHeight + adjustmentHeight, window.innerHeight * 0.8)\n        }\n      },\n\n      // ========================================\n      // 界面状态控制方法\n      // ========================================\n      toggleMinimize() {\n        this.isMinimized = !this.isMinimized\n        this.isCollapsed = false\n        // 更新缓存的尺寸信息\n        this.updateCachedDimensions()\n        this.addLog(this.isMinimized ? this.$t('Interface Minimized') : this.$t('Interface Expanded'), 'info')\n      },\n\n      toggleCollapse() {\n        this.isCollapsed = !this.isCollapsed\n        // 更新缓存的尺寸信息\n        this.updateCachedDimensions()\n        this.addLog(this.isCollapsed ? this.$t('Interface Collapsed') : this.$t('Interface Expanded'), 'info')\n      },\n\n      resetCalibration() {\n        // 使用统一的内存清理方法\n        this.clearCachedData()\n\n        this.addLog(this.$t('Calibration Data Reset'), 'info')\n        this.$bus.$emit('AppSendMessage', 'Vue_Command', 'ResetAutoPolarAlignment')\n        this.$bus.$emit('ClearCalibrationPoints')\n        this.$bus.$emit('ClearStatusTextFromStarMap')\n      },\n\n      restoreCalibration() {\n        this.addLog(this.$t('Calibration Data Restored'), 'success')\n        this.$bus.$emit('AppSendMessage', 'Vue_Command', 'RestoreAutoPolarAlignment')\n      },\n\n      // ========================================\n      // 校准控制方法\n      // ========================================\n      startAutoCalibration() {\n        if (!this.isConnected) {\n          this.addLog(this.$t('Error: Mount Not Connected'), 'error')\n          return\n        }\n        if (this.isCalibrationRunning) {\n          this.stopAutoCalibration()\n          return\n        }\n        this.isCalibrationRunning = true\n        this.resetCalibration()\n        this.addLog(this.$t('Starting Auto Calibration'), 'info')\n        this.$bus.$emit('AppSendMessage', 'Vue_Command', 'StartAutoPolarAlignment')\n      },\n\n      stopAutoCalibration() {\n        this.isCalibrationRunning = false\n        this.addLog(this.$t('Auto Calibration Stopped'), 'warning')\n        this.$bus.$emit('AppSendMessage', 'Vue_Command', 'StopAutoPolarAlignment')\n      },\n      // ========================================\n      // 视场数据处理方法\n      // ========================================\n      updateFieldData(data) {\n        if (data && Array.isArray(data) && data.length >= 12) { // 修改长度检查，确保包含假极轴数据\n          const isValidData = data.every(val => typeof val === 'number' && !isNaN(val))\n          if (!isValidData) {\n            this.addLog(this.$t('Warning: Invalid Field Data Received'), 'warning')\n            return\n          }\n\n          this.fieldData = {\n            ra: data[0],\n            dec: data[1],\n            ra0: data[2],\n            dec0: data[3],\n            ra1: data[4],\n            dec1: data[5],\n            ra2: data[6],\n            dec2: data[7],\n            ra3: data[8],\n            dec3: data[9],\n            targetra: data[10],\n            targetdec: data[11],\n            fakePolarRA: data[12],\n            fakePolarDEC: data[13],\n            realPolarRA: data[14],\n            realPolarDEC: data[15]\n          }\n\n          // 保存上一次位置（在更新当前位置之前）\n          if (this.currentPosition.ra !== '00h 00m 00s') {\n            this.previousPosition = { ...this.currentPosition }\n          }\n\n          // 更新当前位置\n          this.currentPosition = {\n            ra: this.formatCoordinate(data[0], 'ra'),\n            dec: this.formatCoordinate(data[1], 'dec')\n          }\n\n          if (data[10] === -1 && data[11] === -1) {\n            // 校准点收集阶段\n            this.calibrationPhase = 'collecting'\n            const pointNumber = this.calibrationPoints.length + 1\n\n            // 添加调试信息\n            this.addLog(`准备收集校准点${pointNumber}，当前已有${this.calibrationPoints.length}个点`, 'info')\n\n            try {\n              this.drawCalibrationPointPolygon(data[0], data[1], pointNumber, this.fieldData)\n              this.addLog(this.$t('Calibration Point', [pointNumber, data[0].toFixed(4), data[1].toFixed(4)]), 'info')\n\n              // 保存校准点 - 限制最大数量\n              if (this.calibrationPoints.length < this.maxCalibrationPoints) {\n                this.calibrationPoints.push({\n                  ra: data[0],\n                  dec: data[1],\n                  index: pointNumber\n                })\n              } else {\n                // 如果超过最大数量，替换最旧的点\n                const oldestIndex = (pointNumber - 1) % this.maxCalibrationPoints\n                this.calibrationPoints[oldestIndex] = {\n                  ra: data[0],\n                  dec: data[1],\n                  index: pointNumber\n                }\n              }\n\n              this.addLog(`校准点${pointNumber}已添加，现在总共有${this.calibrationPoints.length}个点`, 'info')\n\n              // 如果收集了3个点，进入调整阶段\n              if (this.calibrationPoints.length === this.maxCalibrationPoints) {\n                this.calibrationPhase = 'adjusting'\n                this.addLog(this.$t('Three calibration points collected, entering adjustment phase'), 'success')\n              }\n            } catch (error) {\n              this.addLog(this.$t('Error processing calibration point', [error.message]), 'error')\n              console.error('处理校准点错误：', error)\n            }\n          } else if (data[10] !== -1 && data[11] !== -1) {\n            // 调整阶段：显示目标位置和假极轴\n            this.calibrationPhase = 'adjusting'\n            this.targetPoint = { ra: data[10], dec: data[11] }\n\n            try {\n              // 先清除所有之前的元素\n              this.addLog('调整模式：准备清除之前的校准元素', 'info')\n              this.$bus.$emit('ClearCalibrationPoints')\n              this.addLog('调整模式：清除命令已发送', 'info')\n\n              // 绘制校准点（如果已收集3个点）\n              if (this.calibrationPoints.length === this.maxCalibrationPoints) {\n                this.calibrationPoints.forEach((point, index) => {\n                  const pointCoordinates = this.calculateFieldCorners(point.ra, point.dec, this.fieldData, false)\n                  const pointColor = {\n                    stroke: \"#FFD700\",        // 金色边框：校准点\n                    strokeOpacity: 1,         // 边框不透明度\n                    fill: \"#FFD700\",          // 金色填充：校准点\n                    fillOpacity: 0.3          // 填充不透明度（半透明）\n                  }\n\n                  this.$bus.$emit('DrawCalibrationPointPolygon', pointCoordinates, pointColor,\n                    `Calibration_Point_${index + 1}`, `校准点${index + 1}`, \"#FFD700\")\n                })\n              }\n\n              // 绘制当前位置（蓝色）\n              const currentCoordinates = this.calculateFieldCorners(data[0], data[1], this.fieldData, false)\n              const currentColor = {\n                stroke: \"#00BFFF\",        // 蓝色边框：当前位置\n                strokeOpacity: 1,         // 边框不透明度\n                fill: \"#00BFFF\",          // 蓝色填充：当前位置\n                fillOpacity: 0.3          // 填充不透明度（半透明）\n              }\n\n              this.$bus.$emit('DrawCalibrationPointPolygon', currentCoordinates, currentColor,\n                'Current_Position', '当前位置', \"#00BFFF\")\n\n              // 绘制目标点（绿色圆形）\n              const targetColor = {\n                stroke: \"#4CAF50\",        // 绿色边框：目标点\n                strokeOpacity: 1,         // 边框不透明度\n                fill: \"#4CAF50\",          // 绿色填充：目标点\n                fillOpacity: 0.3          // 填充不透明度（半透明）\n              }\n\n              const { az, alt } = this.equatorialToHorizontal(data[10], data[11], new Date(Date.now()), this.$store.state.currentLocation.lat, this.$store.state.currentLocation.lng)\n              // console.log('当前位置目标点', data[6], data[7] + ' 转化为地平坐标为' + az + ' ' + alt);\n              // console.log('使用时间和地点', new Date(Date.now()), $store.state.currentLocation.lat, $store.state.currentLocation.lng);\n\n              this.$bus.$emit('DrawTargetPointCircle',\n                az,\n                alt,\n                targetColor,\n                'Target_Point',\n                '目标点'\n              )\n\n              // 绘制假极轴（紫色圆形）\n              if (data[12] !== -1 && data[13] !== -1 && !isNaN(data[12]) && !isNaN(data[13])) {\n                const { az, alt } = this.equatorialToHorizontal(data[12], data[13], new Date(Date.now()), this.$store.state.currentLocation.lat, this.$store.state.currentLocation.lng)\n                this.drawFakePolarAxis(az, alt)\n              }\n\n              this.addLog(`调整模式：当前位置(${data[0].toFixed(4)}, ${data[1].toFixed(4)}) 目标位置(${data[6].toFixed(4)}, ${data[7].toFixed(4)}) 假极轴(${data[8].toFixed(4)}, ${data[9].toFixed(4)})`, 'info')\n            } catch (error) {\n              this.addLog(this.$t('Error processing adjustment data', [error.message]), 'error')\n              console.error('处理调整数据错误：', error)\n            }\n          }\n        } else {\n          this.addLog(this.$t('Error: Invalid Field Data Format'), 'error')\n        }\n      },\n\n      // 绘制校准点\n      drawCalibrationPointPolygon(ra, dec, pointNumber, fieldData) {\n        this.addLog(this.$t('Drawing Calibration Point', [pointNumber, ra, dec]), 'info')\n\n        try {\n          const coordinates = this.calculateFieldCorners(ra, dec, fieldData)\n          this.addLog(this.$t('Calculated Field Corner Coordinates', [JSON.stringify(coordinates)]), 'info')\n\n          // 验证坐标有效性\n          const validCoordinates = coordinates.every((coord, index) => {\n            const isValid = coord && typeof coord.ra === 'number' && typeof coord.dec === 'number' &&\n              !isNaN(coord.ra) && !isNaN(coord.dec) && isFinite(coord.ra) && isFinite(coord.dec)\n            if (!isValid) {\n              this.addLog(this.$t('Warning: Invalid Coordinate Point', [index, JSON.stringify(coord)]), 'warning')\n            }\n            return isValid\n          })\n\n          if (!validCoordinates) {\n            this.addLog(this.$t('Invalid Field Coordinates'), 'error')\n            return\n          }\n\n          const color = this.getCalibrationPointColor()\n\n          // 添加文本标签\n          const label = `校准点${pointNumber}`\n          const labelColor = \"#FFFFFF\"\n\n          this.addLog(this.$t('Sending Draw Calibration Event', [pointNumber]), 'info')\n          this.$bus.$emit('DrawCalibrationPointPolygon', coordinates, color, `Calibration_${pointNumber}`, label, labelColor)\n\n        } catch (error) {\n          this.addLog(this.$t('Error Drawing Calibration Point', [error.message]), 'error')\n          console.error('绘制校准点错误：', error)\n        }\n      },\n\n      // 清除所有校准点\n      clearCalibrationPoints() {\n        this.addLog(this.$t('Clearing All Calibration Points'), 'info')\n        this.$bus.$emit('ClearCalibrationPoints')\n        this.$bus.$emit('ClearStatusTextFromStarMap')\n      },\n\n      /**\n       * 绘制极轴校准调整点\n       * 在星图上绘制当前位置、目标位置、校准点等关键位置标记\n       * @param {number} currentRa - 当前赤经位置\n       * @param {number} currentDec - 当前赤纬位置  \n       * @param {number} targetRa - 目标赤经位置\n       * @param {number} targetDec - 目标赤纬位置\n       * @param {object} fieldData - 视场数据（包含视场边界信息）\n       * @param {boolean} isTimerUpdate - 是否为定时器更新（用于区分手动更新和自动更新）\n       */\n      drawAdjustmentPoints(currentRa, currentDec, targetRa, targetDec, fieldData, isTimerUpdate = false) {\n        // 这个方法现在主要用于校准点收集阶段\n        // 调整阶段的绘制逻辑已经移到updateFieldData方法中\n\n        this.addLog(this.$t('Starting Draw Adjustment Points', [currentRa, currentDec, targetRa, targetDec]), 'info')\n\n        try {\n          // 只在校准点收集阶段使用这个方法\n          if (this.calibrationPhase === 'collecting') {\n            // 绘制校准点收集阶段的逻辑\n            const currentCoordinates = this.calculateFieldCorners(currentRa, currentDec, fieldData, false)\n            const currentColor = {\n              stroke: \"#00BFFF\",        // 蓝色边框：当前位置\n              strokeOpacity: 1,         // 边框不透明度\n              fill: \"#00BFFF\",          // 蓝色填充：当前位置\n              fillOpacity: 0.3          // 填充不透明度（半透明）\n            }\n\n            this.$bus.$emit('DrawCalibrationPointPolygon', currentCoordinates, currentColor,\n              'Current_Position', '当前位置', \"#00BFFF\")\n          }\n\n        } catch (error) {\n          this.addLog(this.$t('Error Drawing Adjustment Points', [error.message]), 'error')\n          console.error('绘制调整点错误：', error)\n        }\n      },\n\n      /**\n       * 计算视场的五个角点坐标\n       * @param {number} centerRa - 视场中心的赤经坐标\n       * @param {number} centerDec - 视场中心的赤纬坐标\n       * @param {object} fieldData - 视场数据（包含视场边界信息）\n       * @param {boolean} useDefaultSize - 是否使用默认视场大小（用于目标点等固定位置）\n       * @returns {Array} 包含5个角点坐标的数组，用于绘制多边形\n       */\n      calculateFieldCorners(centerRa, centerDec, fieldData, useDefaultSize = false) {\n        this.addLog(this.$t('Calculating Field Corners', [centerRa, centerDec]), 'info')\n\n        // 如果指定使用默认大小或者没有视场数据，使用默认的0.5度视场大小\n        if (useDefaultSize || !fieldData) {\n          this.addLog(this.$t('Using Default Field Size: 0.5 Degrees'), 'info')\n          const fieldSize = 0.5\n          const coordinates = [\n            { ra: centerRa + fieldSize / 2, dec: centerDec + fieldSize / 2 },\n            { ra: centerRa - fieldSize / 2, dec: centerDec + fieldSize / 2 },\n            { ra: centerRa - fieldSize / 2, dec: centerDec - fieldSize / 2 },\n            { ra: centerRa + fieldSize / 2, dec: centerDec - fieldSize / 2 },\n            { ra: centerRa + fieldSize / 2, dec: centerDec + fieldSize / 2 }\n          ]\n          this.addLog(this.$t('Default Field Corners', [JSON.stringify(coordinates)]), 'info')\n          return coordinates\n        }\n\n        // 如果有视场数据且不强制使用默认大小，基于传入的中心点坐标计算视场角点\n        // 这种情况主要用于当前位置的显示，需要反映实际的视场大小\n        const { ra0, dec0, ra1, dec1, ra2, dec2, ra3, dec3 } = fieldData\n\n        // 计算视场的实际大小（RA和DEC方向的跨度）\n   \n\n        // 基于传入的中心点坐标，计算视场的五个角点\n        const coordinates = [\n          { ra: ra0, dec: dec0 },     // 右上角\n          { ra: ra1, dec: dec1 },     // 左上角\n          { ra: ra2, dec: dec2 },     // 左下角\n          { ra: ra3, dec: dec3 },     // 右下角\n          { ra: ra0, dec: dec0 }      // 回到右上角（闭合多边形）\n        ]\n\n        this.addLog(this.$t('Using Field Data', [ra0, dec0, ra1, dec1, ra2, dec2, ra3, dec3]), 'info')\n        this.addLog(this.$t('Field Corner Calculation Result', [JSON.stringify(coordinates)]), 'info')\n        return coordinates\n      },\n\n\n\n      // ========================================\n      // 格式化方法\n      // ========================================\n      formatTime(timestamp) {\n        if (!timestamp) return ''\n        const date = new Date(timestamp)\n        return date.toLocaleTimeString('zh-CN', {\n          hour12: false,\n          hour: '2-digit',\n          minute: '2-digit',\n          second: '2-digit'\n        })\n      },\n\n      formatAdjustmentValue(value) {\n        if (!Number.isFinite(value)) return `0.0${this.unitGlyph(this.adjustmentUnit)}`\n        // value 的单位 = props.adjustmentUnit\n        const valArcmin = this.unitToArcmin(value, this.adjustmentUnit)\n        // 展示单位仍然用 props.adjustmentUnit（也可改成固定‘arcmin’）\n        return this.formatWithUnit(valArcmin, this.adjustmentUnit, 1)\n      },\n\n      // 格式化坐标显示\n      formatCoordinate(value, type) {\n        if (value === null || value === undefined || isNaN(value)) {\n          return type === 'ra' ? '00h 00m 00s' : '+00° 00\\' 00\"'\n        }\n\n        if (type === 'ra') {\n          // 格式化RA为时分秒格式\n          const hours = Math.floor(value / 15)\n          const minutes = Math.floor((value % 15) * 4)\n          const seconds = Math.floor(((value % 15) * 4 - minutes) * 60)\n          return `${hours.toString().padStart(2, '0')}h ${minutes.toString().padStart(2, '0')}m ${seconds.toString().padStart(2, '0')}s`\n        } else {\n          // 格式化DEC为度分秒格式\n          const sign = value >= 0 ? '+' : '-'\n          const absValue = Math.abs(value)\n          const degrees = Math.floor(absValue)\n          const minutes = Math.floor((absValue - degrees) * 60)\n          const seconds = Math.floor(((absValue - degrees) * 60 - minutes) * 60)\n          return `${sign}${degrees.toString().padStart(2, '0')}° ${minutes.toString().padStart(2, '0')}' ${seconds.toString().padStart(2, '0')}\"`\n        }\n      },\n\n\n      // ========================================\n      // 辅助方法\n      // ========================================\n      parseCoordinate(value, type) {\n        if (typeof value === 'string') {\n          if (type === 'ra') {\n            // 解析时分秒格式 \"00h 00m 00s\"\n            const match = value.match(/(\\d+)h\\s*(\\d+)m\\s*(\\d+)s/)\n            if (match) {\n              const hours = parseInt(match[1])\n              const minutes = parseInt(match[2])\n              const seconds = parseInt(match[3])\n              return hours + minutes / 60 + seconds / 3600\n            }\n          } else {\n            // 解析度分秒格式 \"+00° 00' 00\"\"\n            const match = value.match(/([+-]?)(\\d+)°\\s*(\\d+)'\\s*(\\d+)\"/)\n            if (match) {\n              const sign = match[1] === '-' ? -1 : 1\n              const degrees = parseInt(match[2])\n              const minutes = parseInt(match[3])\n              const seconds = parseInt(match[4])\n              return sign * (degrees + minutes / 60 + seconds / 3600)\n            }\n          }\n        }\n        return null\n      },\n\n      addStatusTextToStarMap() {\n        // 添加状态文本到星图\n        const statusText = {\n          text: `极轴校准调整中 - 校准点: ${this.calibrationPoints.length}/3`,\n          position: { ra: this.currentPosition.ra, dec: this.currentPosition.dec },\n          color: \"#FFFFFF\",\n          fontSize: 14,\n          backgroundColor: \"rgba(0, 0, 0, 0.7)\"\n        }\n\n        // 发送状态文本到星图\n        // this.$bus.$emit('AddStatusTextToStarMap', statusText)\n      },\n\n      getStepClass(index) {\n        // 根据进度百分比确定节点状态\n        const progress = this.progressPercentage\n\n        switch (index) {\n          case 0: // 初始化节点\n            if (progress >= PROGRESS_THRESHOLDS.INITIALIZATION) return { completed: true }\n            if (progress >= 0) return { current: true }\n            return {}\n\n          case 1: // 第一次校准节点\n            if (progress >= PROGRESS_THRESHOLDS.FIRST_CALIBRATION) return { completed: true }\n            if (progress >= PROGRESS_THRESHOLDS.INITIALIZATION) return { current: true }\n            return {}\n\n          case 2: // 第二次校准节点\n            if (progress >= PROGRESS_THRESHOLDS.SECOND_CALIBRATION) return { completed: true }\n            if (progress >= PROGRESS_THRESHOLDS.FIRST_CALIBRATION) return { current: true }\n            return {}\n\n          case 3: // 第三次校准节点\n            if (progress >= PROGRESS_THRESHOLDS.THIRD_CALIBRATION) return { completed: true }\n            if (progress >= PROGRESS_THRESHOLDS.SECOND_CALIBRATION) return { current: true }\n            return {}\n\n          default:\n            return {}\n        }\n      },\n\n      getAzimuthAction(azVal) {\n        if (!Number.isFinite(azVal)) return ''\n        const arcmin = this.unitToArcmin(azVal, this.adjustmentUnit)\n        if (Math.abs(arcmin) <= this.deadbandArcmin) return this.$t('No adjustment needed')\n        const dir = this.azLabelBySign(arcmin)\n        // 输出单位与 props.adjustmentUnit 保持一致\n        return `${dir} ${this.formatWithUnit(arcmin, this.adjustmentUnit, 1)}`\n      },\n\n      getAltitudeAction(altVal) {\n        if (!Number.isFinite(altVal)) return ''\n        const arcmin = this.unitToArcmin(altVal, this.adjustmentUnit)\n        if (Math.abs(arcmin) <= this.deadbandArcmin) return this.$t('No adjustment needed')\n        const dir = this.altLabelBySign(arcmin)\n        return `${dir} ${this.formatWithUnit(arcmin, this.adjustmentUnit, 1)}`\n      },\n\n\n\n      // ========================================\n      // 日志方法\n      // ========================================\n      addLog(message, level = 'info') {\n        const log = {\n          id: Date.now() + Math.random(),\n          message,\n          level,\n          timestamp: new Date()\n        }\n        \n        // 生产环境减少console输出\n        if (process.env.NODE_ENV === 'development') {\n          console.log(log.message)\n        }\n        \n        // 使用循环数组优化内存使用\n        if (this.logs.length < this.logCapacity) {\n          this.logs.push(log)\n        } else {\n          // 循环覆盖旧日志\n          this.logs[this.logIndex] = log\n          this.logIndex = (this.logIndex + 1) % this.logCapacity\n        }\n      },\n\n      clearLogs() {\n        this.logs = []\n        this.logIndex = 0\n      },\n\n      // ========================================\n      // 极轴校准状态更新方法\n      // ========================================\n      calculatePolarAxisOffset() {\n        this.polarAxisOffset = {\n          azimuth: this.adjustment.azimuth,\n          altitude: this.adjustment.altitude\n        }\n      },\n\n      updatePolarAlignmentState(stateNumber, logMessage, progress) {\n        if (logMessage && typeof logMessage === 'string') {\n          let level = 'info'\n          if (logMessage.toLowerCase().includes('error') || logMessage.toLowerCase().includes('失败')) {\n            level = 'error'\n          } else if (logMessage.toLowerCase().includes('warning') || logMessage.toLowerCase().includes('警告')) {\n            level = 'warning'\n          } else if (logMessage.toLowerCase().includes('success') || logMessage.toLowerCase().includes('成功') || logMessage.toLowerCase().includes('完成')) {\n            level = 'success'\n          }\n          this.addLog(logMessage, level)\n        }\n\n        if (progress !== undefined && progress !== null) {\n          this.currentProgress = progress\n\n          if (progress >= 0 && progress <= 100) {\n            // 根据进度更新校准状态\n            if (progress >= 0 && progress < 15) {\n              // 初始化阶段\n              this.calibrationPoints = []\n              this.isCalibrationComplete = false\n              this.isPolarAligned = false\n            } else if (progress >= 15 && progress < 25) {\n              // 第一次校准阶段 - 移除模拟数据添加，实际校准点由updateFieldData处理\n              // 这里只更新状态，不添加模拟校准点\n            } else if (progress >= 25 && progress < 50) {\n              // 第二次校准阶段 - 移除模拟数据添加，实际校准点由updateFieldData处理\n              // 这里只更新状态，不添加模拟校准点\n            } else if (progress >= 50 && progress < 75) {\n              // 第三次校准阶段 - 移除模拟数据添加，实际校准点由updateFieldData处理\n              // 这里只更新状态，不添加模拟校准点\n            } else if (progress >= 75 && progress < 95) {\n              // 循环校准调整阶段\n              this.isCalibrationComplete = true\n              this.calculatePolarAxisOffset()\n\n              // 检测校准循环\n              if (progress < this.lastCalibrationProgress && this.lastCalibrationProgress >= 75) {\n                this.calibrationLoopCount++\n                this.addLog(this.$t('Calibration Round Started', [this.calibrationLoopCount]), 'info')\n              }\n\n              // 在循环校准阶段，进度可能会在75-95之间波动\n              // 这表示系统正在进行多次校准调整\n              if (progress > 85) {\n                this.addLog(this.$t('Calibration Progress Info', [Math.round(progress), this.calibrationLoopCount]), 'info')\n              }\n\n              this.lastCalibrationProgress = progress\n            } else if (progress >= 95 && progress <= 100) {\n              // 最终验证阶段\n              this.isCalibrationComplete = true\n              this.calculatePolarAxisOffset()\n\n              if (Math.abs(this.polarAxisOffset.azimuth) < 1.0 && Math.abs(this.polarAxisOffset.altitude) < 1.0) {\n                this.isPolarAligned = true\n                this.addLog(this.$t('Polar Alignment Completed'), 'success')\n              } else {\n                this.addLog(this.$t('Polar Alignment Needs Manual Adjustment'), 'warning')\n              }\n            }\n          }\n        }\n      },\n\n      // ========================================\n      // 坐标转换方法\n      // ========================================\n      /**\n       * 赤道坐标 (RA, Dec) → 地平坐标 (Az, Alt)\n       * @param {number} raDeg 赤经 (度, 0~360)\n       * @param {number} decDeg 赤纬 (度, -90~+90)\n       * @param {Date} dateUTC 观测时间 (UTC 时间)\n       * @param {number} latDeg 观测点纬度 (度, 北正南负)\n       * @param {number} lonDeg 观测点经度 (度, 东正西负)\n       * @returns {{az: number, alt: number}} 方位角/高度角 (度)\n       */\n      equatorialToHorizontal(raDeg, decDeg, dateUTC, latDeg, lonDeg) {\n        // 工具\n        const toJD = d => (Number(d) / 86400000) + 2440587.5; // Date/ms → JD\n        const d2r = x => x * Math.PI / 180, r2d = x => x * 180 / Math.PI;\n        const norm360 = a => ((a % 360) + 360) % 360;\n        const clamp = (x, lo = -1, hi = 1) => Math.min(hi, Math.max(lo, x));\n\n        // 入参归一化 + 硬校验\n        raDeg = Number(raDeg);\n        decDeg = Number(decDeg);\n        latDeg = Number(latDeg);\n        lonDeg = Number(lonDeg);\n        const tms = Number(dateUTC); // Date 或时间戳都可\n\n        if (process.env.NODE_ENV === 'development') {\n          console.log('EQ→HOR 入参:', { raDeg, decDeg, latDeg, lonDeg, dateUTC, tms });\n        }\n\n        if (![raDeg, decDeg, latDeg, lonDeg, tms].every(Number.isFinite)) {\n          console.error('EQ→HOR 入参非法:', { raDeg, decDeg, latDeg, lonDeg, dateUTC, tms });\n          return { az: NaN, alt: NaN };\n        }\n\n        try {\n          // 1) JD & GMST\n          const JD = toJD(tms);\n          const d = JD - 2451545.0;\n          let GMST = norm360(280.46061837 + 360.98564736629 * d); // 度\n\n          // 2) LST（东经为正）\n          let LST = norm360(GMST + lonDeg);\n\n          // 3) HA（-180~180 更稳）\n          let HA = LST - raDeg;\n          HA = ((HA + 180) % 360) - 180;\n\n          // 4) Alt / Az（稳定形式）\n          const ha = d2r(HA);\n          const dec = d2r(decDeg);\n          const lat = d2r(latDeg);\n\n          const sinAlt = clamp(\n            Math.sin(dec) * Math.sin(lat) + Math.cos(dec) * Math.cos(lat) * Math.cos(ha)\n          );\n          const alt = Math.asin(sinAlt);\n          const y = -Math.sin(ha) * Math.cos(dec);\n          const x = Math.sin(dec) * Math.cos(lat) - Math.cos(dec) * Math.sin(lat) * Math.cos(ha);\n          const az = Math.atan2(y, x);\n\n          const altDeg = r2d(alt);\n          const azDeg = norm360(r2d(az));\n\n          if (process.env.NODE_ENV === 'development') {\n            console.log('EQ→HOR 结果:', {\n              JD, GMST, LST, HA,\n              haRad: ha, decRad: dec, latRad: lat,\n              az: azDeg, alt: altDeg\n            });\n          }\n\n          return { az: azDeg, alt: altDeg };\n        } catch (e) {\n          console.error('EQ→HOR 计算异常:', e, {\n            raDeg, decDeg, latDeg, lonDeg, dateUTC, tms\n          });\n          return { az: NaN, alt: NaN };\n        }\n      },\n\n\n\n\n\n      // === 增强的卡片信息更新方法 ===\n      updateCardInfo(currentRa, currentDec, targetRa, targetDec, azimuthVal, altitudeVal, raAdjustment, decAdjustment, unitHint) {\n        const parseValue = v => (v === null || v === '' || v === undefined) ? 0 : (Number(v) || 0)\n\n        const currentRaNum = parseValue(currentRa)\n        const currentDecNum = parseValue(currentDec)\n        const targetRaNum = parseValue(targetRa)\n        const targetDecNum = parseValue(targetDec)\n        const azVal = parseValue(azimuthVal)\n        const altVal = parseValue(altitudeVal)\n\n        // 1) 位置显示（原样）\n        this.currentPosition.ra = this.formatCoordinate(currentRaNum, 'ra')\n        this.currentPosition.dec = this.formatCoordinate(currentDecNum, 'dec')\n        this.targetPosition.ra = this.formatCoordinate(targetRaNum, 'ra')\n        this.targetPosition.dec = this.formatCoordinate(targetDecNum, 'dec')\n\n        // 2) 调整量：以传入单位为准写入（默认用 props.adjustmentUnit）\n        const inUnit = unitHint || this.adjustmentUnit\n        // 如果传入是\"度\"，但你 props 设为了\"arcmin\"，也没关系——显示会自动换算\n        // 这里保存\"原始数 + 它的单位（通过 props）\"\n        this.adjustment.azimuth = azVal\n        this.adjustment.altitude = altVal\n        this.adjustmentUnit = inUnit  // 如果希望每次随数据切换单位，可加入这一行\n\n        // 3) 在调整阶段，每次接收到调整数据时增加校准轮数\n        if (this.calibrationPhase === 'adjusting') {\n          this.calibrationLoopCount++\n          this.addLog(this.$t('Calibration Round Started', [this.calibrationLoopCount]), 'info')\n        }\n\n        // 4) 极轴完成判定（用角分比较）\n        const azArcmin = this.unitToArcmin(azVal, inUnit)\n        const altArcmin = this.unitToArcmin(altVal, inUnit)\n        this.isPolarAligned = Math.abs(azArcmin) < 1.0 && Math.abs(altArcmin) < 1.0\n\n        if (process.env.NODE_ENV === 'development') {\n          console.log('PolarAlignment update:', {\n            unit: inUnit,\n            adj_raw: { azimuth: azVal, altitude: altVal },\n            adj_arcmin: { az: azArcmin, alt: altArcmin },\n            isPolarAligned: this.isPolarAligned,\n            calibrationRound: this.calibrationLoopCount\n          })\n        }\n      },\n\n\n      /**\n       * 根据三个校准点计算假极轴位置\n       * 使用三点极轴校准算法\n       */\n      calculateFakePolarAxis() {\n        if (this.calibrationPoints.length !== this.maxCalibrationPoints) {\n          this.addLog('需要3个校准点才能计算假极轴位置', 'warning')\n          return false\n        }\n\n        try {\n          const [p1, p2, p3] = this.calibrationPoints\n\n          // 将三个点转换为笛卡尔坐标\n          const cart1 = this.equatorialToCartesian(p1.ra, p1.dec)\n          const cart2 = this.equatorialToCartesian(p2.ra, p2.dec)\n          const cart3 = this.equatorialToCartesian(p3.ra, p3.dec)\n\n          // 计算两个向量\n          const v1 = {\n            x: cart2.x - cart1.x,\n            y: cart2.y - cart1.y,\n            z: cart2.z - cart1.z\n          }\n          const v2 = {\n            x: cart3.x - cart1.x,\n            y: cart3.y - cart1.y,\n            z: cart3.z - cart1.z\n          }\n\n          // 计算法向量（叉积）\n          const normal = this.crossProduct(v1, v2)\n\n          // 检查法向量是否为零向量\n          const normalLength = this.vectorLength(normal)\n          if (normalLength < 1e-10) {\n            this.addLog('三个校准点共线，无法计算假极轴位置', 'error')\n            return false\n          }\n\n          // 归一化法向量\n          const unitNormal = this.normalizeVector(normal)\n\n          // 计算与单位球面的交点（假极点）\n          const fakePolarPoint = {\n            x: unitNormal.x,\n            y: unitNormal.y,\n            z: unitNormal.z\n          }\n\n          // 选择正确的交点（z坐标为正的）\n          if (fakePolarPoint.z < 0) {\n            fakePolarPoint.x = -fakePolarPoint.x\n            fakePolarPoint.y = -fakePolarPoint.y\n            fakePolarPoint.z = -fakePolarPoint.z\n          }\n\n          // 将假极点转换为赤道坐标\n          const fakePolarEquatorial = this.cartesianToEquatorial(fakePolarPoint)\n\n          // 保存假极轴位置\n          this.fakePolarAxis.ra = fakePolarEquatorial.ra\n          this.fakePolarAxis.dec = fakePolarEquatorial.dec\n          this.fakePolarAxis.calculated = true\n\n          this.addLog(`假极轴位置计算完成: RA=${fakePolarEquatorial.ra.toFixed(4)}°, DEC=${fakePolarEquatorial.dec.toFixed(4)}°`, 'success')\n\n          return true\n        } catch (error) {\n          this.addLog(`计算假极轴位置时出错: ${error.message}`, 'error')\n          console.error('计算假极轴位置错误：', error)\n          return false\n        }\n      },\n\n      /**\n       * 将赤道坐标转换为笛卡尔坐标\n       */\n      equatorialToCartesian(ra, dec, radius = 1) {\n        const raRad = ra * Math.PI / 180.0\n        const decRad = dec * Math.PI / 180.0\n\n        return {\n          x: radius * Math.cos(decRad) * Math.cos(raRad),\n          y: radius * Math.cos(decRad) * Math.sin(raRad),\n          z: radius * Math.sin(decRad)\n        }\n      },\n\n      /**\n       * 将笛卡尔坐标转换为赤道坐标\n       */\n      cartesianToEquatorial(cart) {\n        const radius = Math.sqrt(cart.x * cart.x + cart.y * cart.y + cart.z * cart.z)\n\n        const dec = Math.asin(cart.z / radius) * 180.0 / Math.PI\n        let ra = Math.atan2(cart.y, cart.x) * 180.0 / Math.PI\n\n        // 确保RA在0-360度范围内\n        if (ra < 0) ra += 360.0\n\n        return { ra, dec }\n      },\n\n      /**\n       * 计算两个向量的叉积\n       */\n      crossProduct(v1, v2) {\n        return {\n          x: v1.y * v2.z - v1.z * v2.y,\n          y: v1.z * v2.x - v1.x * v2.z,\n          z: v1.x * v2.y - v1.y * v2.x\n        }\n      },\n\n      /**\n       * 计算向量长度\n       */\n      vectorLength(v) {\n        return Math.sqrt(v.x * v.x + v.y * v.y + v.z * v.z)\n      },\n\n      /**\n       * 归一化向量\n       */\n      normalizeVector(v) {\n        const length = this.vectorLength(v)\n        return {\n          x: v.x / length,\n          y: v.y / length,\n          z: v.z / length\n        }\n      },\n\n      /**\n       * 绘制假极轴位置\n       */\n      drawFakePolarAxis(fakePolarRA, fakePolarDEC) {\n        this.addLog(`绘制假极轴位置: RA=${fakePolarRA.toFixed(4)}°, DEC=${fakePolarDEC.toFixed(4)}°`, 'info')\n\n        try {\n          // 定义假极轴的颜色（紫色）\n          const fakePolarColor = {\n            stroke: \"#9C27B0\",        // 紫色边框\n            strokeOpacity: 1,         // 边框不透明度\n            fill: \"#9C27B0\",          // 紫色填充\n            fillOpacity: 0.3          // 填充不透明度（半透明）\n          }\n\n          // 使用专门的假极轴绘制事件，避免与目标点冲突\n          this.$bus.$emit('DrawFakePolarAxisCircle',\n            fakePolarRA,\n            fakePolarDEC,\n            fakePolarColor,\n            'FakePolarAxis',\n            '假极轴'\n          )\n\n          this.addLog(`假极轴位置已绘制: RA=${fakePolarRA.toFixed(4)}°, DEC=${fakePolarDEC.toFixed(4)}°`, 'info')\n\n        } catch (error) {\n          this.addLog(`绘制假极轴位置时出错: ${error.message}`, 'error')\n          console.error('绘制假极轴位置错误：', error)\n        }\n      },\n      // ========================================\n      // 单位换算方法\n      // ========================================\n      unitToArcmin(val, unit) {\n        if (!Number.isFinite(val)) return NaN\n        if (unit === 'deg') return val * 60\n        if (unit === 'arcsec') return val / 60\n        return val // 'arcmin'\n      },\n      arcminToUnit(valArcmin, unit) {\n        if (!Number.isFinite(valArcmin)) return NaN\n        if (unit === 'deg') return valArcmin / 60\n        if (unit === 'arcsec') return valArcmin * 60\n        return valArcmin\n      },\n      unitGlyph(unit) {\n        if (unit === 'deg') return '°'\n        if (unit === 'arcsec') return '″'\n        return '′' // arcmin\n      },\n\n      // ========================================\n      // 左右/上下映射（面向极点）方法\n      // ========================================\n      // 根据当前坐标计算朝向哪个极点\n      calculateFacingPole() {\n        if (!this.$store || !this.$store.state.currentLocation) {\n          return 'north' // 默认返回北极\n        }\n        \n        const lat = this.$store.state.currentLocation.lat\n        // 北半球（纬度 > 0）面向北极，南半球（纬度 < 0）面向南极\n        return lat >= 0 ? 'north' : 'south'\n      },\n\n      // azSign > 0 = 朝东；azSign < 0 = 朝西\n      azLabelBySign(azSign) {\n        // 动态计算朝向极点，而不是使用 props\n        const facingPole = this.calculateFacingPole()\n        // 面向北极点：东=→右，西=←左；面向南极点则相反\n        const east = (facingPole === 'north') ? this.$t('→ Right (East)') : this.$t('← Left (East)')\n        const west = (facingPole === 'north') ? this.$t('← Left (West)') : this.$t('→ Right (West)')\n        return azSign >= 0 ? east : west\n      },\n      // altSign > 0 = 抬高；altSign < 0 = 降低\n      altLabelBySign(altSign) {\n        return altSign >= 0 ? this.$t('↑ Up (Raise)') : this.$t('↓ Down (Lower)')\n      },\n\n      // ========================================\n      // 统一格式化\"数值 + 单位\"方法\n      // ========================================\n      formatWithUnit(valInArcmin, unit, digits = 1) {\n        const v = this.arcminToUnit(Math.abs(valInArcmin), unit)\n        const glyph = this.unitGlyph(unit)\n        return `${v.toFixed(digits)}${glyph}`\n      },\n\n      // ========================================\n      // 颜色工具方法\n      // ========================================\n      getCalibrationPointColor() {\n        return {\n          stroke: COLORS.WHITE,\n          strokeOpacity: 1,\n          fill: COLORS.WHITE,\n          fillOpacity: 0.2\n        }\n      },\n\n      getCurrentPositionColor() {\n        return {\n          stroke: \"#00BFFF\",\n          strokeOpacity: 1,\n          fill: \"#00BFFF\",\n          fillOpacity: 0.3\n        }\n      },\n\n      getTargetPointColor() {\n        return {\n          stroke: COLORS.SUCCESS,\n          strokeOpacity: 1,\n          fill: COLORS.SUCCESS,\n          fillOpacity: 0.3\n        }\n      },\n\n      getFakePolarAxisColor() {\n        return {\n          stroke: \"#9C27B0\",\n          strokeOpacity: 1,\n          fill: \"#9C27B0\",\n          fillOpacity: 0.3\n        }\n      },\n    },\n  }\n</script>\n\n<style scoped>\n/* === 最小化状态样式 === */\n.polar-alignment-minimized {\n  position: fixed;\n  width: 250px;\n  max-width: 80vw;\n  background: rgba(35, 35, 45, 0.95);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  border-radius: 8px;\n  backdrop-filter: blur(10px);\n  z-index: 1000;\n  cursor: move;\n  user-select: none;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);\n  transition: all 0.3s ease;\n  /* 添加背景隔离，防止操作映射到背景 */\n  isolation: isolate;\n  /* 移除contain属性，它可能阻止拖动事件 */\n  touch-action: none;\n  -webkit-tap-highlight-color: transparent;\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n\n/* 拖动状态：移除过渡动画和复杂效果 */\n.polar-alignment-minimized.dragging {\n  transition: none !important;\n  backdrop-filter: none !important;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2) !important;\n  touch-action: manipulation;\n}\n\n.polar-alignment-minimized:hover {\n  box-shadow: 0 6px 25px rgba(0, 0, 0, 0.4);\n}\n\n.polar-alignment-minimized.dragging:hover {\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2) !important;\n}\n\n.minimized-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 8px 12px;\n  background: rgba(60, 60, 70, 0.9);\n  border-radius: 8px 8px 0 0;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.minimized-drag-area {\n  display: flex;\n  align-items: center;\n  flex: 1;\n  cursor: move;\n  /* 确保拖动区域有正确的交互 */\n  user-select: none;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  touch-action: none;\n  -webkit-tap-highlight-color: transparent;\n}\n\n.minimized-icon {\n  color: #64b5f6;\n  font-size: 16px;\n  margin-right: 8px;\n}\n\n.minimized-title {\n  font-size: 12px;\n  font-weight: 600;\n  color: #ffffff;\n  flex: 1;\n}\n\n.minimized-controls {\n  display: flex;\n  gap: 4px;\n  /* 确保控制区域可以接收事件 */\n  position: relative;\n  z-index: 20;\n  pointer-events: auto;\n}\n\n.minimized-btn {\n  width: 24px;\n  height: 24px;\n  border: none;\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 4px;\n  color: #ffffff;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.2s ease;\n  /* 移动端触摸优化 */\n  touch-action: manipulation;\n  -webkit-tap-highlight-color: transparent;\n  /* 确保按钮可以正确点击 */\n  position: relative;\n  z-index: 10;\n  /* 确保按钮可以接收点击事件 */\n  pointer-events: auto;\n}\n\n.minimized-btn:hover {\n  background: rgba(255, 255, 255, 0.2);\n}\n\n.minimized-btn:active {\n  background: rgba(255, 255, 255, 0.3);\n  transform: scale(0.95);\n}\n\n.minimized-status {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 8px 12px;\n  font-size: 11px;\n}\n\n.status-indicator {\n  width: 6px;\n  height: 6px;\n  border-radius: 50%;\n  background: #f44336;\n  transition: all 0.3s ease;\n}\n\n.status-indicator.online {\n  background: #4caf50;\n  box-shadow: 0 0 4px rgba(76, 175, 80, 0.6);\n}\n\n.status-text {\n  color: rgba(255, 255, 255, 0.8);\n}\n\n/* === 完整控件样式 === */\n.polar-alignment-widget {\n  position: fixed;\n  width: 350px;\n  max-width: 90vw;\n  background: rgba(35, 35, 45, 0.95);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  border-radius: 8px;\n  backdrop-filter: blur(10px);\n  z-index: 1000;\n  cursor: move;\n  user-select: none;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);\n  transition: all 0.3s ease;\n  overflow: hidden;\n  /* 添加背景隔离，防止操作映射到背景 */\n  isolation: isolate;\n  /* 移除contain属性，它可能阻止拖动事件 */\n  touch-action: none;\n  -webkit-tap-highlight-color: transparent;\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n\n/* 拖动状态：移除过渡动画和复杂效果 */\n.polar-alignment-widget.dragging {\n  transition: none !important;\n  backdrop-filter: none !important;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2) !important;\n  touch-action: manipulation;\n}\n\n.polar-alignment-widget:hover {\n  box-shadow: 0 6px 25px rgba(0, 0, 0, 0.4);\n}\n\n.polar-alignment-widget.dragging:hover {\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2) !important;\n}\n\n.polar-alignment-widget.collapsed {\n  width: 300px;\n  max-width: 85vw;\n}\n\n/* === 控件头部样式 === */\n.widget-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 12px 16px;\n  background: rgba(60, 60, 70, 0.9);\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.header-drag-area {\n  display: flex;\n  align-items: center;\n  flex: 1;\n  cursor: move;\n  /* 确保拖动区域有正确的交互 */\n  user-select: none;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  /* 添加拖动时的视觉反馈 */\n  transition: background-color 0.2s ease;\n  /* 确保拖动区域有正确的指针事件 */\n  pointer-events: auto;\n  touch-action: none;\n  -webkit-tap-highlight-color: transparent;\n}\n\n.widget-header:hover {\n  background: rgba(60, 60, 70, 0.95);\n}\n\n.header-left {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  flex: 1;\n}\n\n.header-icon {\n  color: #64b5f6;\n  font-size: 18px;\n}\n\n.header-title {\n  font-size: 14px;\n  font-weight: 600;\n  color: #ffffff;\n}\n\n.connection-indicator {\n  display: flex;\n  align-items: center;\n}\n\n.status-dot {\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  background: #f44336;\n  transition: all 0.3s ease;\n}\n\n.status-dot.online {\n  background: #4caf50;\n  box-shadow: 0 0 6px rgba(76, 175, 80, 0.6);\n}\n\n.header-controls {\n  display: flex;\n  gap: 4px;\n  /* 确保控制区域可以接收事件 */\n  position: relative;\n  z-index: 20;\n  pointer-events: auto;\n}\n\n.header-btn {\n  width: 28px;\n  height: 28px;\n  border: none;\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 4px;\n  color: #ffffff;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.2s ease;\n  /* 移动端触摸优化 */\n  touch-action: manipulation;\n  -webkit-tap-highlight-color: transparent;\n  /* 确保按钮可以正确点击 */\n  position: relative;\n  z-index: 10;\n  /* 确保按钮可以接收点击事件 */\n  pointer-events: auto;\n}\n\n.header-btn:hover {\n  background: rgba(255, 255, 255, 0.2);\n}\n\n.header-btn:active {\n  background: rgba(255, 255, 255, 0.3);\n  transform: scale(0.95);\n}\n\n.header-btn.close-btn:hover {\n  background: #f44336;\n}\n\n/* === 控件内容样式 === */\n.widget-content {\n  transition: all 0.3s ease;\n  /* 确保内容区域有适当的背景隔离 */\n  background: rgba(35, 35, 45, 0.95);\n  position: relative;\n  z-index: 1;\n  /* 确保内容区域不会阻止拖动事件 */\n  pointer-events: auto;\n}\n\n/* 拖动状态：移除过渡动画 */\n.widget-content.dragging {\n  transition: none !important;\n}\n\n.widget-content.collapsed {\n  padding: 12px;\n}\n\n.widget-content.expanded {\n  padding: 16px;\n  max-height: 80vh;\n  overflow-y: auto;\n  /* 优化内容布局，充分利用空间 */\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  /* 确保内容充分利用可用空间 */\n  min-height: 0;\n  flex: 1;\n  /* 自适应高度 */\n  height: auto;\n}\n\n/* === 收缩状态样式 === */\n.collapsed-info {\n  display: flex;\n  align-items: center;\n  gap: 16px;\n}\n\n.collapsed-progress {\n  flex-shrink: 0;\n}\n\n.progress-circle {\n  width: 60px;\n  height: 60px;\n  border-radius: 50%;\n  background: conic-gradient(#64b5f6 0deg var(--progress, 0deg),\n      rgba(255, 255, 255, 0.1) var(--progress, 0deg) 360deg);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n}\n\n.progress-circle::before {\n  content: '';\n  position: absolute;\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  background: rgba(35, 35, 45, 0.95);\n}\n\n.progress-text {\n  position: relative;\n  z-index: 1;\n  font-size: 12px;\n  font-weight: 600;\n  color: #ffffff;\n}\n\n.collapsed-status {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n}\n\n.status-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 11px;\n}\n\n.status-label {\n  color: rgba(255, 255, 255, 0.7);\n}\n\n.status-value {\n  color: #ffffff;\n  font-weight: 600;\n  font-family: monospace;\n}\n\n.status-value.needs-adjustment {\n  color: #ff9800;\n}\n\n/* === 展开状态样式 === */\n.content-sections {\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  /* 优化布局，充分利用可用空间 */\n  width: 100%;\n  min-height: 0;\n}\n\n/* === 校准步骤进度条样式 === */\n.calibration-progress {\n  margin-bottom: 16px;\n}\n\n.progress-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 8px;\n}\n\n.progress-title {\n  font-size: 12px;\n  font-weight: 600;\n  color: #ffffff;\n}\n\n.calibration-loop-info {\n  font-size: 10px;\n  color: #ff9800;\n  font-weight: 500;\n  padding: 2px 6px;\n  background: rgba(255, 152, 0, 0.2);\n  border-radius: 4px;\n  animation: loop-pulse 2s infinite;\n}\n\n@keyframes loop-pulse {\n\n  0%,\n  100% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0.7;\n  }\n}\n\n.progress-bar {\n  position: relative;\n  width: 100%;\n  height: 8px;\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 4px;\n  overflow: visible;\n}\n\n.progress-fill {\n  height: 100%;\n  background: linear-gradient(90deg, #64b5f6, #4caf50);\n  border-radius: 4px;\n  transition: width 0.1s ease;\n}\n\n.progress-nodes {\n  position: absolute;\n  top: 50%;\n  left: 0;\n  right: 0;\n  transform: translateY(-50%);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.progress-node {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 2;\n}\n\n.node-circle {\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  background: rgba(255, 255, 255, 0.2);\n  border: 2px solid rgba(255, 255, 255, 0.3);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 10px;\n  font-weight: bold;\n  color: #ffffff;\n  transition: all 0.3s ease;\n}\n\n.progress-node.completed .node-circle {\n  background: #4caf50;\n  border-color: #4caf50;\n  box-shadow: 0 0 8px rgba(76, 175, 80, 0.4);\n}\n\n.progress-node.current .node-circle {\n  background: #64b5f6;\n  border-color: #64b5f6;\n  box-shadow: 0 0 8px rgba(100, 181, 246, 0.4);\n}\n\n.progress-node.adjustment-node .node-circle {\n  background: rgba(255, 152, 0, 0.3);\n  border-color: rgba(255, 152, 0, 0.5);\n}\n\n.progress-node.adjustment-node.active .node-circle {\n  background: #ff9800;\n  border-color: #ff9800;\n  box-shadow: 0 0 8px rgba(255, 152, 0, 0.4);\n}\n\n.progress-node.calibration-node .node-circle {\n  background: rgba(255, 152, 0, 0.3);\n  border-color: rgba(255, 152, 0, 0.5);\n}\n\n.progress-node.calibration-node.active .node-circle {\n  background: #ff9800;\n  border-color: #ff9800;\n  box-shadow: 0 0 8px rgba(255, 152, 0, 0.4);\n}\n\n.progress-node.calibration-node.looping .node-circle {\n  animation: calibration-pulse 2s infinite;\n}\n\n@keyframes calibration-pulse {\n  0% {\n    background: #ff9800;\n    box-shadow: 0 0 8px rgba(255, 152, 0, 0.4);\n  }\n\n  50% {\n    background: #ff5722;\n    box-shadow: 0 0 12px rgba(255, 152, 0, 0.6);\n  }\n\n  100% {\n    background: #ff9800;\n    box-shadow: 0 0 8px rgba(255, 152, 0, 0.4);\n  }\n}\n\n.progress-node.calibration-node.looping .node-circle i {\n  animation: calibration-rotate 2s linear infinite;\n}\n\n@keyframes calibration-rotate {\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n.progress-node.verification-node .node-circle {\n  background: rgba(76, 175, 80, 0.3);\n  border-color: rgba(76, 175, 80, 0.5);\n}\n\n.progress-node.verification-node.active .node-circle {\n  background: #4caf50;\n  border-color: #4caf50;\n  box-shadow: 0 0 8px rgba(76, 175, 80, 0.4);\n}\n\n.node-label {\n  position: absolute;\n  top: 100%;\n  left: 50%;\n  transform: translateX(-50%);\n  font-size: 9px;\n  color: rgba(255, 255, 255, 0.7);\n  font-weight: 500;\n  margin-top: 4px;\n  white-space: nowrap;\n  text-align: center;\n}\n\n.progress-node {\n  position: relative;\n}\n\n/* === 位置信息样式 === */\n.position-section {\n  margin-top: 16px;\n  padding-top: 16px;\n  border-top: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.position-grid {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: 1fr 1fr;\n  gap: 8px;\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 6px;\n  padding: 12px;\n}\n\n.position-cell {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 4px;\n  padding: 8px;\n  border-radius: 4px;\n  transition: all 0.3s ease;\n}\n\n.position-cell.current {\n  background: rgba(100, 181, 246, 0.1);\n  border: 1px solid rgba(100, 181, 246, 0.2);\n}\n\n.position-cell.target {\n  background: rgba(255, 152, 0, 0.1);\n  border: 1px solid rgba(255, 152, 0, 0.2);\n}\n\n.cell-label {\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.7);\n  font-weight: 500;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n}\n\n.cell-value {\n  font-size: 11px;\n  color: #ffffff;\n  font-family: monospace;\n  font-weight: 600;\n}\n\n/* === 调整指导样式 === */\n.adjustment-section {\n  margin-top: 16px;\n  padding-top: 16px;\n  border-top: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.adjustment-instructions {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.adjustment-item {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  padding: 12px;\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 6px;\n  transition: all 0.3s ease;\n  border: 1px solid transparent;\n}\n\n.adjustment-item.active {\n  background: rgba(255, 152, 0, 0.15);\n  border-color: #ff9800;\n}\n\n.adjustment-icon {\n  width: 28px;\n  height: 28px;\n  border-radius: 50%;\n  background: rgba(255, 255, 255, 0.1);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 14px;\n  color: #ffffff;\n  flex-shrink: 0;\n}\n\n.adjustment-item.active .adjustment-icon {\n  background: #ff9800;\n}\n\n.adjustment-details {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n}\n\n.adjustment-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.adjustment-type {\n  font-size: 12px;\n  color: #ffffff;\n  font-weight: 500;\n}\n\n.adjustment-value {\n  font-size: 18px;\n  color: #ffffff;\n  font-family: monospace;\n  font-weight: 700;\n  text-shadow: 0 0 4px rgba(255, 255, 255, 0.3);\n  letter-spacing: 1px;\n}\n\n.adjustment-action {\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.7);\n  font-weight: 500;\n}\n\n.adjustment-item.active .adjustment-action {\n  color: #ff9800;\n}\n\n/* === 操作按钮样式 === */\n.control-section {\n  margin-top: 16px;\n  padding-top: 16px;\n  border-top: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.action-buttons {\n  display: flex;\n  flex-direction: row;\n  gap: 10px;\n}\n\n.action-btn {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  padding: 12px 16px;\n  border: none;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 13px;\n  font-weight: 500;\n  transition: all 0.3s ease;\n  pointer-events: auto;\n  min-height: 40px;\n  touch-action: manipulation;\n  position: relative;\n  flex: 1;\n}\n\n.action-btn.primary {\n  background: linear-gradient(135deg, #64b5f6, #42a5f5);\n  color: #ffffff;\n  box-shadow: 0 2px 6px rgba(100, 181, 246, 0.3);\n}\n\n.action-btn.primary:hover:not(:disabled) {\n  background: linear-gradient(135deg, #42a5f5, #2196f3);\n  transform: translateY(-1px);\n  box-shadow: 0 4px 12px rgba(100, 181, 246, 0.4);\n}\n\n.action-btn.secondary {\n  background: rgba(255, 255, 255, 0.1);\n  color: #ffffff;\n  border: 1px solid rgba(255, 255, 255, 0.2);\n}\n\n.action-btn.secondary:hover:not(:disabled) {\n  background: rgba(255, 255, 255, 0.2);\n  transform: translateY(-1px);\n}\n\n.action-btn.success {\n  background: linear-gradient(135deg, #4caf50, #43a047);\n  color: #ffffff;\n  box-shadow: 0 2px 6px rgba(76, 175, 80, 0.3);\n}\n\n.action-btn.success:hover:not(:disabled) {\n  background: linear-gradient(135deg, #43a047, #388e3c);\n  transform: translateY(-1px);\n  box-shadow: 0 4px 12px rgba(76, 175, 80, 0.4);\n}\n\n.action-btn.restore {\n  background: linear-gradient(135deg, #ff9800, #f57c00);\n  color: #ffffff;\n  box-shadow: 0 2px 6px rgba(255, 152, 0, 0.3);\n}\n\n.action-btn.restore:hover:not(:disabled) {\n  background: linear-gradient(135deg, #f57c00, #ef6c00);\n  transform: translateY(-1px);\n  box-shadow: 0 4px 12px rgba(255, 152, 0, 0.4);\n}\n\n.action-btn:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n  transform: none !important;\n  box-shadow: none !important;\n}\n\n/* === 日志显示样式 === */\n.log-section {\n  margin-top: 16px;\n  padding-top: 16px;\n  border-top: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.log-display {\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 6px;\n  padding: 10px;\n}\n\n.latest-log {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 8px 10px;\n  border-radius: 4px;\n  font-size: 11px;\n  background: rgba(255, 255, 255, 0.05);\n  border-left: 3px solid transparent;\n}\n\n.latest-log.info {\n  border-left-color: #64b5f6;\n}\n\n.latest-log.warning {\n  border-left-color: #ff9800;\n}\n\n.latest-log.success {\n  border-left-color: #4caf50;\n}\n\n.latest-log.error {\n  border-left-color: #f44336;\n}\n\n.log-timestamp {\n  color: rgba(255, 255, 255, 0.6);\n  font-family: monospace;\n  font-size: 10px;\n  min-width: 65px;\n  flex-shrink: 0;\n}\n\n.log-message {\n  color: rgba(255, 255, 255, 0.9);\n  flex: 1;\n  line-height: 1.4;\n}\n\n.log-empty {\n  text-align: center;\n  color: rgba(255, 255, 255, 0.5);\n  font-size: 11px;\n  padding: 20px;\n  font-style: italic;\n}\n\n/* === 响应式设计 === */\n@media (max-width: 768px) {\n  .polar-alignment-widget {\n    width: 320px;\n    max-width: 95vw;\n  }\n\n  .polar-alignment-widget.collapsed {\n    width: 280px;\n    max-width: 90vw;\n  }\n\n  .polar-alignment-minimized {\n    width: 240px;\n  }\n\n  .widget-header {\n    padding: 10px 12px;\n  }\n\n  .header-title {\n    font-size: 12px;\n  }\n\n  .widget-content.expanded {\n    padding: 12px;\n    max-height: 500px;\n  }\n\n  .widget-content.collapsed {\n    padding: 8px;\n  }\n\n  .action-btn {\n    padding: 10px 12px;\n    font-size: 12px;\n    min-height: 36px;\n  }\n\n  .adjustment-value {\n    font-size: 16px;\n  }\n\n  .progress-circle {\n    width: 50px;\n    height: 50px;\n  }\n\n  .progress-text {\n    font-size: 10px;\n  }\n\n  .node-label {\n    font-size: 8px;\n    margin-top: 2px;\n  }\n\n  .node-circle {\n    width: 16px;\n    height: 16px;\n    font-size: 8px;\n  }\n\n  .progress-header {\n    margin-bottom: 6px;\n  }\n\n  .progress-title {\n    font-size: 11px;\n  }\n\n  .calibration-loop-info {\n    font-size: 9px;\n    padding: 1px 4px;\n  }\n}\n\n/* 移动端触摸优化 */\n@media (hover: none) and (pointer: coarse) {\n  .action-btn {\n    min-height: 48px;\n    padding: 14px 18px;\n    font-size: 14px;\n  }\n\n  .widget-header {\n    padding: 16px 20px;\n  }\n\n  .minimized-header {\n    padding: 12px 16px;\n  }\n\n  .header-btn {\n    width: 32px;\n    height: 32px;\n  }\n\n  .minimized-btn {\n    width: 28px;\n    height: 28px;\n  }\n}\n\n@media (max-width: 480px) {\n  .polar-alignment-widget {\n    width: 280px;\n    max-width: 98vw;\n  }\n\n  .polar-alignment-widget.collapsed {\n    width: 240px;\n    max-width: 95vw;\n  }\n\n  .polar-alignment-minimized {\n    width: 200px;\n  }\n\n  .widget-header {\n    padding: 8px 10px;\n  }\n\n  .header-title {\n    font-size: 11px;\n  }\n\n  .header-btn {\n    width: 20px;\n    height: 20px;\n  }\n\n  .widget-content.expanded {\n    padding: 10px;\n    max-height: 400px;\n  }\n\n  .widget-content.collapsed {\n    padding: 6px;\n  }\n\n  .action-btn {\n    padding: 8px 10px;\n    font-size: 11px;\n    min-height: 32px;\n  }\n\n  .adjustment-value {\n    font-size: 14px;\n  }\n\n  .progress-circle {\n    width: 40px;\n    height: 40px;\n  }\n\n  .progress-text {\n    font-size: 9px;\n  }\n\n  .minimized-header {\n    padding: 6px 8px;\n  }\n\n  .minimized-title {\n    font-size: 10px;\n  }\n\n  .minimized-btn {\n    width: 16px;\n    height: 16px;\n  }\n\n  .node-label {\n    font-size: 7px;\n    margin-top: 1px;\n  }\n\n  .node-circle {\n    width: 14px;\n    height: 14px;\n    font-size: 7px;\n  }\n\n  .progress-nodes {\n    gap: 2px;\n  }\n\n  .progress-header {\n    margin-bottom: 4px;\n  }\n\n  .progress-title {\n    font-size: 10px;\n  }\n\n  .calibration-loop-info {\n    font-size: 8px;\n    padding: 1px 3px;\n  }\n}\n\n/* 面板标题 */\n.panel-header {\n  margin-bottom: 16px;\n  padding-bottom: 8px;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  pointer-events: auto;\n}\n\n.panel-header h3 {\n  margin: 0;\n  font-size: 18px;\n  font-weight: 600;\n  color: #ffffff;\n}\n\n.panel-indicator {\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  background: #64b5f6;\n}\n\n.panel-indicator.live {\n  animation: pulse 2s infinite;\n}\n\n.panel-indicator.control {\n  background: #ff9800;\n}\n\n@keyframes pulse {\n  0% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0.5;\n  }\n\n  100% {\n    opacity: 1;\n  }\n}\n\n\n\n.card-header {\n  background: rgba(60, 60, 70, 0.8);\n  padding: 12px 16px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n  pointer-events: auto;\n}\n\n.card-header span {\n  font-size: 14px;\n  font-weight: 500;\n  color: #ffffff;\n}\n\n.card-icon {\n  color: #64b5f6;\n  font-size: 18px;\n}\n\n.card-icon.warning {\n  color: #ff9800;\n}\n\n.card-icon.success {\n  color: #4caf50;\n}\n\n\n\n\n\n\n/* === 响应式设计 === */\n@media (max-width: 1200px) {\n  .info-panel {\n    flex: 0 0 350px;\n  }\n}\n\n@media (max-width: 768px) {\n  .polar-alignment-interface {\n    font-size: 12px;\n  }\n\n  .main-layout {\n    flex-direction: column;\n    gap: 8px;\n    padding: 8px;\n  }\n\n  .display-panel {\n    flex: 1;\n    min-height: 300px;\n    padding: 12px;\n  }\n\n  .info-panel {\n    flex: 0 0 auto;\n    max-height: 50vh;\n    overflow-y: auto;\n    padding: 12px;\n  }\n\n  /* 状态相关样式已删除 */\n\n  .calibration-progress {\n    margin-bottom: 12px;\n  }\n\n  .progress-bar {\n    height: 6px;\n  }\n\n  .node-circle {\n    width: 16px;\n    height: 16px;\n    font-size: 8px;\n  }\n\n  .position-section {\n    margin-top: 12px;\n    padding-top: 12px;\n  }\n\n  .position-grid {\n    gap: 6px;\n    padding: 8px;\n  }\n\n  .position-cell {\n    padding: 6px;\n  }\n\n  .adjustment-section {\n    margin-top: 12px;\n    padding-top: 12px;\n  }\n\n  .adjustment-item {\n    padding: 8px;\n  }\n\n  .adjustment-icon {\n    width: 24px;\n    height: 24px;\n  }\n\n  .control-section {\n    margin-top: 12px;\n    padding-top: 12px;\n  }\n\n  .action-btn {\n    padding: 10px 12px;\n    font-size: 12px;\n    min-height: 36px;\n    flex: 1;\n  }\n\n  .log-section {\n    margin-top: 12px;\n    padding-top: 12px;\n  }\n\n  .log-display {\n    padding: 8px;\n  }\n\n  .panel-header {\n    margin-bottom: 8px;\n    padding-bottom: 8px;\n  }\n\n  .interface-title {\n    font-size: 14px;\n  }\n\n  .connection-status {\n    font-size: 10px;\n  }\n\n  .card-header {\n    padding: 8px 12px;\n  }\n\n  .card-header span {\n    font-size: 12px;\n  }\n\n  .card-content {\n    padding: 12px;\n  }\n\n\n\n  .node-circle {\n    width: 14px;\n    height: 14px;\n    font-size: 7px;\n  }\n\n  .log-display {\n    padding: 6px;\n  }\n\n  .latest-log {\n    font-size: 10px;\n  }\n\n  .log-timestamp {\n    min-width: 50px;\n  }\n}\n\n@media (max-width: 480px) {\n  .polar-alignment-interface {\n    font-size: 10px;\n  }\n\n  .main-layout {\n    flex-direction: column;\n    gap: 6px;\n    padding: 6px;\n  }\n\n  .display-panel {\n    flex: 1;\n    min-height: 250px;\n    padding: 8px;\n  }\n\n  .info-panel {\n    flex: 0 0 auto;\n    max-height: 45vh;\n    overflow-y: auto;\n    padding: 8px;\n  }\n\n  .card-header {\n    padding: 8px 12px;\n  }\n\n  .card-header span {\n    font-size: 11px;\n  }\n\n  .card-content {\n    padding: 12px;\n  }\n\n  /* 状态相关样式已删除 */\n\n  .calibration-progress {\n    margin-bottom: 8px;\n  }\n\n  .progress-bar {\n    height: 4px;\n  }\n\n  .node-circle {\n    width: 14px;\n    height: 14px;\n    font-size: 7px;\n  }\n\n  .position-section {\n    margin-top: 8px;\n    padding-top: 8px;\n  }\n\n  .position-grid {\n    gap: 4px;\n    padding: 6px;\n  }\n\n  .position-cell {\n    padding: 4px;\n  }\n\n  .cell-label {\n    font-size: 8px;\n  }\n\n  .cell-value {\n    font-size: 9px;\n  }\n\n  .adjustment-section {\n    margin-top: 8px;\n    padding-top: 8px;\n  }\n\n  .adjustment-item {\n    padding: 6px;\n  }\n\n  .adjustment-icon {\n    width: 20px;\n    height: 20px;\n  }\n\n  .adjustment-type {\n    font-size: 10px;\n  }\n\n  .adjustment-value {\n    font-size: 10px;\n  }\n\n  .adjustment-action {\n    font-size: 8px;\n  }\n\n  .control-section {\n    margin-top: 8px;\n    padding-top: 8px;\n  }\n\n  .action-btn {\n    padding: 8px 10px;\n    font-size: 10px;\n    min-height: 32px;\n    flex: 1;\n  }\n\n  .log-section {\n    margin-top: 8px;\n    padding-top: 8px;\n  }\n\n  .log-display {\n    padding: 6px;\n  }\n\n  .latest-log {\n    font-size: 9px;\n  }\n\n  .log-timestamp {\n    font-size: 8px;\n    min-width: 45px;\n  }\n\n  .panel-header {\n    margin-bottom: 6px;\n    padding-bottom: 6px;\n  }\n\n}\n\n/* === 触摸优化 === */\n.polar-alignment-widget,\n.polar-alignment-minimized {\n  /* 触摸优化 */\n  touch-action: none;\n  -webkit-tap-highlight-color: transparent;\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n\n.header-drag-area,\n.minimized-drag-area {\n  /* 触摸优化 */\n  touch-action: none;\n  -webkit-tap-highlight-color: transparent;\n}\n\n/* 拖动状态：移除触摸优化，允许正常触摸 */\n.polar-alignment-widget.dragging,\n.polar-alignment-minimized.dragging {\n  touch-action: manipulation;\n}\n\n/* === 性能优化 === */\n/* 拖动时禁用不必要的动画和效果 */\n.dragging * {\n  animation: none !important;\n  transition: none !important;\n}\n\n/* 拖动时简化阴影和模糊效果 */\n.dragging .progress-circle::before,\n.dragging .node-circle,\n.dragging .status-indicator {\n  box-shadow: none !important;\n  filter: none !important;\n}\n</style>"]}]}
