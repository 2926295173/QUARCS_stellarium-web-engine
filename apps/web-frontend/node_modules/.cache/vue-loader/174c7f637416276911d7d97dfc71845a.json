{"remainingRequest":"/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/src/components/UpdateProgressDialog.vue?vue&type=style&index=0&id=6b36a94a&scoped=true&lang=css&","dependencies":[{"path":"/app/src/components/UpdateProgressDialog.vue","mtime":1751951970118},{"path":"/app/node_modules/css-loader/dist/cjs.js","mtime":1707125446000},{"path":"/app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1707125450000},{"path":"/app/node_modules/postcss-loader/src/index.js","mtime":1707125450000},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":1707125360000},{"path":"/app/node_modules/vue-loader/lib/index.js","mtime":1707125450000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoudXBkYXRlLW92ZXJsYXkgewogIHBvc2l0aW9uOiBmaXhlZDsKICB0b3A6IDA7CiAgbGVmdDogMDsKICByaWdodDogMDsKICBib3R0b206IDA7CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjcpOwogIGRpc3BsYXk6IGZsZXg7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICB6LWluZGV4OiA5OTk5OwogIG92ZXJmbG93OiBoaWRkZW47Cn0KCi51cGRhdGUtZGlhbG9nIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOwogIGJvcmRlci1yYWRpdXM6IDhweDsKICBib3gtc2hhZG93OiAwIDRweCAxNnB4IHJnYmEoMCwgMCwgMCwgMC4yKTsKICB3aWR0aDogODAlOwogIG1heC13aWR0aDogNjAwcHg7CiAgcGFkZGluZzogMjBweDsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47CiAgbWF4LWhlaWdodDogODB2aDsKfQoKLnVwZGF0ZS1oZWFkZXIgewogIG1hcmdpbi1ib3R0b206IDIwcHg7CiAgdGV4dC1hbGlnbjogY2VudGVyOwp9Cgoud2FybmluZy10ZXh0IHsKICBjb2xvcjogI2ZmOTgwMDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKLnN1Y2Nlc3MtdGV4dCB7CiAgY29sb3I6ICM0Y2FmNTA7CiAgZm9udC13ZWlnaHQ6IGJvbGQ7Cn0KCi5lcnJvci10ZXh0IHsKICBjb2xvcjogI2Y0NDMzNjsKICBmb250LXdlaWdodDogYm9sZDsKfQoKLnByb2dyZXNzLWNvbnRhaW5lciB7CiAgZGlzcGxheTogZmxleDsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIG1hcmdpbi1ib3R0b206IDIwcHg7Cn0KCi5wcm9ncmVzcy1iYXIgewogIGZsZXgtZ3JvdzogMTsKICBoZWlnaHQ6IDIwcHg7CiAgYmFja2dyb3VuZC1jb2xvcjogI2UwZTBlMDsKICBib3JkZXItcmFkaXVzOiAxMHB4OwogIG92ZXJmbG93OiBoaWRkZW47CiAgbWFyZ2luLXJpZ2h0OiAxMHB4Owp9CgoucHJvZ3Jlc3MtZmlsbCB7CiAgaGVpZ2h0OiAxMDAlOwogIGJhY2tncm91bmQtY29sb3I6ICMyMTk2ZjM7CiAgdHJhbnNpdGlvbjogd2lkdGggMC4zcyBlYXNlOwp9CgoucHJvZ3Jlc3MtZmlsbC5zdWNjZXNzIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjNGNhZjUwOwp9CgoucHJvZ3Jlc3MtZmlsbC5lcnJvciB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2Y0NDMzNjsKfQoKLnByb2dyZXNzLXRleHQgewogIHdpZHRoOiA0MHB4OwogIGZvbnQtd2VpZ2h0OiBib2xkOwogIHRleHQtYWxpZ246IHJpZ2h0Owp9CgouY3VycmVudC10YXNrIHsKICBtYXJnaW4tYm90dG9tOiAxNXB4OwogIGZvbnQtc2l6ZTogMTZweDsKfQoKLmN1cnJlbnQtdGFzayBzcGFuIHsKICBmb250LXdlaWdodDogYm9sZDsKfQoKLmxvZy1jb250YWluZXIgewogIGJvcmRlcjogMXB4IHNvbGlkICNlMGUwZTA7CiAgYm9yZGVyLXJhZGl1czogNHB4OwogIG92ZXJmbG93OiBoaWRkZW47CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKLmxvZy1oZWFkZXIgewogIGJhY2tncm91bmQtY29sb3I6ICNmNWY1ZjU7CiAgcGFkZGluZzogOHB4IDEycHg7CiAgZGlzcGxheTogZmxleDsKICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBmb250LXdlaWdodDogYm9sZDsKfQoKLnRvZ2dsZS1sb2cgewogIGJhY2tncm91bmQ6IG5vbmU7CiAgYm9yZGVyOiBub25lOwogIGNvbG9yOiAjMjE5NmYzOwogIGN1cnNvcjogcG9pbnRlcjsKICBmb250LXNpemU6IDE0cHg7Cn0KCi5sb2ctY29udGVudCB7CiAgbWF4LWhlaWdodDogMTAwcHg7CiAgdHJhbnNpdGlvbjogbWF4LWhlaWdodCAwLjNzIGVhc2U7CiAgb3ZlcmZsb3c6IGhpZGRlbjsKfQoKLmxvZy1jb250ZW50LmV4cGFuZGVkIHsKICBtYXgtaGVpZ2h0OiAzMDBweDsKfQoKLmxvZy1zY3JvbGwgewogIG92ZXJmbG93LXk6IGF1dG87CiAgbWF4LWhlaWdodDogMzAwcHg7CiAgcGFkZGluZzogMTBweDsKfQoKLmxvZy1zY3JvbGwgZGl2IHsKICBwYWRkaW5nOiA0cHggMDsKICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2YwZjBmMDsKICBmb250LWZhbWlseTogbW9ub3NwYWNlOwp9CgoubG9nLXRpbWUgewogIGNvbG9yOiAjNzU3NTc1OwogIG1hcmdpbi1yaWdodDogMTBweDsKICBmb250LXNpemU6IDEycHg7Cn0KCi5lcnJvci1sb2cgLmxvZy1tZXNzYWdlIHsKICBjb2xvcjogI2Y0NDMzNjsKfQoKLnN1Y2Nlc3MtbG9nIC5sb2ctbWVzc2FnZSB7CiAgY29sb3I6ICM0Y2FmNTA7Cn0KCi5wcm9ncmVzcy1sb2cgLmxvZy1tZXNzYWdlIHsKICBjb2xvcjogIzIxOTZmMzsKfQoKLmRpYWxvZy1mb290ZXIgewogIGRpc3BsYXk6IGZsZXg7CiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDsKICBnYXA6IDEwcHg7Cn0KCi5jbG9zZS1idXR0b24sIC5yZXRyeS1idXR0b24gewogIHBhZGRpbmc6IDhweCAxNnB4OwogIGJvcmRlcjogbm9uZTsKICBib3JkZXItcmFkaXVzOiA0cHg7CiAgY3Vyc29yOiBwb2ludGVyOwogIGZvbnQtd2VpZ2h0OiBib2xkOwp9CgouY2xvc2UtYnV0dG9uIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTBlMGUwOwp9CgoucmV0cnktYnV0dG9uIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjE5NmYzOwogIGNvbG9yOiB3aGl0ZTsKfQo="},{"version":3,"sources":["UpdateProgressDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"UpdateProgressDialog.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"update-overlay\" v-if=\"visible\" :class=\"{ 'update-complete': updateComplete }\">\n      <div class=\"update-dialog\">\n        <div class=\"update-header\">\n          <h2 v-if=\"!updateComplete && !updateFailed\" class=\"warning-text\">{{ $t('update.warning') }}</h2>\n          <h2 v-else-if=\"updateComplete\" class=\"success-text\">{{ $t('update.complete') }}</h2>\n          <h2 v-else class=\"error-text\">{{ $t('update.failed') }}</h2>\n        </div>\n  \n        <div class=\"progress-container\">\n          <div class=\"progress-bar\">\n            <div class=\"progress-fill\" :style=\"{ width: `${progress}%` }\" \n                 :class=\"{ 'success': updateComplete, 'error': updateFailed }\"></div>\n          </div>\n          <div class=\"progress-text\">{{ progress }}%</div>\n        </div>\n  \n        <div class=\"current-task\">\n          <span>{{ $t('update.currentTask') }}：</span>{{ currentTask }}\n        </div>\n  \n        <div class=\"log-container\">\n          <div class=\"log-header\">\n            <span>{{ $t('update.updateLog') }}</span>\n            <button class=\"toggle-log\" @click=\"toggleLogExpand\">\n              {{ logExpanded ? $t('update.collapse') : $t('update.expand') }}\n            </button>\n          </div>\n          <div class=\"log-content\" :class=\"{ 'expanded': logExpanded }\">\n            <div class=\"log-scroll\">\n              <div v-for=\"(log, index) in logs\" :key=\"index\" \n                   :class=\"{ 'error-log': log.type === 'error', \n                            'success-log': log.type === 'success', \n                            'progress-log': log.type === 'progress' }\">\n                <span class=\"log-time\">{{ log.time }}</span>\n                <span class=\"log-message\">{{ log.message }}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n  \n        <div class=\"dialog-footer\" v-if=\"updateComplete || updateFailed\">\n          <button class=\"close-button\" @click=\"closeDialog\">{{ $t('update.close') }}</button>\n          <button class=\"retry-button\" v-if=\"updateFailed\" @click=\"retryUpdate\">{{ $t('update.retry') }}</button>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    name: 'UpdateProgressDialog',\n    props: {\n      visible: {\n        type: Boolean,\n        default: false\n      }\n    },\n    data() {\n      return {\n        progress: 0,\n        currentTask: this.$t('update.preparing'),\n        logs: [],\n        logExpanded: false,\n        updateComplete: false,\n        updateFailed: false,\n        errorMessage: ''\n      };\n    },\n    watch: {\n    currentDriverType() {\n      // 当语言改变时更新当前任务文本\n      if (this.progress === 0) {\n        this.currentTask = this.$t('update.preparing');\n      }\n    }\n  },\n    mounted() {\n      this.$bus.$on('update_progress', this.handleProgressMessage);\n      this.$bus.$on('update_error', this.handleErrorMessage);\n      this.$bus.$on('update_success', this.handleSuccessMessage);\n    },\n    methods: {\n      handleProgressMessage(message) {\n        const parts = message.split(':');\n        if (parts.length >= 3) {\n            const progressValue = parseInt(parts[1], 10);\n            const progressMessage = parts[2];\n            \n            this.progress = progressValue;\n            this.currentTask = progressMessage;\n            this.addLogEntry(progressMessage, 'progress');\n        }\n      },\n      handleErrorMessage(message) {\n        const parts = message.split(':');\n        if (parts.length >= 3) {\n            const errorMessage = parts[2];\n            \n            this.updateFailed = true;\n            this.errorMessage = errorMessage;\n            this.addLogEntry(`${this.$t('update.error')}: ${errorMessage}`, 'error');\n        }\n      },\n      handleSuccessMessage(message) {\n        const parts = message.split(':');\n        if (parts.length >= 3) {\n            const successMessage = parts[2];\n            \n            this.progress = 100;\n            this.updateComplete = true;\n            this.currentTask = successMessage;\n            this.addLogEntry(`${this.$t('update.completed')}: ${successMessage}`, 'success');\n        }\n      },\n      addLogEntry(message, type) {\n        const now = new Date();\n        const timeString = now.toLocaleTimeString();\n        \n        this.logs.push({\n            time: timeString,\n            message: message,\n            type: type\n        });\n        \n        // 如果日志数量太多，移除最早的条目\n        if (this.logs.length > 100) {\n            this.logs.shift();\n        }\n        \n        // 自动滚动到最新的日志\n        this.$nextTick(() => {\n            const logScroll = this.$el.querySelector('.log-scroll');\n            if (logScroll) {\n            logScroll.scrollTop = logScroll.scrollHeight;\n            }\n        });\n      },\n      toggleLogExpand() {\n        this.logExpanded = !this.logExpanded;\n      },\n      closeDialog() {\n        this.$bus.$emit('closeUpdateDialog');\n      },\n      retryUpdate() {\n        this.updateFailed = false;\n        this.updateComplete = false;\n        this.progress = 0;\n        this.currentTask = this.$t('update.preparing');\n        this.logs = [];\n        // this.$emit('retry');\n        this.$bus.$emit('reRunUpdate');\n        }\n    }\n  };\n  </script>\n  \n  <style scoped>\n  .update-overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: rgba(0, 0, 0, 0.7);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    z-index: 9999;\n    overflow: hidden;\n  }\n  \n  .update-dialog {\n    background-color: #fff;\n    border-radius: 8px;\n    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.2);\n    width: 80%;\n    max-width: 600px;\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n    max-height: 80vh;\n  }\n  \n  .update-header {\n    margin-bottom: 20px;\n    text-align: center;\n  }\n  \n  .warning-text {\n    color: #ff9800;\n    font-weight: bold;\n  }\n  \n  .success-text {\n    color: #4caf50;\n    font-weight: bold;\n  }\n  \n  .error-text {\n    color: #f44336;\n    font-weight: bold;\n  }\n  \n  .progress-container {\n    display: flex;\n    align-items: center;\n    margin-bottom: 20px;\n  }\n  \n  .progress-bar {\n    flex-grow: 1;\n    height: 20px;\n    background-color: #e0e0e0;\n    border-radius: 10px;\n    overflow: hidden;\n    margin-right: 10px;\n  }\n  \n  .progress-fill {\n    height: 100%;\n    background-color: #2196f3;\n    transition: width 0.3s ease;\n  }\n  \n  .progress-fill.success {\n    background-color: #4caf50;\n  }\n  \n  .progress-fill.error {\n    background-color: #f44336;\n  }\n  \n  .progress-text {\n    width: 40px;\n    font-weight: bold;\n    text-align: right;\n  }\n  \n  .current-task {\n    margin-bottom: 15px;\n    font-size: 16px;\n  }\n  \n  .current-task span {\n    font-weight: bold;\n  }\n  \n  .log-container {\n    border: 1px solid #e0e0e0;\n    border-radius: 4px;\n    overflow: hidden;\n    margin-bottom: 20px;\n  }\n  \n  .log-header {\n    background-color: #f5f5f5;\n    padding: 8px 12px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    font-weight: bold;\n  }\n  \n  .toggle-log {\n    background: none;\n    border: none;\n    color: #2196f3;\n    cursor: pointer;\n    font-size: 14px;\n  }\n  \n  .log-content {\n    max-height: 100px;\n    transition: max-height 0.3s ease;\n    overflow: hidden;\n  }\n  \n  .log-content.expanded {\n    max-height: 300px;\n  }\n  \n  .log-scroll {\n    overflow-y: auto;\n    max-height: 300px;\n    padding: 10px;\n  }\n  \n  .log-scroll div {\n    padding: 4px 0;\n    border-bottom: 1px solid #f0f0f0;\n    font-family: monospace;\n  }\n  \n  .log-time {\n    color: #757575;\n    margin-right: 10px;\n    font-size: 12px;\n  }\n  \n  .error-log .log-message {\n    color: #f44336;\n  }\n  \n  .success-log .log-message {\n    color: #4caf50;\n  }\n  \n  .progress-log .log-message {\n    color: #2196f3;\n  }\n  \n  .dialog-footer {\n    display: flex;\n    justify-content: flex-end;\n    gap: 10px;\n  }\n  \n  .close-button, .retry-button {\n    padding: 8px 16px;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    font-weight: bold;\n  }\n  \n  .close-button {\n    background-color: #e0e0e0;\n  }\n  \n  .retry-button {\n    background-color: #2196f3;\n    color: white;\n  }\n  </style>"]}]}