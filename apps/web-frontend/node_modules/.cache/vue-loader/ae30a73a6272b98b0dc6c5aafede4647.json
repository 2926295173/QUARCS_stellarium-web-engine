{"remainingRequest":"/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/src/components/location-mgr.vue?vue&type=script&lang=js&","dependencies":[{"path":"/app/src/components/location-mgr.vue","mtime":1749193651850},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":1707125360000},{"path":"/app/node_modules/thread-loader/dist/cjs.js","mtime":1707125360000},{"path":"/app/node_modules/babel-loader/lib/index.js","mtime":1707125360000},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":1707125360000},{"path":"/app/node_modules/vue-loader/lib/index.js","mtime":1707125450000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBzd2ggZnJvbSAnQC9hc3NldHMvc3dfaGVscGVycy5qcycKaW1wb3J0IHsgTE1hcCwgTFRpbGVMYXllciwgTE1hcmtlciwgTENpcmNsZSwgTFRvb2x0aXAsIExDb250cm9sWm9vbSB9IGZyb20gJ3Z1ZTItbGVhZmxldCcKaW1wb3J0IHsgTCB9IGZyb20gJ2xlYWZsZXQtY29udHJvbC1nZW9jb2Rlci9kaXN0L0NvbnRyb2wuR2VvY29kZXIuanMnCgpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gKCkgewogICAgcmV0dXJuIHsKICAgICAgbW9kZTogJ3BpY2snLAogICAgICBwaWNrTG9jYXRpb246IHVuZGVmaW5lZCwKICAgICAgc2VsZWN0ZWRLbm93bkxvY2F0aW9uOiB1bmRlZmluZWQsCiAgICAgIG1hcENlbnRlcjogWzQzLjYsIDEuNDMzM10sCiAgICAgIHVybDogJ2h0dHA6Ly9sb2NhbGhvc3Q6ODA4MC90aWxlcy97en0ve3h9L3t5fS5wbmcnLAogICAgICBvZmZsaW5lVXJsOiAnL3N0YXRpYy9tYXAtdGlsZXMve3p9L3t4fS97eX0ucG5nJwogICAgfQogIH0sCiAgcHJvcHM6IFsnc2hvd015TG9jYXRpb24nLCAna25vd25Mb2NhdGlvbnMnLCAnc3RhcnRMb2NhdGlvbicsICdyZWFsTG9jYXRpb24nXSwKICBjb21wdXRlZDogewogICAgZG9TaG93TXlMb2NhdGlvbjogZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gdGhpcy5zaG93TXlMb2NhdGlvbiA9PT0gdW5kZWZpbmVkID8gZmFsc2UgOiB0aGlzLnNob3dNeUxvY2F0aW9uCiAgICB9LAogICAgcGlja0xvY2F0aW9uTW9kZTogZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gdGhpcy5tb2RlID09PSAncGljaycKICAgIH0sCiAgICBrbm93bkxvY2F0aW9uTW9kZTogZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gdGhpcy5tb2RlID09PSAna25vd24nCiAgICB9LAogICAgbG9jYXRpb25Gb3JEZXRhaWw6IGZ1bmN0aW9uICgpIHsKICAgICAgaWYgKHRoaXMucGlja0xvY2F0aW9uTW9kZSAmJiB0aGlzLnBpY2tMb2NhdGlvbiA9PT0gdW5kZWZpbmVkKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuc3RhcnRMb2NhdGlvbgogICAgICB9CiAgICAgIHJldHVybiB0aGlzLnBpY2tMb2NhdGlvbk1vZGUgPyB0aGlzLnBpY2tMb2NhdGlvbiA6IHRoaXMuc2VsZWN0ZWRLbm93bkxvY2F0aW9uCiAgICB9CiAgfSwKICB3YXRjaDogewogICAgc3RhcnRMb2NhdGlvbjogZnVuY3Rpb24gKCkgewogICAgICB0aGlzLnNldFBpY2tMb2NhdGlvbih0aGlzLnN0YXJ0TG9jYXRpb24pCiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiAoKSB7CiAgICBjb25zdCB0aGF0ID0gdGhpcwogICAgdGhpcy5zZXRQaWNrTG9jYXRpb24odGhpcy5zdGFydExvY2F0aW9uKQogICAgCiAgICAvLyDmo4DmtYvnprvnur/nk6bniYfmnI3liqHlmajmmK/lkKblj6/nlKgKICAgIHRoaXMuY2hlY2tUaWxlU2VydmVyQXZhaWxhYmlsaXR5KCkKICAgIAogICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gewogICAgICBjb25zdCBtYXAgPSB0aGlzLiRyZWZzLm15TWFwLm1hcE9iamVjdAogICAgICBtYXAuX29uUmVzaXplKCkKCiAgICAgIC8vIOazqOmHiuaOieWcqOe6v+WcsOeQhue8lueggeacjeWKoe+8jOaUueS4uuemu+e6v+aQnOe0ogogICAgICAvLyB2YXIgZ2VvY29kZXIgPSBuZXcgTC5Db250cm9sLkdlb2NvZGVyKHsKICAgICAgLy8gICBkZWZhdWx0TWFya0dlb2NvZGU6IGZhbHNlLAogICAgICAvLyAgIHBvc2l0aW9uOiAndG9wbGVmdCcsCiAgICAgIC8vICAgY29sbGFwc2VkOiBmYWxzZQogICAgICAvLyB9KS5vbignbWFya2dlb2NvZGUnLCBmdW5jdGlvbiAoZSkgewogICAgICAvLyAgIC8vIC4uLiDljp/mnInku6PnoIEKICAgICAgLy8gfSkKICAgICAgLy8gZ2VvY29kZXIuYWRkVG8obWFwKQogICAgICAKICAgICAgLy8g5re75Yqg56a757q/5pCc57Si5o6n5Lu2CiAgICAgIHRoaXMuYWRkT2ZmbGluZVNlYXJjaENvbnRyb2wobWFwKQogICAgfSkKICB9LAogIG1ldGhvZHM6IHsKICAgIHNlbGVjdEtub3duTG9jYXRpb246IGZ1bmN0aW9uIChsb2MpIHsKICAgICAgdGhpcy5zZWxlY3RlZEtub3duTG9jYXRpb24gPSBsb2MKICAgICAgdGhpcy5zZXRLbm93bkxvY2F0aW9uTW9kZSgpCiAgICAgIHRoaXMubWFwQ2VudGVyID0gW2xvYy5sYXQsIGxvYy5sbmddCiAgICB9LAogICAgdXNlTG9jYXRpb246IGZ1bmN0aW9uICgpIHsKICAgICAgdGhpcy4kZW1pdCgnbG9jYXRpb25TZWxlY3RlZCcsIHRoaXMubG9jYXRpb25Gb3JEZXRhaWwpCiAgICAgIHRoaXMuJGVtaXQoJ3Jlc2V0TG9jYXRpb24nLCB0aGlzLmxvY2F0aW9uRm9yRGV0YWlsLmxhdCwgdGhpcy5sb2NhdGlvbkZvckRldGFpbC5sbmcpCiAgICB9LAogICAgc2V0UGlja0xvY2F0aW9uTW9kZTogZnVuY3Rpb24gKCkgewogICAgICB0aGlzLm1vZGUgPSAncGljaycKICAgIH0sCiAgICBzZXRLbm93bkxvY2F0aW9uTW9kZTogZnVuY3Rpb24gKCkgewogICAgICB0aGlzLm1vZGUgPSAna25vd24nCiAgICB9LAogICAgc2V0UGlja0xvY2F0aW9uOiBmdW5jdGlvbiAobG9jKSB7CiAgICAgIGlmIChsb2MuYWNjdXJhY3kgPCAxMDApIHsKICAgICAgICBmb3IgKGNvbnN0IGwgb2YgdGhpcy5rbm93bkxvY2F0aW9ucykgewogICAgICAgICAgY29uc3QgZCA9IHN3aC5nZXREaXN0YW5jZUZyb21MYXRMb25Jbk0obC5sYXQsIGwubG5nLCBsb2MubGF0LCBsb2MubG5nKQogICAgICAgICAgaWYgKGQgPCAxMDApIHsKICAgICAgICAgICAgdGhpcy5zZWxlY3RLbm93bkxvY2F0aW9uKGwpCiAgICAgICAgICAgIHJldHVybgogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgICB2YXIgcG9zID0geyBsYXQ6IGxvYy5sYXQsIGxuZzogbG9jLmxuZyB9CiAgICAgIHRoaXMubWFwQ2VudGVyID0gW3Bvcy5sYXQsIHBvcy5sbmddCiAgICAgIHRoaXMucGlja0xvY2F0aW9uID0gbG9jCiAgICAgIHRoaXMuc2V0UGlja0xvY2F0aW9uTW9kZSgpCiAgICB9LAogICAgLy8gQ2FsbGVkIHdoZW4gdGhlIHVzZXIgY2xpY2tzIG9uIHRoZSBzbWFsbCBjcm9zcyBidXR0b24KICAgIGNlbnRlck9uUmVhbFBvc2l0aW9uOiBmdW5jdGlvbiAoKSB7CiAgICAgIHRoaXMuc2V0UGlja0xvY2F0aW9uKHRoaXMucmVhbExvY2F0aW9uKQogICAgfSwKICAgIGRyYWdFbmQ6IGZ1bmN0aW9uIChldmVudCkgewogICAgICB2YXIgdGhhdCA9IHRoaXMKICAgICAgdmFyIHBvcyA9IHsgbGF0OiBldmVudC50YXJnZXQuX2xhdGxuZy5sYXQsIGxuZzogZXZlbnQudGFyZ2V0Ll9sYXRsbmcubG5nLCBhY2N1cmFjeTogMCB9CiAgICAgIGNvbnNvbGUubG9nKCdkcmFnRW5kIHBvczogJyArIHBvcy5sYXQgKyAnLCcgK3Bvcy5sbmcpCiAgICAgIHN3aC5nZW9Db2RlUG9zaXRpb24ocG9zLCB0aGF0KS50aGVuKChwKSA9PiB7IHRoYXQucGlja0xvY2F0aW9uID0gcDsgdGhhdC5zZXRQaWNrTG9jYXRpb25Nb2RlKCkgfSkKICAgICAgdGhpcy4kZW1pdCgncmVzZXRMb2NhdGlvbicsIHBvcy5sYXQsIHBvcy5sbmcpCiAgICB9LAogICAgY2hlY2tUaWxlU2VydmVyQXZhaWxhYmlsaXR5OiBmdW5jdGlvbiAoKSB7CiAgICAgIGNvbnN0IHRoYXQgPSB0aGlzCiAgICAgIC8vIOa1i+ivleacrOWcsOeTpueJh+acjeWKoeWZqOaYr+WQpuWPr+eUqAogICAgICBjb25zdCB0ZXN0VGlsZVVybCA9IHRoaXMudXJsLnJlcGxhY2UoJ3t6fScsICcxJykucmVwbGFjZSgne3h9JywgJzAnKS5yZXBsYWNlKCd7eX0nLCAnMCcpCiAgICAgIAogICAgICBmZXRjaCh0ZXN0VGlsZVVybCwgeyBtZXRob2Q6ICdIRUFEJywgdGltZW91dDogMzAwMCB9KQogICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICAgIGlmIChyZXNwb25zZS5vaykgewogICAgICAgICAgICBjb25zb2xlLmxvZygn56a757q/55Om54mH5pyN5Yqh5Zmo5Y+v55SoJykKICAgICAgICAgICAgLy8g5L2/55So5pys5Zyw55Om54mH5pyN5Yqh5ZmoCiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ+acjeWKoeWZqOS4jeWPr+eUqCcpCiAgICAgICAgICB9CiAgICAgICAgfSkKICAgICAgICAuY2F0Y2goZXJyb3IgPT4gewogICAgICAgICAgY29uc29sZS5sb2coJ+WIh+aNouWIsOmdmeaAgeeTpueJh+aWh+S7tjonLCBlcnJvcikKICAgICAgICAgIC8vIOWIh+aNouWIsOmdmeaAgeeTpueJh+aWh+S7tgogICAgICAgICAgdGhhdC51cmwgPSB0aGF0Lm9mZmxpbmVVcmwKICAgICAgICB9KQogICAgfSwKICAgIGFkZE9mZmxpbmVTZWFyY2hDb250cm9sOiBmdW5jdGlvbiAobWFwKSB7CiAgICAgIGNvbnN0IHRoYXQgPSB0aGlzCiAgICAgIAogICAgICAvLyDliJvlu7rnprvnur/mkJzntKLmjqfku7YKICAgICAgY29uc3Qgc2VhcmNoQ29udHJvbCA9IEwuQ29udHJvbC5leHRlbmQoewogICAgICAgIG9wdGlvbnM6IHsKICAgICAgICAgIHBvc2l0aW9uOiAndG9wbGVmdCcKICAgICAgICB9LAogICAgICAgIG9uQWRkOiBmdW5jdGlvbihtYXApIHsKICAgICAgICAgIGNvbnN0IGNvbnRhaW5lciA9IEwuRG9tVXRpbC5jcmVhdGUoJ2RpdicsICdsZWFmbGV0LWNvbnRyb2wtZ2VvY29kZXIgbGVhZmxldC1iYXInKQogICAgICAgICAgY29udGFpbmVyLmlubmVySFRNTCA9IGAKICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGVhZmxldC1jb250cm9sLWdlb2NvZGVyLWZvcm0iPgogICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBwbGFjZWhvbGRlcj0i6L6T5YWl5Z2Q5qCHIChsYXQsbG5nKSIgLz4KICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiI+5pCc57SiPC9idXR0b24+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgYAogICAgICAgICAgCiAgICAgICAgICBjb25zdCBpbnB1dCA9IGNvbnRhaW5lci5xdWVyeVNlbGVjdG9yKCdpbnB1dCcpCiAgICAgICAgICBjb25zdCBidXR0b24gPSBjb250YWluZXIucXVlcnlTZWxlY3RvcignYnV0dG9uJykKICAgICAgICAgIAogICAgICAgICAgYnV0dG9uLm9uY2xpY2sgPSBmdW5jdGlvbigpIHsKICAgICAgICAgICAgdGhhdC5oYW5kbGVPZmZsaW5lU2VhcmNoKGlucHV0LnZhbHVlKQogICAgICAgICAgfQogICAgICAgICAgCiAgICAgICAgICBpbnB1dC5vbmtleXByZXNzID0gZnVuY3Rpb24oZSkgewogICAgICAgICAgICBpZiAoZS5rZXkgPT09ICdFbnRlcicpIHsKICAgICAgICAgICAgICB0aGF0LmhhbmRsZU9mZmxpbmVTZWFyY2goaW5wdXQudmFsdWUpCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICAgIAogICAgICAgICAgcmV0dXJuIGNvbnRhaW5lcgogICAgICAgIH0KICAgICAgfSkKICAgICAgCiAgICAgIG5ldyBzZWFyY2hDb250cm9sKCkuYWRkVG8obWFwKQogICAgfSwKICAgIGhhbmRsZU9mZmxpbmVTZWFyY2g6IGZ1bmN0aW9uIChxdWVyeSkgewogICAgICAvLyDop6PmnpDlnZDmoIfovpPlhaUgKOaUr+aMgeWkmuenjeagvOW8jykKICAgICAgY29uc3QgY29vcmRQYXR0ZXJuID0gLygtP1xkK1wuP1xkKilbLFxzXSsoLT9cZCtcLj9cZCopLwogICAgICBjb25zdCBtYXRjaCA9IHF1ZXJ5Lm1hdGNoKGNvb3JkUGF0dGVybikKICAgICAgCiAgICAgIGlmIChtYXRjaCkgewogICAgICAgIGNvbnN0IGxhdCA9IHBhcnNlRmxvYXQobWF0Y2hbMV0pCiAgICAgICAgY29uc3QgbG5nID0gcGFyc2VGbG9hdChtYXRjaFsyXSkKICAgICAgICAKICAgICAgICBpZiAobGF0ID49IC05MCAmJiBsYXQgPD0gOTAgJiYgbG5nID49IC0xODAgJiYgbG5nIDw9IDE4MCkgewogICAgICAgICAgY29uc3QgcG9zID0geyBsYXQ6IGxhdCwgbG5nOiBsbmcsIGFjY3VyYWN5OiAwIH0KICAgICAgICAgIHRoaXMubWFwQ2VudGVyID0gW2xhdCwgbG5nXQogICAgICAgICAgCiAgICAgICAgICBjb25zdCBsb2MgPSB7CiAgICAgICAgICAgIHNob3J0X25hbWU6IGAke2xhdC50b0ZpeGVkKDMpfSwgJHtsbmcudG9GaXhlZCgzKX1gLAogICAgICAgICAgICBjb3VudHJ5OiB0aGlzLiR0KCdVbmtub3duJyksCiAgICAgICAgICAgIGxuZzogbG5nLAogICAgICAgICAgICBsYXQ6IGxhdCwKICAgICAgICAgICAgYWx0OiAwLAogICAgICAgICAgICBhY2N1cmFjeTogMCwKICAgICAgICAgICAgc3RyZWV0X2FkZHJlc3M6ICcnCiAgICAgICAgICB9CiAgICAgICAgICAKICAgICAgICAgIHRoaXMucGlja0xvY2F0aW9uID0gbG9jCiAgICAgICAgICB0aGlzLnNldFBpY2tMb2NhdGlvbk1vZGUoKQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBhbGVydCgn5Z2Q5qCH6IyD5Zu06ZSZ6K+v77ya57qs5bqmKC05MOWIsDkwKe+8jOe7j+W6pigtMTgw5YiwMTgwKScpCiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIGFsZXJ0KCfor7fovpPlhaXmnInmlYjnmoTlnZDmoIfmoLzlvI/vvJrnuqzluqYs57uP5bqmICjkvovlpoI6IDQwLjEsIDExNi4yKScpCiAgICAgIH0KICAgIH0KICB9LAogIGNvbXBvbmVudHM6IHsgTE1hcCwgTFRpbGVMYXllciwgTE1hcmtlciwgTENpcmNsZSwgTFRvb2x0aXAsIExDb250cm9sWm9vbSB9Cn0K"},{"version":3,"sources":["location-mgr.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4EA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"location-mgr.vue","sourceRoot":"src/components","sourcesContent":["// Stellarium Web - Copyright (c) 2022 - Stellarium Labs SRL\n//\n// This program is licensed under the terms of the GNU AGPL v3, or\n// alternatively under a commercial licence.\n//\n// The terms of the AGPL v3 license can be found in the main directory of this\n// repository.\n\n<template>\n  <div>\n    <v-row justify=\"space-around\">\n      <v-col cols=\"4\" v-if=\"doShowMyLocation\">\n        <v-list two-line subheader>\n          <v-subheader>{{ $t('My Locations') }}</v-subheader>\n          <v-list-item href=\"javascript:;\" v-for=\"item in knownLocations\" v-bind:key=\"item.id\" @click.native.stop=\"selectKnownLocation(item)\" :style=\"(item && knownLocationMode && selectedKnownLocation && item.id === selectedKnownLocation.id) ? 'background-color: #455a64' : ''\">\n            <v-list-item-icon>\n              <v-icon>mdi-map-marker</v-icon>\n            </v-list-item-icon>\n            <v-list-item-content>\n              <v-list-item-title>{{ item.short_name }}</v-list-item-title>\n              <v-list-item-subtitle>{{ item.country }}</v-list-item-subtitle>\n            </v-list-item-content>\n          </v-list-item>\n        </v-list>\n      </v-col>\n      <v-col cols=\"doShowMyLocation ? 8 : 12\" >\n        <v-card class=\"blue-grey darken-2 white--text\">\n          <v-card-title primary-title>\n            <v-container fluid>\n              <v-row>\n                <v-col>\n                  <div>\n                    <div class=\"text-h5\" style=\"overflow: hidden; white-space: nowrap; text-overflow: ellipsis;\">{{ locationForDetail ? locationForDetail.short_name + ', ' + locationForDetail.country :  '-' }}</div>\n                    <v-btn @click.native.stop=\"useLocation()\" style=\"position: absolute; right: 20px\"><v-icon>mdi-chevron-right</v-icon> {{ $t('Use this location') }}</v-btn>\n                    <div class=\"grey--text text-subtitle-2\" v-if=\"locationForDetail.street_address\">{{ locationForDetail ? (locationForDetail.street_address ? locationForDetail.street_address : $t('Unknown Address')) : '-' }}</div>\n                    <div class=\"grey--text text-subtitle-2\">{{ locationForDetail ? locationForDetail.lat.toFixed(5) + ' ' + locationForDetail.lng.toFixed(5) : '-' }}</div>\n                  </div>\n                </v-col>\n              </v-row>\n            </v-container>\n          </v-card-title>\n          <div style=\"height: 375px\">\n              <!-- <v-btn light fab class=\"mx-0 pa-0\" @click.native.stop=\"centerOnRealPosition()\" style=\"position: absolute; z-index: 10000; bottom: 16px; right: 12px;\">\n                <v-icon>mdi-crosshairs-gps</v-icon>\n              </v-btn> -->\n            <l-map class=\"black--text\" ref=\"myMap\" :center=\"mapCenter\" :zoom=\"10\" style=\"width: 100%; height: 375px;\" :options=\"{zoomControl: false}\">\n              <l-control-zoom position=\"topright\"></l-control-zoom>\n              <l-tile-layer :url=\"url\" attribution='&copy; <a target=\"_blank\" rel=\"noopener\" href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'></l-tile-layer>\n              <l-marker :key=\"loc.id\"\n                  v-for=\"loc in knownLocations\"\n                  :lat-lng=\"[ loc.lat, loc.lng ]\"\n                  :clickable=\"true\"\n                  :opacity=\"(!pickLocationMode && selectedKnownLocation && selectedKnownLocation === loc ? 1.0 : 0.25)\"\n                  @click=\"selectKnownLocation(loc)\"\n                  :draggable=\"!pickLocationMode && selectedKnownLocation && selectedKnownLocation === loc\" @dragend=\"dragEnd\"\n                ></l-marker>\n              <l-circle v-if=\"startLocation\"\n                :lat-lng=\"[ startLocation.lat, startLocation.lng ]\"\n                :radius=\"startLocation.accuracy\"\n                :options=\"{\n                  strokeColor: '#0000FF',\n                  strokeOpacity: 0.5,\n                  strokeWeight: 1,\n                  fillColor: '#0000FF',\n                  fillOpacity: 0.08}\"></l-circle>\n              <l-marker v-if=\"pickLocationMode && pickLocation\" :lat-lng=\"[ pickLocation.lat, pickLocation.lng ]\"\n                :draggable=\"true\" @dragend=\"dragEnd\"><l-tooltip><div class=\"black--text\">Drag to adjust</div></l-tooltip></l-marker>\n            </l-map>\n          </div>\n        </v-card>\n      </v-col>\n    </v-row>\n  </div>\n</template>\n\n<script>\nimport swh from '@/assets/sw_helpers.js'\nimport { LMap, LTileLayer, LMarker, LCircle, LTooltip, LControlZoom } from 'vue2-leaflet'\nimport { L } from 'leaflet-control-geocoder/dist/Control.Geocoder.js'\n\nexport default {\n  data: function () {\n    return {\n      mode: 'pick',\n      pickLocation: undefined,\n      selectedKnownLocation: undefined,\n      mapCenter: [43.6, 1.4333],\n      url: 'http://localhost:8080/tiles/{z}/{x}/{y}.png',\n      offlineUrl: '/static/map-tiles/{z}/{x}/{y}.png'\n    }\n  },\n  props: ['showMyLocation', 'knownLocations', 'startLocation', 'realLocation'],\n  computed: {\n    doShowMyLocation: function () {\n      return this.showMyLocation === undefined ? false : this.showMyLocation\n    },\n    pickLocationMode: function () {\n      return this.mode === 'pick'\n    },\n    knownLocationMode: function () {\n      return this.mode === 'known'\n    },\n    locationForDetail: function () {\n      if (this.pickLocationMode && this.pickLocation === undefined) {\n        return this.startLocation\n      }\n      return this.pickLocationMode ? this.pickLocation : this.selectedKnownLocation\n    }\n  },\n  watch: {\n    startLocation: function () {\n      this.setPickLocation(this.startLocation)\n    }\n  },\n  mounted: function () {\n    const that = this\n    this.setPickLocation(this.startLocation)\n    \n    // 检测离线瓦片服务器是否可用\n    this.checkTileServerAvailability()\n    \n    this.$nextTick(() => {\n      const map = this.$refs.myMap.mapObject\n      map._onResize()\n\n      // 注释掉在线地理编码服务，改为离线搜索\n      // var geocoder = new L.Control.Geocoder({\n      //   defaultMarkGeocode: false,\n      //   position: 'topleft',\n      //   collapsed: false\n      // }).on('markgeocode', function (e) {\n      //   // ... 原有代码\n      // })\n      // geocoder.addTo(map)\n      \n      // 添加离线搜索控件\n      this.addOfflineSearchControl(map)\n    })\n  },\n  methods: {\n    selectKnownLocation: function (loc) {\n      this.selectedKnownLocation = loc\n      this.setKnownLocationMode()\n      this.mapCenter = [loc.lat, loc.lng]\n    },\n    useLocation: function () {\n      this.$emit('locationSelected', this.locationForDetail)\n      this.$emit('resetLocation', this.locationForDetail.lat, this.locationForDetail.lng)\n    },\n    setPickLocationMode: function () {\n      this.mode = 'pick'\n    },\n    setKnownLocationMode: function () {\n      this.mode = 'known'\n    },\n    setPickLocation: function (loc) {\n      if (loc.accuracy < 100) {\n        for (const l of this.knownLocations) {\n          const d = swh.getDistanceFromLatLonInM(l.lat, l.lng, loc.lat, loc.lng)\n          if (d < 100) {\n            this.selectKnownLocation(l)\n            return\n          }\n        }\n      }\n      var pos = { lat: loc.lat, lng: loc.lng }\n      this.mapCenter = [pos.lat, pos.lng]\n      this.pickLocation = loc\n      this.setPickLocationMode()\n    },\n    // Called when the user clicks on the small cross button\n    centerOnRealPosition: function () {\n      this.setPickLocation(this.realLocation)\n    },\n    dragEnd: function (event) {\n      var that = this\n      var pos = { lat: event.target._latlng.lat, lng: event.target._latlng.lng, accuracy: 0 }\n      console.log('dragEnd pos: ' + pos.lat + ',' +pos.lng)\n      swh.geoCodePosition(pos, that).then((p) => { that.pickLocation = p; that.setPickLocationMode() })\n      this.$emit('resetLocation', pos.lat, pos.lng)\n    },\n    checkTileServerAvailability: function () {\n      const that = this\n      // 测试本地瓦片服务器是否可用\n      const testTileUrl = this.url.replace('{z}', '1').replace('{x}', '0').replace('{y}', '0')\n      \n      fetch(testTileUrl, { method: 'HEAD', timeout: 3000 })\n        .then(response => {\n          if (response.ok) {\n            console.log('离线瓦片服务器可用')\n            // 使用本地瓦片服务器\n          } else {\n            throw new Error('服务器不可用')\n          }\n        })\n        .catch(error => {\n          console.log('切换到静态瓦片文件:', error)\n          // 切换到静态瓦片文件\n          that.url = that.offlineUrl\n        })\n    },\n    addOfflineSearchControl: function (map) {\n      const that = this\n      \n      // 创建离线搜索控件\n      const searchControl = L.Control.extend({\n        options: {\n          position: 'topleft'\n        },\n        onAdd: function(map) {\n          const container = L.DomUtil.create('div', 'leaflet-control-geocoder leaflet-bar')\n          container.innerHTML = `\n            <div class=\"leaflet-control-geocoder-form\">\n              <input type=\"text\" placeholder=\"输入坐标 (lat,lng)\" />\n              <button type=\"button\">搜索</button>\n            </div>\n          `\n          \n          const input = container.querySelector('input')\n          const button = container.querySelector('button')\n          \n          button.onclick = function() {\n            that.handleOfflineSearch(input.value)\n          }\n          \n          input.onkeypress = function(e) {\n            if (e.key === 'Enter') {\n              that.handleOfflineSearch(input.value)\n            }\n          }\n          \n          return container\n        }\n      })\n      \n      new searchControl().addTo(map)\n    },\n    handleOfflineSearch: function (query) {\n      // 解析坐标输入 (支持多种格式)\n      const coordPattern = /(-?\\d+\\.?\\d*)[,\\s]+(-?\\d+\\.?\\d*)/\n      const match = query.match(coordPattern)\n      \n      if (match) {\n        const lat = parseFloat(match[1])\n        const lng = parseFloat(match[2])\n        \n        if (lat >= -90 && lat <= 90 && lng >= -180 && lng <= 180) {\n          const pos = { lat: lat, lng: lng, accuracy: 0 }\n          this.mapCenter = [lat, lng]\n          \n          const loc = {\n            short_name: `${lat.toFixed(3)}, ${lng.toFixed(3)}`,\n            country: this.$t('Unknown'),\n            lng: lng,\n            lat: lat,\n            alt: 0,\n            accuracy: 0,\n            street_address: ''\n          }\n          \n          this.pickLocation = loc\n          this.setPickLocationMode()\n        } else {\n          alert('坐标范围错误：纬度(-90到90)，经度(-180到180)')\n        }\n      } else {\n        alert('请输入有效的坐标格式：纬度,经度 (例如: 40.1, 116.2)')\n      }\n    }\n  },\n  components: { LMap, LTileLayer, LMarker, LCircle, LTooltip, LControlZoom }\n}\n</script>\n\n<style>\n.leaflet-control-geocoder-form input {\n  caret-color:#000 !important;\n  color: #000 !important;\n}\n</style>\n"]}]}