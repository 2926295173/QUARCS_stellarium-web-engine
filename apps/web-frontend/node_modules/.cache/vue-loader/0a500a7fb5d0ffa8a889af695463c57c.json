{"remainingRequest":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/src/components/ScheduleList.vue?vue&type=style&index=0&id=5fc7f5ba&scoped=true&lang=css&","dependencies":[{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/src/components/ScheduleList.vue","mtime":1749611375000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/css-loader/dist/cjs.js","mtime":1707125446000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1707125450000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/postcss-loader/src/index.js","mtime":1707125450000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1707125360000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/vue-loader/lib/index.js","mtime":1707125450000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmNoYXJ0LXBhbmVsIHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMjgsIDEyOCwgMTI4LCAwLjUpOwogIGJhY2tkcm9wLWZpbHRlcjogYmx1cig1cHgpOwogIGJvcmRlci1yYWRpdXM6IDVweDsKICBvdmVyZmxvdzogaGlkZGVuOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCn0KCi5saXN0LWNvbnRhaW5lciB7CiAgdG91Y2gtYWN0aW9uOiBub25lOwogIGhlaWdodDogY2FsYygxMDAlIC0gOTBweCk7CiAgb3ZlcmZsb3cteTogYXV0bzsKCiAgc2Nyb2xsYmFyLXdpZHRoOiB0aGluOwogIHNjcm9sbGJhci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQ7CgogICY6Oi13ZWJraXQtc2Nyb2xsYmFyIHsKICAgIHdpZHRoOiAxcHg7CiAgfQoKICAmOjotd2Via2l0LXNjcm9sbGJhci10aHVtYiB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsKICB9Cn0KCi5saXN0LWl0ZW0gewogIGhlaWdodDogNDBweDsKICBib3JkZXI6IDFweCBzb2xpZCAjZGRkOwogIGNvbG9yOiAjZmZmOwogIHVzZXItc2VsZWN0OiBub25lOwogIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OwogIGJhY2tkcm9wLWZpbHRlcjogYmx1cig1cHgpOwogIGJvcmRlci1yYWRpdXM6IDVweDsKfQoKLmJ0bi1BZGREYXRhIHsKICBoZWlnaHQ6IDUwcHg7CiAgd2lkdGg6IDEwMHB4OwogIGNvbG9yOiAjZmZmOwogIHVzZXItc2VsZWN0OiBub25lOwogIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4zKTsKICBiYWNrZHJvcC1maWx0ZXI6IGJsdXIoNXB4KTsKICBib3JkZXItcmFkaXVzOiA1cHg7IAogIGJveC1zaXppbmc6IGJvcmRlci1ib3g7Cn0KCi5idG4tdHJhbnNwYXJlbnQgewogIGhlaWdodDogMzZweDsKICB3aWR0aDogMTAwcHg7CiAgLyogdG9wOiAtNDBweDsgKi8KICBjb2xvcjogI2ZmZjsKICB1c2VyLXNlbGVjdDogbm9uZTsKICAvKiBwb3NpdGlvbjphYnNvbHV0ZTsgKi8KICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMCk7CiAgYmFja2Ryb3AtZmlsdGVyOiBibHVyKDVweCk7CiAgYm9yZGVyLXJhZGl1czogNXB4OyAKICBib3gtc2l6aW5nOiBib3JkZXItYm94Owp9CgouYnRuLVByb2Nlc3MgewogIHBvc2l0aW9uOmFic29sdXRlOwogIGhlaWdodDogNDBweDsKICB3aWR0aDogMTAwcHg7CiAgdG9wOiAwcHg7CiAgcmlnaHQ6IDBweDsKICBjb2xvcjogI2ZmZjsKICB1c2VyLXNlbGVjdDogbm9uZTsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMyk7CiAgYmFja2Ryb3AtZmlsdGVyOiBibHVyKDVweCk7CiAgYm9yZGVyLXJhZGl1czogNXB4OyAKICBib3gtc2l6aW5nOiBib3JkZXItYm94Owp9CgouYnRuLUFkZERhdGE6YWN0aXZlIHsKICB0cmFuc2Zvcm06IHNjYWxlKDAuOTUpOyAvKiDngrnlh7vml7bnvKnlsI/mjInpkq4gKi8KICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNyk7Cn0K"},{"version":3,"sources":["ScheduleList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyPA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"ScheduleList.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div\n    class=\"chart-panel\"\n    :style=\"{ width: width + 'px', top: '40px', bottom: '0px', right: '0px' }\"\n  >\n    <button class=\"get-click btn-transparent\"></button>\n\n    <div\n      class=\"list-container\"\n      @touchmove=\"handleTouchMove\"\n      @touchend=\"handleTouchEnd\"\n      @scroll=\"handleScrollA\"\n      ref=\"listA\"\n    >\n      <div\n        class=\"get-click list-item\"\n        v-for=\"(item, index) in itemList\"\n        :key=\"index\"\n        @click=\"handleItemClick(index)\"\n        @touchstart=\"handleTouchStart($event, index)\"\n        :style=\"{\n          transform: dragIndex === index ? 'scale(0.95)' : 'none',\n          zIndex: dragIndex === index ? '1' : '0',\n          backgroundColor: selectedIndex === index ? 'rgba(75, 155, 250, 0.7)' : 'transparent',\n          cursor: selectedIndex === index ? 'grab' : 'default',\n        }\"\n      >\n        Process: {{ processValues[index] || 0 }}%\n      </div>\n    </div>\n\n    <button @click=\"EditList\" @touchend=\"active\" class=\"get-click btn-AddData\"\n      :style=\"{\n        backgroundColor: isItemSelected === true ? 'rgba(250, 0, 0, 0.5)' : 'rgba(0, 0, 0, 0.3)',\n      }\"\n    >\n      <span v-if=\"isItemSelected\">\n        Delete\n      </span>\n      <span v-else>\n        Add\n      </span>\n    </button>\n\n    <button class=\"get-click btn-Process\"> Process: {{ processValue }}% </button>\n    \n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'SchedulePanel',\n  data() {\n    return {\n      width: 100,\n      itemList: ['0% ', '0% ', '0% ', '0% ', '0% ', '0% ', '0% ', '0% ', ],\n      dragIndex: null,\n      offsetY: 0,\n      selectedIndex: null, // 存储选中项的索引\n      isItemSelected: false,\n      startY: null,\n      processValues: {}, // 存储每个表格的进度\n    };\n  },\n  created() {\n    // 监听来自事件总线的滚动事件\n    this.$bus.$on('scrollEventB', (scrollTop) => {\n      // 使用 scrollTo 方法控制 A 组件的滚动\n      this.$refs.listA.scrollTo(0, scrollTop);\n    });\n    this.$bus.$on('UpdateScheduleProcess', this.setScheduleItemList);\n    this.$bus.$on('TianWen', this.addTianWen);\n  },\n  methods: {\n    setScheduleItemList(RowNum, Process) {\n      // 检查行号是否有效\n      if (RowNum === null || RowNum === undefined || RowNum < 0 || RowNum >= this.itemList.length) {\n        console.warn(`Invalid row number: ${RowNum}`);\n        return;\n      }\n\n      // 检查进度值是否有效\n      if (Process === null || Process === undefined) {\n        console.warn(`Invalid process value for row ${RowNum}`);\n        return;\n      }\n\n      this.itemList[RowNum] = Process + '%';\n      this.updateProcess(RowNum, Process);\n    },\n    handleItemClick(index) {\n      if (index === null || index === undefined || index < 0 || index >= this.itemList.length) {\n        console.warn(`Invalid item index: ${index}`);\n        return;\n      }\n\n      console.log(`Item clicked: ${this.itemList[index]}`);\n      if (this.selectedIndex === index) {\n        this.selectedIndex = null;\n        this.isItemSelected = false;\n        this.$bus.$emit('NoSelectedScheduleRow');\n      } else {\n        this.selectedIndex = index;\n        this.isItemSelected = true;\n        this.$bus.$emit('NoSelectedScheduleRow');\n        this.$bus.$emit('SelectedScheduleRow', index + 1);\n      }\n    },\n    EditList() {\n      if(this.isItemSelected === false) {\n        const newIndex = this.itemList.length;\n        this.itemList.push('0%');\n        this.updateProcess(newIndex, 0); // 初始化新表格的进度\n        this.$bus.$emit('AddScheduleRow');\n      } else {\n        if (this.selectedIndex !== null && this.selectedIndex >= 0 && this.selectedIndex < this.itemList.length) {\n          this.$bus.$emit('DeleteSelectedScheduleRow', this.selectedIndex + 1);\n          this.itemList.splice(this.selectedIndex, 1);\n          // 删除对应的进度值\n          this.$delete(this.processValues, this.selectedIndex);\n          this.selectedIndex = null;\n          this.isItemSelected = false;\n          this.$bus.$emit('NoSelectedScheduleRow');\n        } else {\n          console.warn('Invalid selected index for deletion');\n        }\n      }\n    },\n    active() {},\n    handleTouchStart(event, index) {\n      // 检查是否选中，只有选中项才能拖动\n      if (this.selectedIndex === index) {\n        this.dragIndex = index;\n        this.offsetY = event.touches[0].clientY - event.target.getBoundingClientRect().top;\n      }\n      else\n      {\n        this.startY = event.touches[0].clientY;\n      }\n    },\n    handleTouchMove(event) {\n      if (this.dragIndex !== null) {\n        event.preventDefault();\n        const targetIndex = this.calculateTargetIndex(event.touches[0].clientY);\n        this.handleDragOver(event, targetIndex);\n      }\n\n      if(this.isItemSelected === false)\n      {\n        // 计算手指在垂直方向上的滑动距离\n        const deltaY = event.touches[0].clientY - this.startY;\n\n        // 更新列表的滚动位置\n        this.$refs.listA.scrollTop -= deltaY;\n\n        // 更新起始位置信息\n        this.startY = event.touches[0].clientY;\n      }\n\n    },\n    handleTouchEnd() {\n      if (this.dragIndex !== null) {\n        this.handleDrop(this.dragIndex);\n        this.dragIndex = null;\n        this.offsetY = 0;\n        this.clearStyles();\n      }\n      this.startY = null;\n    },\n    handleDragOver(event, targetIndex) {\n      if (this.dragIndex !== null && \n          this.dragIndex !== targetIndex && \n          this.dragIndex >= 0 && \n          this.dragIndex < this.itemList.length &&\n          targetIndex >= 0 && \n          targetIndex < this.itemList.length) {\n        \n        const rect = event.currentTarget.getBoundingClientRect();\n        const mouseY = event.touches[0].clientY;\n        const offsetY = mouseY - rect.top;\n        \n        // 保存拖拽项的进度值\n        const draggedProcess = this.processValues[this.dragIndex];\n        \n        this.itemList.splice(targetIndex, 0, this.itemList.splice(this.dragIndex, 1)[0]);\n        this.dragIndex = targetIndex;\n        this.selectedIndex = targetIndex;\n\n        // 更新进度值的位置\n        if (draggedProcess !== undefined) {\n          this.$set(this.processValues, targetIndex, draggedProcess);\n        }\n\n        this.$bus.$emit('MoveScheduleRow', targetIndex + 1);\n\n        if (offsetY < rect.height / 2) {\n          this.offsetY = offsetY;\n        } else {\n          this.offsetY = offsetY - rect.height;\n        }\n      }\n    },\n    handleDrop(targetIndex) {\n      if (this.dragIndex !== null && this.dragIndex !== targetIndex) {\n        this.itemList.splice(targetIndex, 0, this.itemList.splice(this.dragIndex, 1)[0]);\n      }\n    },\n    calculateTargetIndex(clientY) {\n      const rect = this.$refs.listA.getBoundingClientRect();\n      const mouseY = clientY - rect.top;\n      const targetIndex = Math.floor(mouseY / 40 + 0.5);\n      return Math.max(0, Math.min(targetIndex, this.itemList.length - 1));\n    },\n    clearStyles() {\n      const items = document.querySelectorAll('.list-item');\n      items.forEach(item => {\n        item.style.zIndex = '0';\n        item.style.transform = 'none';\n      });\n    },\n    handleScrollA() {\n      this.$bus.$emit('scrollEventA', this.$refs.listA.scrollTop);\n      // console.log('ScrollTop: ', this.$refs.listA.scrollTop);\n    },\n    addTianWen() {\n      this.itemList.push('0%');\n    },\n    updateProcess(index, value) {\n      // 检查索引是否有效\n      if (index === null || index === undefined || index < 0 || index >= this.itemList.length) {\n        console.warn(`Invalid table index: ${index}`);\n        return;\n      }\n\n      // 检查进度值是否有效\n      if (value === null || value === undefined) {\n        console.warn(`Invalid process value for table ${index}`);\n        return;\n      }\n\n      // 确保进度值在0-100之间\n      const validValue = Math.min(Math.max(Number(value), 0), 100);\n      this.$set(this.processValues, index, validValue);\n    },\n  },\n};\n</script>\n\n<style scoped>\n.chart-panel {\n  position: absolute;\n  background-color: rgba(128, 128, 128, 0.5);\n  backdrop-filter: blur(5px);\n  border-radius: 5px;\n  overflow: hidden;                                                                                                                                               \n}\n\n.list-container {\n  touch-action: none;\n  height: calc(100% - 90px);\n  overflow-y: auto;\n\n  scrollbar-width: thin;\n  scrollbar-color: transparent transparent;\n\n  &::-webkit-scrollbar {\n    width: 1px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: transparent;\n  }\n}\n\n.list-item {\n  height: 40px;\n  border: 1px solid #ddd;\n  color: #fff;\n  user-select: none;\n  background-color: transparent;\n  backdrop-filter: blur(5px);\n  border-radius: 5px;\n}\n\n.btn-AddData {\n  height: 50px;\n  width: 100px;\n  color: #fff;\n  user-select: none;\n  background-color: rgba(0, 0, 0, 0.3);\n  backdrop-filter: blur(5px);\n  border-radius: 5px; \n  box-sizing: border-box;\n}\n\n.btn-transparent {\n  height: 36px;\n  width: 100px;\n  /* top: -40px; */\n  color: #fff;\n  user-select: none;\n  /* position:absolute; */\n  background-color: rgba(0, 0, 0, 0.0);\n  backdrop-filter: blur(5px);\n  border-radius: 5px; \n  box-sizing: border-box;\n}\n\n.btn-Process {\n  position:absolute;\n  height: 40px;\n  width: 100px;\n  top: 0px;\n  right: 0px;\n  color: #fff;\n  user-select: none;\n  background-color: rgba(0, 0, 0, 0.3);\n  backdrop-filter: blur(5px);\n  border-radius: 5px; \n  box-sizing: border-box;\n}\n\n.btn-AddData:active {\n  transform: scale(0.95); /* 点击时缩小按钮 */\n  background-color: rgba(255, 255, 255, 0.7);\n}\n</style>\n"]}]}
