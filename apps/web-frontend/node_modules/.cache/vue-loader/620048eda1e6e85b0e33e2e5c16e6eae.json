{"remainingRequest":"/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/src/components/UpdateProgressDialog.vue?vue&type=style&index=0&id=68726c2c&scoped=true&lang=css&","dependencies":[{"path":"/app/src/components/UpdateProgressDialog.vue","mtime":1751872812653},{"path":"/app/node_modules/css-loader/dist/cjs.js","mtime":1707125446000},{"path":"/app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1707125450000},{"path":"/app/node_modules/postcss-loader/src/index.js","mtime":1707125450000},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":1707125360000},{"path":"/app/node_modules/vue-loader/lib/index.js","mtime":1707125450000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi51cGRhdGUtb3ZlcmxheSB7CiAgcG9zaXRpb246IGZpeGVkOwogIHRvcDogMDsKICBsZWZ0OiAwOwogIHJpZ2h0OiAwOwogIGJvdHRvbTogMDsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNyk7CiAgZGlzcGxheTogZmxleDsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIGp1c3RpZnktY29udGVudDogY2VudGVyOwogIHotaW5kZXg6IDk5OTk7CiAgb3ZlcmZsb3c6IGhpZGRlbjsKfQoKLnVwZGF0ZS1kaWFsb2cgewogIGJhY2tncm91bmQtY29sb3I6ICNmZmY7CiAgYm9yZGVyLXJhZGl1czogOHB4OwogIGJveC1zaGFkb3c6IDAgNHB4IDE2cHggcmdiYSgwLCAwLCAwLCAwLjIpOwogIHdpZHRoOiA4MCU7CiAgbWF4LXdpZHRoOiA2MDBweDsKICBwYWRkaW5nOiAyMHB4OwogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICBtYXgtaGVpZ2h0OiA4MHZoOwp9CgoudXBkYXRlLWhlYWRlciB7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7Cn0KCi53YXJuaW5nLXRleHQgewogIGNvbG9yOiAjZmY5ODAwOwogIGZvbnQtd2VpZ2h0OiBib2xkOwp9Cgouc3VjY2Vzcy10ZXh0IHsKICBjb2xvcjogIzRjYWY1MDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKLmVycm9yLXRleHQgewogIGNvbG9yOiAjZjQ0MzM2OwogIGZvbnQtd2VpZ2h0OiBib2xkOwp9CgoucHJvZ3Jlc3MtY29udGFpbmVyIHsKICBkaXNwbGF5OiBmbGV4OwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKLnByb2dyZXNzLWJhciB7CiAgZmxleC1ncm93OiAxOwogIGhlaWdodDogMjBweDsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTBlMGUwOwogIGJvcmRlci1yYWRpdXM6IDEwcHg7CiAgb3ZlcmZsb3c6IGhpZGRlbjsKICBtYXJnaW4tcmlnaHQ6IDEwcHg7Cn0KCi5wcm9ncmVzcy1maWxsIHsKICBoZWlnaHQ6IDEwMCU7CiAgYmFja2dyb3VuZC1jb2xvcjogIzIxOTZmMzsKICB0cmFuc2l0aW9uOiB3aWR0aCAwLjNzIGVhc2U7Cn0KCi5wcm9ncmVzcy1maWxsLnN1Y2Nlc3MgewogIGJhY2tncm91bmQtY29sb3I6ICM0Y2FmNTA7Cn0KCi5wcm9ncmVzcy1maWxsLmVycm9yIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjQ0MzM2Owp9CgoucHJvZ3Jlc3MtdGV4dCB7CiAgd2lkdGg6IDQwcHg7CiAgZm9udC13ZWlnaHQ6IGJvbGQ7CiAgdGV4dC1hbGlnbjogcmlnaHQ7Cn0KCi5jdXJyZW50LXRhc2sgewogIG1hcmdpbi1ib3R0b206IDE1cHg7CiAgZm9udC1zaXplOiAxNnB4Owp9CgouY3VycmVudC10YXNrIHNwYW4gewogIGZvbnQtd2VpZ2h0OiBib2xkOwp9CgoubG9nLWNvbnRhaW5lciB7CiAgYm9yZGVyOiAxcHggc29saWQgI2UwZTBlMDsKICBib3JkZXItcmFkaXVzOiA0cHg7CiAgb3ZlcmZsb3c6IGhpZGRlbjsKICBtYXJnaW4tYm90dG9tOiAyMHB4Owp9CgoubG9nLWhlYWRlciB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjVmNTsKICBwYWRkaW5nOiA4cHggMTJweDsKICBkaXNwbGF5OiBmbGV4OwogIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIGZvbnQtd2VpZ2h0OiBib2xkOwp9CgoudG9nZ2xlLWxvZyB7CiAgYmFja2dyb3VuZDogbm9uZTsKICBib3JkZXI6IG5vbmU7CiAgY29sb3I6ICMyMTk2ZjM7CiAgY3Vyc29yOiBwb2ludGVyOwogIGZvbnQtc2l6ZTogMTRweDsKfQoKLmxvZy1jb250ZW50IHsKICBtYXgtaGVpZ2h0OiAxMDBweDsKICB0cmFuc2l0aW9uOiBtYXgtaGVpZ2h0IDAuM3MgZWFzZTsKICBvdmVyZmxvdzogaGlkZGVuOwp9CgoubG9nLWNvbnRlbnQuZXhwYW5kZWQgewogIG1heC1oZWlnaHQ6IDMwMHB4Owp9CgoubG9nLXNjcm9sbCB7CiAgb3ZlcmZsb3cteTogYXV0bzsKICBtYXgtaGVpZ2h0OiAzMDBweDsKICBwYWRkaW5nOiAxMHB4Owp9CgoubG9nLXNjcm9sbCBkaXYgewogIHBhZGRpbmc6IDRweCAwOwogIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZjBmMGYwOwogIGZvbnQtZmFtaWx5OiBtb25vc3BhY2U7Cn0KCi5sb2ctdGltZSB7CiAgY29sb3I6ICM3NTc1NzU7CiAgbWFyZ2luLXJpZ2h0OiAxMHB4OwogIGZvbnQtc2l6ZTogMTJweDsKfQoKLmVycm9yLWxvZyAubG9nLW1lc3NhZ2UgewogIGNvbG9yOiAjZjQ0MzM2Owp9Cgouc3VjY2Vzcy1sb2cgLmxvZy1tZXNzYWdlIHsKICBjb2xvcjogIzRjYWY1MDsKfQoKLnByb2dyZXNzLWxvZyAubG9nLW1lc3NhZ2UgewogIGNvbG9yOiAjMjE5NmYzOwp9CgouZGlhbG9nLWZvb3RlciB7CiAgZGlzcGxheTogZmxleDsKICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kOwogIGdhcDogMTBweDsKfQoKLmNsb3NlLWJ1dHRvbiwgLnJldHJ5LWJ1dHRvbiB7CiAgcGFkZGluZzogOHB4IDE2cHg7CiAgYm9yZGVyOiBub25lOwogIGJvcmRlci1yYWRpdXM6IDRweDsKICBjdXJzb3I6IHBvaW50ZXI7CiAgZm9udC13ZWlnaHQ6IGJvbGQ7Cn0KCi5jbG9zZS1idXR0b24gewogIGJhY2tncm91bmQtY29sb3I6ICNlMGUwZTA7Cn0KCi5yZXRyeS1idXR0b24gewogIGJhY2tncm91bmQtY29sb3I6ICMyMTk2ZjM7CiAgY29sb3I6IHdoaXRlOwp9Cg=="},{"version":3,"sources":["UpdateProgressDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"UpdateProgressDialog.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"update-overlay\" v-if=\"visible\" :class=\"{ 'update-complete': updateComplete }\">\n      <div class=\"update-dialog\">\n        <div class=\"update-header\">\n          <h2 v-if=\"!updateComplete && !updateFailed\" class=\"warning-text\">{{ $t('update.warning') }}</h2>\n          <h2 v-else-if=\"updateComplete\" class=\"success-text\">{{ $t('update.complete') }}</h2>\n          <h2 v-else class=\"error-text\">{{ $t('update.failed') }}</h2>\n        </div>\n  \n        <div class=\"progress-container\">\n          <div class=\"progress-bar\">\n            <div class=\"progress-fill\" :style=\"{ width: `${progress}%` }\" \n                 :class=\"{ 'success': updateComplete, 'error': updateFailed }\"></div>\n          </div>\n          <div class=\"progress-text\">{{ progress }}%</div>\n        </div>\n  \n        <div class=\"current-task\">\n          <span>{{ $t('update.currentTask') }}：</span>{{ currentTask }}\n        </div>\n  \n        <div class=\"log-container\">\n          <div class=\"log-header\">\n            <span>{{ $t('update.updateLog') }}</span>\n            <button class=\"toggle-log\" @click=\"toggleLogExpand\">\n              {{ logExpanded ? $t('update.collapse') : $t('update.expand') }}\n            </button>\n          </div>\n          <div class=\"log-content\" :class=\"{ 'expanded': logExpanded }\">\n            <div class=\"log-scroll\">\n              <div v-for=\"(log, index) in logs\" :key=\"index\" \n                   :class=\"{ 'error-log': log.type === 'error', \n                            'success-log': log.type === 'success', \n                            'progress-log': log.type === 'progress' }\">\n                <span class=\"log-time\">{{ log.time }}</span>\n                <span class=\"log-message\">{{ log.message }}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n  \n        <div class=\"dialog-footer\" v-if=\"updateComplete || updateFailed\">\n          <button class=\"close-button\" @click=\"closeDialog\">{{ $t('update.close') }}</button>\n          <button class=\"retry-button\" v-if=\"updateFailed\" @click=\"retryUpdate\">{{ $t('update.retry') }}</button>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    name: 'UpdateProgressDialog',\n    props: {\n      visible: {\n        type: Boolean,\n        default: false\n      }\n    },\n    data() {\n      return {\n        progress: 0,\n        currentTask: this.$t('update.preparing'),\n        logs: [],\n        logExpanded: false,\n        updateComplete: false,\n        updateFailed: false,\n        errorMessage: ''\n      };\n    },\n    watch: {\n    currentDriverType() {\n      // 当语言改变时更新当前任务文本\n      if (this.progress === 0) {\n        this.currentTask = this.$t('update.preparing');\n      }\n    }\n  },\n    mounted() {\n      this.$bus.$on('update_progress', this.handleProgressMessage);\n      this.$bus.$on('update_error', this.handleErrorMessage);\n      this.$bus.$on('update_success', this.handleSuccessMessage);\n    },\n    methods: {\n      handleProgressMessage(message) {\n        const parts = message.split(':');\n        if (parts.length >= 3) {\n            const progressValue = parseInt(parts[1], 10);\n            const progressMessage = parts[2];\n            \n            this.progress = progressValue;\n            this.currentTask = progressMessage;\n            this.addLogEntry(progressMessage, 'progress');\n        }\n      },\n      handleErrorMessage(message) {\n        const parts = message.split(':');\n        if (parts.length >= 3) {\n            const errorMessage = parts[2];\n            \n            this.updateFailed = true;\n            this.errorMessage = errorMessage;\n            this.addLogEntry(`${this.$t('update.error')}: ${errorMessage}`, 'error');\n        }\n      },\n      handleSuccessMessage(message) {\n        const parts = message.split(':');\n        if (parts.length >= 3) {\n            const successMessage = parts[2];\n            \n            this.progress = 100;\n            this.updateComplete = true;\n            this.currentTask = successMessage;\n            this.addLogEntry(`${this.$t('update.completed')}: ${successMessage}`, 'success');\n        }\n      },\n      addLogEntry(message, type) {\n        const now = new Date();\n        const timeString = now.toLocaleTimeString();\n        \n        this.logs.push({\n            time: timeString,\n            message: message,\n            type: type\n        });\n        \n        // 如果日志数量太多，移除最早的条目\n        if (this.logs.length > 100) {\n            this.logs.shift();\n        }\n        \n        // 自动滚动到最新的日志\n        this.$nextTick(() => {\n            const logScroll = this.$el.querySelector('.log-scroll');\n            if (logScroll) {\n            logScroll.scrollTop = logScroll.scrollHeight;\n            }\n        });\n      },\n      toggleLogExpand() {\n        this.logExpanded = !this.logExpanded;\n      },\n      closeDialog() {\n        this.$emit('close');\n      },\n      retryUpdate() {\n        this.updateFailed = false;\n        this.updateComplete = false;\n        this.progress = 0;\n        this.currentTask = this.$t('update.preparing');\n        this.logs = [];\n        this.$emit('retry');\n        }\n    }\n  };\n  </script>\n  \n  <style scoped>\n  .update-overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: rgba(0, 0, 0, 0.7);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    z-index: 9999;\n    overflow: hidden;\n  }\n  \n  .update-dialog {\n    background-color: #fff;\n    border-radius: 8px;\n    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.2);\n    width: 80%;\n    max-width: 600px;\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n    max-height: 80vh;\n  }\n  \n  .update-header {\n    margin-bottom: 20px;\n    text-align: center;\n  }\n  \n  .warning-text {\n    color: #ff9800;\n    font-weight: bold;\n  }\n  \n  .success-text {\n    color: #4caf50;\n    font-weight: bold;\n  }\n  \n  .error-text {\n    color: #f44336;\n    font-weight: bold;\n  }\n  \n  .progress-container {\n    display: flex;\n    align-items: center;\n    margin-bottom: 20px;\n  }\n  \n  .progress-bar {\n    flex-grow: 1;\n    height: 20px;\n    background-color: #e0e0e0;\n    border-radius: 10px;\n    overflow: hidden;\n    margin-right: 10px;\n  }\n  \n  .progress-fill {\n    height: 100%;\n    background-color: #2196f3;\n    transition: width 0.3s ease;\n  }\n  \n  .progress-fill.success {\n    background-color: #4caf50;\n  }\n  \n  .progress-fill.error {\n    background-color: #f44336;\n  }\n  \n  .progress-text {\n    width: 40px;\n    font-weight: bold;\n    text-align: right;\n  }\n  \n  .current-task {\n    margin-bottom: 15px;\n    font-size: 16px;\n  }\n  \n  .current-task span {\n    font-weight: bold;\n  }\n  \n  .log-container {\n    border: 1px solid #e0e0e0;\n    border-radius: 4px;\n    overflow: hidden;\n    margin-bottom: 20px;\n  }\n  \n  .log-header {\n    background-color: #f5f5f5;\n    padding: 8px 12px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    font-weight: bold;\n  }\n  \n  .toggle-log {\n    background: none;\n    border: none;\n    color: #2196f3;\n    cursor: pointer;\n    font-size: 14px;\n  }\n  \n  .log-content {\n    max-height: 100px;\n    transition: max-height 0.3s ease;\n    overflow: hidden;\n  }\n  \n  .log-content.expanded {\n    max-height: 300px;\n  }\n  \n  .log-scroll {\n    overflow-y: auto;\n    max-height: 300px;\n    padding: 10px;\n  }\n  \n  .log-scroll div {\n    padding: 4px 0;\n    border-bottom: 1px solid #f0f0f0;\n    font-family: monospace;\n  }\n  \n  .log-time {\n    color: #757575;\n    margin-right: 10px;\n    font-size: 12px;\n  }\n  \n  .error-log .log-message {\n    color: #f44336;\n  }\n  \n  .success-log .log-message {\n    color: #4caf50;\n  }\n  \n  .progress-log .log-message {\n    color: #2196f3;\n  }\n  \n  .dialog-footer {\n    display: flex;\n    justify-content: flex-end;\n    gap: 10px;\n  }\n  \n  .close-button, .retry-button {\n    padding: 8px 16px;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    font-weight: bold;\n  }\n  \n  .close-button {\n    background-color: #e0e0e0;\n  }\n  \n  .retry-button {\n    background-color: #2196f3;\n    color: white;\n  }\n  </style>"]}]}