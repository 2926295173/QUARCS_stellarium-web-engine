{"remainingRequest":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/src/components/Chart-Line.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/src/components/Chart-Line.vue","mtime":1752130124000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1707125360000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/thread-loader/dist/cjs.js","mtime":1707125360000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/babel-loader/lib/index.js","mtime":1707125360000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1707125360000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/vue-loader/lib/index.js","mtime":1707125450000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Chart-Line.vue"],"names":[],"mappings":";;;;;;;;AAQA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Chart-Line.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <!-- 折线图区域 -->\n    <div ref=\"linechart\" :style=\"{ width: containerMaxWidth + 'px', height: 80 + 'px' }\" class=\"linechart-panel\"></div>\n  </div>\n</template>\n\n<script>\nimport * as echarts from 'echarts';\n\nexport default {\n  name: 'LineChart',\n  data() {\n    return {\n      containerMaxWidth: 190,\n      \n      chartData1: [],  \n      chartData2: [],\n      xAxis_min: 0,\n      xAxis_max: 50, \n      yAxis_min: -4,\n      yAxis_max: 4,  \n      range: 4,\n      \n      // 新增数据\n      resolution: '1920x1080',  // 分辨率\n      currentRa: '0.000',       // 当前Ra值\n      currentDec: '0.000',      // 当前Dec值\n    };\n  },\n  mounted() {\n    this.$bus.$emit('AppSendMessage', 'Vue_Command', 'getStagingGuiderData');\n  },\n  created() {\n    this.$bus.$on('AddLineChartData', this.addData);\n    this.$bus.$on('SetLineChartRange', this.changeRange);\n    this.$bus.$on('clearChartData', this.clearChartData);\n    this.$bus.$on('ChartRangeSwitch', this.RangeSwitch);\n    this.$bus.$on('updateLineChartWidth', this.initChart);\n    \n    // 新增事件监听\n    this.$bus.$on('GuideSize', this.updateResolution);\n  },\n  methods: {\n    initChart(Width) {\n      this.containerMaxWidth = Width - 95;\n      const chartDom = this.$refs.linechart;\n      chartDom.style.width = this.containerMaxWidth + 'px';\n      this.myChart = echarts.init(chartDom);\n      this.renderChart(this.xAxis_min, this.xAxis_max, this.yAxis_min, this.yAxis_max);\n    },\n    renderChart(x_min,x_max,y_min,y_max) {\n      const option = {\n        grid: {  \n          left: '0%',\n          right: '2%',\n          bottom: '0%',\n          top: '10%',\n          containLabel: true\n        },\n        xAxis: {\n          min: x_min,\n          max: x_max,\n          axisLine: {\n            lineStyle: {\n              color: 'rgba(200, 200, 200, 0.5)'  // x轴线颜色\n            }\n          },\n          axisLabel: {\n            color: 'white', \n            fontSize: 5\n          },\n          splitLine: {\n            show: true, // 显示分隔线\n            lineStyle: {\n              color: 'rgba(128, 128, 128, 0.5)', // 设置分隔线颜色\n              width: 1, // 设置分隔线宽度\n              type: 'solid' // 设置分隔线样式\n            }\n          }\n        },\n        yAxis: {\n          min: y_min,\n          max: y_max,\n          axisLine: {\n            lineStyle: {\n              color: 'rgba(200, 200, 200, 0.5)'  // x轴线颜色\n            }\n          },\n          axisLabel: {\n            color: 'white', \n            fontSize: 5\n          },\n          splitLine: {\n            show: true, // 显示分隔线\n            lineStyle: {\n              color: 'rgba(128, 128, 128, 0.5)', // 设置分隔线颜色\n              width: 1, // 设置分隔线宽度\n              type: 'solid' // 设置分隔线样式\n            }\n          }\n        },\n        legend: {\n          data: [\n            {\n              name: `分辨率: ${this.resolution}`,\n              textStyle: {\n                color: 'rgba(255, 255, 255, 0.8)',\n                fontSize: 8\n              }\n            },\n            {\n              name: `Ra: ${this.currentRa}`,\n              textStyle: {\n                color: 'red',\n                fontSize: 8\n              }\n            },\n            {\n              name: `Dec: ${this.currentDec}`,\n              textStyle: {\n                color: 'green',\n                fontSize: 8\n              }\n            }\n          ],\n          top: -5,       // 设置图例距离顶部的距离\n          right: 5,      // 设置图例距离右侧的距离\n          itemWidth: 7,   // 设置图例项的宽度为5\n          itemHeight: 2,   // 设置图例项的高度为3\n          textStyle: {\n            color: 'white', // 设置字体颜色\n            fontSize: 8 // 设置字体大小\n          }\n        },\n        series: [\n          {\n            name: `Ra: ${this.currentRa}`,  // 系列名称也要对应图例\n            type: 'line',\n            data: this.chartData1,\n            itemStyle: {\n              color: 'red'\n            },\n            lineStyle: {  // 设置红色曲线的宽度为2\n              width: 1\n            },\n            symbolSize: 0\n          },\n          {\n            name: `Dec: ${this.currentDec}`,  // 系列名称也要对应图例\n            type: 'line',\n            data: this.chartData2,\n            itemStyle: {\n              color: 'green'\n            },\n            lineStyle: {  // 设置红色曲线的宽度为2\n              width: 1\n            },\n            symbolSize: 0\n          },\n          {\n            name: `分辨率: ${this.resolution}`,  // 分辨率对应的虚拟系列\n            type: 'line',\n            data: [],  // 空数据，不显示任何图形\n            itemStyle: {\n              color: 'transparent'  // 透明色\n            },\n            lineStyle: {\n              width: 0,  // 线宽为0\n              opacity: 0  // 完全透明\n            },\n            symbolSize: 0,\n            silent: true  // 不响应鼠标事件\n          }\n        ]\n      };\n      this.myChart.setOption(option);\n    },\n    addData(newDataPoint1,newDataPoint2) {\n      this.chartData1.push(newDataPoint1);\n      this.chartData2.push(newDataPoint2);\n      \n      // 更新当前Ra和Dec值\n      if (newDataPoint1 && newDataPoint1.length > 1) {\n        this.currentRa = newDataPoint1[1].toFixed(3);\n      }\n      if (newDataPoint2 && newDataPoint2.length > 1) {\n        this.currentDec = newDataPoint2[1].toFixed(3);\n      }\n      \n      this.renderChart(this.xAxis_min, this.xAxis_max, this.yAxis_min, this.yAxis_max);\n    },\n    changeRange(min, max) {\n      this.xAxis_min = min;\n      this.xAxis_max = max;\n    },\n    clearChartData() {\n      this.chartData1 = [];\n      this.chartData2 = [];\n      this.currentRa = '0.000';\n      this.currentDec = '0.000';\n      this.changeRange(0, 50);\n      this.renderChart(0, 50, this.yAxis_min, this.yAxis_max);\n    },\n    RangeSwitch() {\n      if(this.range === 4) {\n        this.range = 2;\n        this.yAxis_min = -2;\n        this.yAxis_max = 2;\n      }else if(this.range === 2) {\n        this.range = 1;\n        this.yAxis_min = -1;\n        this.yAxis_max = 1;\n      }else if(this.range === 1) {\n        this.range = 4;\n        this.yAxis_min = -4;\n        this.yAxis_max = 4;\n      }\n\n      this.renderChart(this.xAxis_min, this.xAxis_max, this.yAxis_min, this.yAxis_max);\n    },\n    \n    // 新增方法\n    updateResolution(col,row) {\n      this.resolution = `${col}x${row}`;\n      // 更新分辨率后重新渲染图表\n      this.renderChart(this.xAxis_min, this.xAxis_max, this.yAxis_min, this.yAxis_max);\n    },\n  }\n}\n</script>\n\n<style scoped>\n.linechart-panel {\n  background-color: rgba(0, 0, 0, 0.0);\n  border-radius: 5px;\n  box-sizing: border-box;\n}\n</style>\n\n"]}]}
