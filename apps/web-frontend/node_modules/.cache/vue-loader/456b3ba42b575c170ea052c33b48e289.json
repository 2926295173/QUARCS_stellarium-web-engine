{"remainingRequest":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/src/components/Chart-Focus.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/src/components/Chart-Focus.vue","mtime":1761193358922},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1707125360000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/thread-loader/dist/cjs.js","mtime":1707125360000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/babel-loader/lib/index.js","mtime":1707125360000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1707125360000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/vue-loader/lib/index.js","mtime":1707125450000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Chart-Focus.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"Chart-Focus.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <div\n      ref=\"linechart\"\n      :style=\"{ width: containerMaxWidth + 'px', height: 80 + 'px' }\"\n      class=\"linechart-panel\"\n      @mousedown=\"startDrag\"\n      @mousemove=\"dragging\"\n      @mouseup=\"endDrag\"\n      @touchstart=\"startDrag\"\n      @touchmove=\"dragging\"\n      @touchend=\"endDrag\"\n    ></div>\n    \n    <!-- 对焦结果状态框（使用全局弹层，附加到 body，避免被图表容器裁剪） -->\n    <v-dialog v-model=\"quadraticResult.show\" attach=\"body\" max-width=\"460\" overlay-color=\"black\" overlay-opacity=\"0.25\" persistent>\n      <v-scale-transition>\n        <v-card class=\"focus-status-card\">\n          <v-card-title class=\"focus-header\">\n            <div class=\"header-left\">\n              <v-icon small color=\"#33DA79\">mdi-check-circle</v-icon>\n              <span class=\"header-title\">{{ $t('Focus.status') }}</span>\n            </div>\n            <v-btn icon small class=\"close-btn\" @click=\"closePanel\">\n              <v-icon>mdi-close</v-icon>\n            </v-btn>\n          </v-card-title>\n          <v-divider class=\"divider\"></v-divider>\n          <v-card-text class=\"focus-content\">\n            <div class=\"focus-row\">\n              <span class=\"label\">{{ $t('Focus.bestPosition') }}</span>\n              <span class=\"value\">{{ getBestPositionDisplay() }}</span>\n            </div>\n            <div class=\"focus-row\">\n              <span class=\"label\">{{ $t('Focus.minHFR') }}</span>\n              <span class=\"value\">{{ quadraticResult.minHFR }}</span>\n            </div>\n            <div class=\"focus-row\">\n              <span class=\"label\">{{ $t('Focus.dataPoints') }}</span>\n              <span class=\"value\">{{ validDataPointCount }}</span>\n            </div>\n          </v-card-text>\n        </v-card>\n      </v-scale-transition>\n    </v-dialog>\n  </div>\n</template>\n\n<script>\nimport * as echarts from 'echarts';\n\nexport default {\n  name: 'LineChart',\n  props: {\n    // 是否使用时间轴模式（也可通过总线 setFocusChartTimeMode 切换）\n    useTimeAxis: {\n      type: Boolean,\n      default: false\n    },\n    // 时间窗口长度（秒），仅在时间轴模式下生效\n    timeWindowSec: {\n      type: Number,\n      default: 60\n    }\n  },\n  data() {\n    return {\n      containerMaxWidth: 150,\n      // 非时间轴：散点数据（x 为电调位置）\n      chartData1_pos: [],\n      // 时间轴：散点数据（x 为时间戳）\n      chartData1_time: [],\n      chartData2: [],\n      chartData3: [],\n      xAxis_min: 0,\n      xAxis_max: 6000,\n      yAxis_min: 0,\n      yAxis_max: 30,\n      range: 4,\n      currentX: 0,\n      FWHMMax: 0,\n      isDragging: false,\n      startX: 0,\n      deltaX: 0,\n      x_min: -60000,\n      x_max: 60000,\n      // 时间轴模式\n      isTimeMode: false,\n      timeTicker: null,\n      // 可见性控制\n      isVisible: false,\n      ioObserver: null,\n      // 渲染调度\n      renderRafId: null,\n      renderScheduled: false,\n      pendingLowerBound: null,\n      pendingUpperBound: null,\n      // 线条数据来源：若为 null 则使用 quadraticParams 动态采样\n      lineDataFromPoints: null,\n      quadraticParams: null, // { a,b,c,x0? }\n      // 二次拟合结果显示（合并新增功能）\n      quadraticResult: {\n        show: false,\n        a: '0.000000',\n        b: '0.000000',\n        c: '0.000000',\n        bestPosition: '0.00',\n        minHFR: '0.000'\n      }\n    };\n  },\n  computed: {\n    // 合并新增：有效数据点数\n    validDataPointCount() {\n      const currentData = this.isTimeMode ? this.chartData1_time : this.chartData1_pos;\n      return currentData.length;\n    }\n  },\n  mounted() {\n    // 根据可见性启动/停止时间推进\n    const el = this.$refs.linechart;\n    if (window && 'IntersectionObserver' in window && el) {\n      this.ioObserver = new IntersectionObserver((entries) => {\n        const e = entries[0];\n        this.isVisible = !!(e && e.isIntersecting);\n        this.updateTickerByVisibility();\n      }, { threshold: 0.01 });\n      this.ioObserver.observe(el);\n    } else {\n      // 回退：不可见性未知时视为可见\n      this.isVisible = true;\n    }\n    document.addEventListener('visibilitychange', this.updateTickerByVisibility);\n\n    // 初始化时间轴模式（由 prop 控制）\n    this.isTimeMode = !!this.useTimeAxis;\n    this.updateTickerByVisibility();\n  },\n  created() {\n    this.$bus.$on('FocusPosition', this.changeRange_x);\n    // 合并：启用后端拟合显示\n    this.$bus.$on('fitQuadraticCurve', this.fitQuadraticCurve);\n    this.$bus.$on('fitQuadraticCurve_minPoint', this.fitQuadraticCurve_minPoint);\n\n    this.$bus.$on('ClearfitQuadraticCurve', this.clearChartData2);\n    this.$bus.$on('ClearAllData', this.ClearAllData);\n    this.$bus.$on('updateFocusChartWidth', this.initChart);\n    this.$bus.$on('addData_Point', this.addData_Point);\n    this.$bus.$on('addMinPointData_Point', this.addMinPointData_Point);\n    this.$bus.$on('addLineData_Point', this.addLineData_Point);\n    this.$bus.$on('setFocusChartRange', this.setFocusChartRange);\n    // 新增：时间轴模式控制与点追加\n    this.$bus.$on('setFocusChartTimeMode', this.setTimeMode);\n    this.$bus.$on('addFwhmNow', this.addFwhmPointNow);\n\n  },\n  beforeDestroy() {\n    this.teardownBusAndTimers();\n  },\n  destroyed() {\n    this.teardownBusAndTimers();\n  },\n  methods: {\n    getBestPositionDisplay() {\n      return this.quadraticResult.bestPosition;\n    },\n    closePanel() {\n      this.quadraticResult.show = false;\n    },\n    formatCoefficient(value) {\n      if (Math.abs(value) < 1e-6) return value.toExponential(6);\n      return value.toFixed(6);\n    },\n    \n    teardownBusAndTimers() {\n      this.$bus.$off('FocusPosition', this.changeRange_x);\n      this.$bus.$off('ClearfitQuadraticCurve', this.clearChartData2);\n      this.$bus.$off('ClearAllData', this.ClearAllData);\n      this.$bus.$off('updateFocusChartWidth', this.initChart);\n      this.$bus.$off('addData_Point', this.addData_Point);\n      this.$bus.$off('addMinPointData_Point', this.addMinPointData_Point);\n      this.$bus.$off('addLineData_Point', this.addLineData_Point);\n      this.$bus.$off('addQuadraticCurve', this.addLineData_Point);\n      this.$bus.$off('setFocusChartRange', this.setFocusChartRange);\n      this.$bus.$off('setFocusChartTimeMode', this.setTimeMode);\n      this.$bus.$off('addFwhmNow', this.addFwhmPointNow);\n      if (this.timeTicker) {\n        clearInterval(this.timeTicker);\n        this.timeTicker = null;\n      }\n      if (this.ioObserver) {\n        try { this.ioObserver.disconnect(); } catch (e) {}\n        this.ioObserver = null;\n      }\n      document.removeEventListener('visibilitychange', this.updateTickerByVisibility);\n    },\n    initChart(Width) {\n      this.containerMaxWidth = Width - 95;\n      const chartDom = this.$refs.linechart;\n      chartDom.style.width = this.containerMaxWidth + 'px';\n      this.myChart = echarts.init(chartDom);\n      this.renderChart(this.xAxis_min, this.xAxis_max);\n    },\n    startDrag(event) {\n      if (this.isTimeMode) return; // 时间轴模式下禁用拖拽\n      this.isDragging = true;\n      const x = this.getClientX(event);\n      if (typeof x === 'number') this.startX = x;\n    },\n    dragging(event) {\n      if (this.isDragging && !this.isTimeMode) {\n        const x = this.getClientX(event);\n        if (typeof x !== 'number') return;\n        this.deltaX = (x - this.startX) * 10;\n        this.startX = x;\n        const windowWidth = this.xAxis_max - this.xAxis_min;\n        // 计算新的范围并做边界裁剪\n        let newMin = this.xAxis_min - this.deltaX;\n        const minAllowed = this.x_min;\n        const maxAllowed = this.x_max - windowWidth;\n        if (maxAllowed < minAllowed) {\n          // 安全处理：若设置不合理，回退到不移动\n          newMin = this.x_min;\n        } else {\n          newMin = Math.max(minAllowed, Math.min(maxAllowed, newMin));\n        }\n        this.xAxis_min = newMin;\n        this.xAxis_max = newMin + windowWidth;\n        this.scheduleRender(this.xAxis_min, this.xAxis_max);\n      }\n    },\n    getClientX(e) {\n      if (e && e.touches && e.touches.length) return e.touches[0].clientX;\n      if (e && e.changedTouches && e.changedTouches.length) return e.changedTouches[0].clientX;\n      if (typeof e.clientX === 'number') return e.clientX;\n      return undefined;\n    },\n    endDrag() {\n      this.isDragging = false;\n      this.deltaX = 0;\n      // this.$bus.$emit('setTargetPosition', (this.xAxis_min + this.xAxis_max) / 2);\n    },\n    scheduleRender(lowerBound, upperBound) {\n      this.pendingLowerBound = lowerBound;\n      this.pendingUpperBound = upperBound;\n      if (this.renderScheduled) return;\n      this.renderScheduled = true;\n      const cb = () => {\n        this.renderRafId = null;\n        this.renderScheduled = false;\n        this.renderChart(this.pendingLowerBound, this.pendingUpperBound);\n      };\n      if (typeof window !== 'undefined' && window.requestAnimationFrame) {\n        this.renderRafId = window.requestAnimationFrame(cb);\n      } else {\n        // 回退：无 rAF 时，使用微任务降低阻塞\n        Promise.resolve().then(cb);\n      }\n    },\n    renderChart(lowerBound, upperBound) {\n      const data1 = this.isTimeMode ? this.chartData1_time : this.chartData1_pos;\n      const y_max = data1.length > 0 ? Math.max(...data1.map(item => item[1])) * 2 : this.yAxis_max;\n      // 线数据：若传入系数，则根据当前视图范围动态采样，避免拖动后断裂或消失\n      let decData = [];\n      if (!this.isTimeMode) {\n        if (this.lineDataFromPoints && Array.isArray(this.lineDataFromPoints)) {\n          decData = this.lineDataFromPoints;\n        } else if (this.quadraticParams) {\n          const { a, b, c, x0 } = this.quadraticParams;\n          if (isFinite(a) && isFinite(b) && isFinite(c)) {\n            decData = this.generateQuadraticData(a, b, c, lowerBound, upperBound, isFinite(x0) ? x0 : 0);\n          }\n        } else {\n          decData = this.chartData2; // 兼容旧逻辑\n        }\n      }\n      \n      \n      const optionXAxis = this.isTimeMode\n        ? {\n            type: 'time',\n            min: Date.now() - this.timeWindowSec * 1000,\n            max: Date.now(),\n            axisLabel: {\n              color: 'white',\n              fontSize: 5,\n              formatter: function (value) {\n                const d = new Date(value);\n                const pad = (n) => (n < 10 ? '0' + n : '' + n);\n                return pad(d.getHours()) + ':' + pad(d.getMinutes()) + ':' + pad(d.getSeconds());\n              }\n            },\n            axisLine: { lineStyle: { color: 'rgba(200, 200, 200, 0.5)' } },\n            splitLine: {\n              show: true,\n              lineStyle: { color: 'rgba(128, 128, 128, 0.5)', width: 1, type: 'solid' }\n            }\n          }\n        : {\n            type: 'value',\n            min: lowerBound,\n            max: upperBound,\n            axisLine: { lineStyle: { color: 'rgba(200, 200, 200, 0.5)' } },\n            axisLabel: { color: 'white', fontSize: 5 },\n            splitLine: { show: true, lineStyle: { color: 'rgba(128, 128, 128, 0.5)', width: 1, type: 'solid' } }\n          };\n      const option = {\n        grid: {\n          left: '0%',\n          right: '2%',\n          bottom: '0%',\n          top: '10%',\n          containLabel: true\n        },\n        xAxis: optionXAxis,\n        yAxis: {\n          min: this.yAxis_min,\n          max: y_max,\n          axisLine: {\n            lineStyle: {\n              color: 'rgba(200, 200, 200, 0.5)'  // y轴线颜色\n            }\n          },\n          axisLabel: {\n            color: 'white',\n            fontSize: 5\n          },\n          splitNumber: 3,\n          splitLine: {\n            show: true,\n            lineStyle: {\n              color: 'rgba(128, 128, 128, 0.5)',\n              width: 1,\n              type: 'solid'\n            }\n          }\n        },\n        series: [\n          {\n            name: 'FWHM',\n            type: 'scatter',\n            data: data1,\n            itemStyle: {\n              color: 'red'\n            },\n            symbolSize: 4\n          },\n          !this.isTimeMode ? {\n            name: 'Dec',\n            type: 'line',\n            data: decData,\n            itemStyle: {\n              color: 'green'\n            },\n            lineStyle: {\n              width: 1\n            },\n            symbolSize: 0\n          } : null,\n          !this.isTimeMode ? {\n            name: 'minPoint',\n            type: 'scatter',\n            data: this.chartData3,\n            itemStyle: {\n              color: 'rgba(75, 155, 250, 0.7)'\n            },\n            symbolSize: 4\n          } : null,\n          !this.isTimeMode ? {\n            name: 'xMinLine',\n            type: 'line',\n            data: [\n              [this.x_min, this.yAxis_min],\n              [this.x_min, y_max]\n            ],\n            lineStyle: {\n              color: 'red',\n              width: 1\n            },\n            symbol: 'none'\n          } : null,\n          !this.isTimeMode ? {\n            name: 'xMaxLine',\n            type: 'line',\n            data: [\n              [this.x_max, this.yAxis_min],\n              [this.x_max, y_max]\n            ],\n            lineStyle: {\n              color: 'red',\n              width: 1\n            },\n            symbol: 'none'\n          } : null,\n          !this.isTimeMode ? {\n            name: 'currentPosition',\n            type: 'line',\n            data: [\n              [this.currentX, this.yAxis_min],\n              [this.currentX, y_max]\n            ],\n            lineStyle: {\n              color: 'green',\n              width: 1\n            },\n            symbol: 'none'\n          } : null\n        ]\n      };\n      // 过滤掉为 null 的 series 项\n      option.series = option.series.filter(Boolean);\n      // 使用 lazyUpdate 降低同步开销\n      this.myChart.setOption(option, false, true);\n    },\n    // 追加一个以\"当前时间\"为 x 的 FWHM 点（时间轴模式）\n    addFwhmPointNow(fwhm) {\n      // 确保 fwhm 是数字\n      const fwhmNum = typeof fwhm === 'number' ? fwhm : parseFloat(fwhm);\n      if (isNaN(fwhmNum) || fwhmNum <= 0) { return; }\n      \n      const now = Date.now();\n      const point = [now, fwhmNum];\n      this.chartData1_time.push(point);\n      \n      \n      // 仅保留窗口期内的数据\n      const minTs = now - this.timeWindowSec * 1000;\n      this.chartData1_time = this.chartData1_time.filter(p => p[0] >= minTs);\n      \n      // 强制重新渲染\n      if (this.myChart) { this.scheduleRender(this.xAxis_min, this.xAxis_max); }\n    },\n    // 开启/关闭时间轴模式\n    setTimeMode(flag) {\n      const enable = !!flag;\n      if (enable === this.isTimeMode) return;\n      this.isTimeMode = enable;\n      this.updateTickerByVisibility();\n      if (this.myChart) { this.myChart.clear(); }\n      this.scheduleRender(this.xAxis_min, this.xAxis_max);\n    },\n    stopTimeTicker() {\n      if (this.timeTicker) {\n        clearInterval(this.timeTicker);\n        this.timeTicker = null;\n      }\n    },\n    startTimeTicker() {\n      if (this.timeTicker) return;\n      this.timeTicker = setInterval(() => {\n        // 没有新点时也推动时间轴前进\n        if (this.myChart) {\n          this.scheduleRender(this.xAxis_min, this.xAxis_max);\n        }\n      }, 1000);\n    },\n    updateTickerByVisibility() {\n      const docVisible = typeof document !== 'undefined' ? !document.hidden : true;\n      const shouldRun = this.isTimeMode && this.isVisible && docVisible;\n      if (shouldRun) this.startTimeTicker(); else this.stopTimeTicker();\n    },\n    addData_Point(x,y) {\n      const newDataPoint = [x, y];\n      try {\n        console.log('[Focus] add point:', JSON.stringify({ x, y }));\n      } catch (e) {}\n      const existingPointIndex = this.chartData1_pos.findIndex(point => point[0] === newDataPoint[0]);\n      if (existingPointIndex !== -1) {\n        // If the x value already exists, update the y value\n        if (newDataPoint[1] == 0 || newDataPoint[1] == this.chartData1_pos[existingPointIndex][1]) return;\n        this.chartData1_pos[existingPointIndex] = newDataPoint;\n      } else {\n        // If the x value does not exist, add the new data point\n        this.chartData1_pos.push(newDataPoint);\n      }\n      this.scheduleRender(this.xAxis_min, this.xAxis_max);\n    },\n    // 绘制折线/二次曲线\n    addLineData_Point(dataOrA, b, c) {\n      // 兼容：如果传入的是点数组，直接使用\n      if (Array.isArray(dataOrA)) {\n        this.lineDataFromPoints = dataOrA;\n        this.quadraticParams = null;\n        this.scheduleRender(this.xAxis_min, this.xAxis_max);\n        return;\n      }\n\n      // 若传入的是系数对象 { a, b, c }\n      if (dataOrA && typeof dataOrA === 'object' &&\n          (typeof dataOrA.a === 'number' || typeof dataOrA.a === 'string') &&\n          (typeof dataOrA.b === 'number' || typeof dataOrA.b === 'string') &&\n          (typeof dataOrA.c === 'number' || typeof dataOrA.c === 'string')) {\n        const aNum = typeof dataOrA.a === 'number' ? dataOrA.a : parseFloat(dataOrA.a);\n        const bNum = typeof dataOrA.b === 'number' ? dataOrA.b : parseFloat(dataOrA.b);\n        const cNum = typeof dataOrA.c === 'number' ? dataOrA.c : parseFloat(dataOrA.c);\n        if (!isFinite(aNum) || !isFinite(bNum) || !isFinite(cNum)) {\n          this.scheduleRender(this.xAxis_min, this.xAxis_max);\n          return;\n        }\n        const centerX = typeof dataOrA.x0 === 'number' ? dataOrA.x0 : (typeof dataOrA.x0 === 'string' ? parseFloat(dataOrA.x0) : 0);\n        this.quadraticParams = { a: aNum, b: bNum, c: cNum, x0: isFinite(centerX) ? centerX : 0 };\n        this.lineDataFromPoints = null;\n        this.scheduleRender(this.xAxis_min, this.xAxis_max);\n        return;\n      }\n\n      // 或者以三个独立参数形式传入 a, b, c\n      if ((typeof dataOrA === 'number' || typeof dataOrA === 'string') &&\n          (typeof b === 'number' || typeof b === 'string') &&\n          (typeof c === 'number' || typeof c === 'string')) {\n        const aNum = typeof dataOrA === 'number' ? dataOrA : parseFloat(dataOrA);\n        const bNum = typeof b === 'number' ? b : parseFloat(b);\n        const cNum = typeof c === 'number' ? c : parseFloat(c);\n        if (!isFinite(aNum) || !isFinite(bNum) || !isFinite(cNum)) {\n          this.scheduleRender(this.xAxis_min, this.xAxis_max);\n          return;\n        }\n        this.quadraticParams = { a: aNum, b: bNum, c: cNum };\n        this.lineDataFromPoints = null;\n        this.scheduleRender(this.xAxis_min, this.xAxis_max);\n        return;\n      }\n\n      // 其他非法输入：不处理，仅刷新现状\n      this.scheduleRender(this.xAxis_min, this.xAxis_max);\n    },\n    // 合并：后端拟合结果处理（始终按二次曲线绘制）\n    fitQuadraticCurve(dataString) {\n      const parts = dataString.split(':');\n      if (parts.length >= 6) {\n        const a = parseFloat(parts[1]);\n        const b = parseFloat(parts[2]);\n        const c = parseFloat(parts[3]);\n        const bestPosition = parseFloat(parts[4]);\n        const minHFR = parseFloat(parts[5]);\n        try {\n          console.log('[Focus] fit params from backend:', JSON.stringify({ a, b, c, bestPosition, minHFR }));\n        } catch (e) {}\n        this.quadraticResult.a = this.formatCoefficient(a);\n        this.quadraticResult.b = this.formatCoefficient(b);\n        this.quadraticResult.c = this.formatCoefficient(c);\n        this.quadraticResult.bestPosition = bestPosition.toFixed(2);\n        this.quadraticResult.minHFR = minHFR.toFixed(3);\n        this.quadraticResult.show = true;\n\n        this.generateQuadraticCurve(a, b, c, bestPosition);\n      }\n    },\n    generateQuadraticCurve(a, b, c, bestPosition) {\n      try {\n        console.log('[Focus] draw quadratic curve with params:', JSON.stringify({ a, b, c, bestPosition }));\n      } catch (e) {}\n      // 复用已有 generateQuadraticData 与 chartData1_pos\n      let minPos = 0;\n      if (this.chartData1_pos.length > 0) {\n        minPos = Math.min(...this.chartData1_pos.map(p => p[0]));\n      }\n      // 通过顶点位置 bestPosition 反推拟合时的原点偏移 originX：\n      // 若拟合形式为 y = a*(x-originX)^2 + b*(x-originX) + c，则顶点在 x = originX - b/(2a)\n      // 故 originX = bestPosition + b/(2a)\n      let originX = minPos;\n      if (isFinite(a) && Math.abs(a) > 1e-12 && isFinite(b) && isFinite(bestPosition)) {\n        originX = bestPosition + b / (2 * a);\n      }\n      let startX, endX, stepSize;\n      if (this.chartData1_pos.length > 0) {\n        const dataMinX = Math.min(...this.chartData1_pos.map(p => p[0]));\n        const dataMaxX = Math.max(...this.chartData1_pos.map(p => p[0]));\n        const dataRange = dataMaxX - dataMinX;\n        const extension = Math.max(dataRange * 0.2, 1000);\n        startX = dataMinX - extension;\n        endX = dataMaxX + extension;\n        stepSize = Math.max(Math.floor(dataRange / 100), 20);\n      } else {\n        const range = 5000;\n        startX = bestPosition - range;\n        endX = bestPosition + range;\n        stepSize = 50;\n      }\n      // 针对 |a| 很小时扩展范围以可见曲率\n      const minA = 1e-16;\n      const targetDelta = 1.0; // 期望在可视范围内至少 ~1 的 HFR 变化\n      const curvatureRange = Math.sqrt(targetDelta / Math.max(Math.abs(a), minA));\n      startX = Math.min(startX, bestPosition - curvatureRange, this.xAxis_min);\n      endX = Math.max(endX, bestPosition + curvatureRange, this.xAxis_max);\n\n      const curve = [];\n      for (let x = startX; x <= endX; x += stepSize) {\n        const rx = x - originX;\n        const y = a * rx * rx + b * rx + c;\n        if (isFinite(y) && y >= 0) curve.push([x, y]);\n      }\n      // 加密顶点附近\n      const fineRange = Math.max(stepSize * 2, 200, curvatureRange / 4);\n      const fineStep = Math.max(stepSize / 10, 5);\n      for (let off = -fineRange; off <= fineRange; off += fineStep) {\n        const x = bestPosition + off;\n        if (x >= startX && x <= endX) {\n          const rx = x - originX;\n          const y = a * rx * rx + b * rx + c;\n          if (isFinite(y) && y >= 0) curve.push([x, y]);\n        }\n      }\n      curve.sort((p, q) => p[0] - q[0]);\n      this.chartData2 = curve;\n      if (curve.length > 0) {\n        this.xAxis_min = Math.min(this.xAxis_min, curve[0][0]);\n        this.xAxis_max = Math.max(this.xAxis_max, curve[curve.length - 1][0]);\n      }\n      this.renderChart(this.xAxis_min, this.xAxis_max);\n    },\n    // 删除线性分支，统一用二次曲线\n    // 生成一元二次曲线采样点\n    generateQuadraticData(a, b, c, xMin, xMax, centerX = 0) {\n      const start = Number.isFinite(xMin) ? xMin : 0;\n      const end = Number.isFinite(xMax) ? xMax : 100;\n      const span = end - start;\n      const samples = Math.max(2, Math.min(400, Math.ceil(span / 50))); // 根据范围自适应采样密度\n      const step = span / samples || 1;\n      const data = [];\n      // 通过 x0(centerX) 作为拟合原点：y = a*(x-x0)^2 + b*(x-x0) + c\n      for (let x = start; x <= end; x += step) {\n        const t = x - centerX;\n        const y = a * t * t + b * t + c;\n        data.push([x, y]);\n      }\n      // 确保包含尾点\n      if (data.length === 0 || data[data.length - 1][0] < end) {\n        const tEnd = end - centerX;\n        const yEnd = a * tEnd * tEnd + b * tEnd + c;\n        data.push([end, yEnd]);\n      }\n      return data;\n    },\n    addMinPointData_Point(x,y) {\n      const newDataPoint = [x, y];\n      this.chartData3.push(newDataPoint);\n      this.scheduleRender(this.xAxis_min, this.xAxis_max);\n    },\n    // 更改显示的x轴范围\n    changeRange_x(current, target) {\n      this.xAxis_min = Number(current) - 3000;\n      this.xAxis_max = Number(current) + 3000;\n      this.currentX = current;\n      \n      this.scheduleRender(this.xAxis_min, this.xAxis_max);\n    },\n\n    // 清除数据\n    clearChartData1() {\n      this.chartData1_pos = [];\n      this.chartData1_time = [];\n      this.scheduleRender(this.xAxis_min, this.xAxis_max);\n    },\n    clearChartData2() {\n      this.chartData2 = [];\n      this.scheduleRender(this.xAxis_min, this.xAxis_max);\n    },\n    ClearAllData() {\n      this.chartData1_pos = [];\n      this.chartData1_time = [];\n      this.chartData2 = [];\n      this.chartData3 = [];\n      this.yAxis_max = 30;\n      this.FWHMMax = 15;\n      this.renderChart(this.xAxis_min, this.xAxis_max);\n    },\n    // 切换显示范围\n    RangeSwitch() {\n      if (this.range === 4) {\n        this.range = 2;\n        this.yAxis_min = -2;\n        this.yAxis_max = 2;\n      } else if (this.range === 2) {\n        this.range = 1;\n        this.yAxis_min = -1;\n        this.yAxis_max = 1;\n      } else if (this.range === 1) {\n        this.range = 4;\n        this.yAxis_min = -4;\n        this.yAxis_max = 4;\n      }\n      this.renderChart(this.xAxis_min, this.xAxis_max);\n    },\n    // 更新FWHM\n    // UpdateFWHM(FWHM) {\n    //   const newDataPoint = [this.currentX, FWHM];\n    //   this.addData_Point(newDataPoint);\n    //   // console.log(\"QHYCCD | UpdateFWHM:\", newDataPoint);\n    //   // this.$bus.$emit('SendConsoleLogMsg', 'UpdateFWHM:' + newDataPoint, 'info');\n    //   this.renderChart(this.xAxis_min, this.xAxis_max);\n    // },\n    // 拟合二次曲线\n    // fitQuadraticCurve(x, y) {\n    //   const newDataPoint = [x, y];\n    //   this.addData_Line(newDataPoint);\n    // },\n    // 拟合二次曲线最小点\n    // fitQuadraticCurve_minPoint(x, y) {\n    //   console.log(\"QHYCCD | minPoint:\", x, ',', y);\n    //   this.$bus.$emit('SendConsoleLogMsg', 'minPoint:' + x + ',' + y, 'info');\n    //   this.chartData3 = [];\n    //   const newDataPoint = [x, y];\n    //   this.chartData3.push(newDataPoint);\n    // },\n    setFocusChartRange(lowerBound, upperBound) {\n      if (typeof lowerBound === 'string') {\n        lowerBound = parseInt(lowerBound);\n      }\n      if (typeof upperBound === 'string') {\n        upperBound = parseInt(upperBound);\n      }\n      if (isNaN(lowerBound) || isNaN(upperBound)) {\n        return;\n      }\n      if (lowerBound === upperBound) {\n        return;\n      }\n      if (lowerBound < upperBound) {\n        this.x_min = lowerBound;\n        this.x_max = upperBound;\n      } else {\n        this.x_min = upperBound;\n        this.x_max = lowerBound;\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.linechart-panel {\n  background-color: rgba(0, 0, 0, 0.0);\n  /* backdrop-filter: blur(5px); */\n  border-radius: 5px;\n  box-sizing: border-box;\n}\n\n/* 使对焦结果面板固定在全屏中央，而不是相对图表容器定位 */\n.focus-result-panel {\n  position: fixed;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 10000;\n  background-color: rgba(64, 64, 64, 0.9);\n  backdrop-filter: blur(5px);\n  border-radius: 10px;\n  border: 4px solid rgba(128, 128, 128, 0.5);\n  padding: 12px 16px;\n  width: min(420px, calc(100vw - 40px));\n  color: #ffffff;\n}\n\n.panel-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 8px;\n}\n\n.header-left {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.panel-title {\n  font-size: 16px;\n}\n\n.close-button {\n  cursor: pointer;\n  font-size: 18px;\n  line-height: 1;\n}\n\n/* 美化后的焦点状态卡片样式 */\n.focus-status-card {\n  background: linear-gradient(145deg, rgba(55, 55, 55, 0.95), rgba(65, 65, 65, 0.95));\n  backdrop-filter: blur(6px);\n  border-radius: 12px !important;\n  border: 1px solid rgba(255, 255, 255, 0.08);\n  box-shadow: 0 10px 30px rgba(0,0,0,0.35), inset 0 1px 0 rgba(255,255,255,0.05);\n  color: #EDEFF2;\n}\n\n.focus-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px 14px !important;\n}\n.focus-header .header-left {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n.focus-header .header-title {\n  font-size: 16px;\n  font-weight: 600;\n  letter-spacing: 0.2px;\n}\n.close-btn {\n  opacity: 0.85;\n}\n.close-btn:hover { opacity: 1; }\n\n.divider {\n  opacity: 0.15;\n}\n\n.focus-content {\n  padding: 12px 14px 16px 14px !important;\n}\n.focus-row {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px 0;\n}\n.focus-row + .focus-row {\n  border-top: 1px dashed rgba(255, 255, 255, 0.08);\n}\n.label {\n  color: #C9D1D9;\n  opacity: 0.9;\n  font-size: 14px;\n}\n.value {\n  color: #FFFFFF;\n  font-weight: 600;\n  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace;\n  font-size: 18px;\n  letter-spacing: 0.2px;\n  font-variant-numeric: tabular-nums;\n}\n</style>\n"]}]}