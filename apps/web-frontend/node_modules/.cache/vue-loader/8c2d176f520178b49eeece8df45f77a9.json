{"remainingRequest":"/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/src/components/Chart-Line.vue?vue&type=style&index=0&id=5711d27e&scoped=true&lang=css&","dependencies":[{"path":"/app/src/components/Chart-Line.vue","mtime":1739424155000},{"path":"/app/node_modules/css-loader/dist/cjs.js","mtime":1707125446000},{"path":"/app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1707125450000},{"path":"/app/node_modules/postcss-loader/src/index.js","mtime":1707125450000},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":1707125360000},{"path":"/app/node_modules/vue-loader/lib/index.js","mtime":1707125450000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5saW5lY2hhcnQtcGFuZWwgewogIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4wKTsKICAvKiBiYWNrZHJvcC1maWx0ZXI6IGJsdXIoNXB4KTsgKi8KICBib3JkZXItcmFkaXVzOiA1cHg7CiAgYm94LXNpemluZzogYm9yZGVyLWJveDsKfQoKLmNsZWFyLWJ0biB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHRvcDogMDsKICBsZWZ0OiA3JTsKICB3aWR0aDogMzAlOwogIGhlaWdodDogMTAlOwogIAogIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKTsKICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOCk7CiAgYmFja2Ryb3AtZmlsdGVyOiBibHVyKDVweCk7CiAgYm9yZGVyLXJhZGl1czogNXB4OwogIGJveC1zaXppbmc6IGJvcmRlci1ib3g7Cn0KCgo="},{"version":3,"sources":["Chart-Line.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4KA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Chart-Line.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <div ref=\"linechart\" :style=\"{ width: containerMaxWidth + 'px', height: 80 + 'px' }\" class=\"linechart-panel\"></div>\n  </div>\n</template>\n\n<script>\nimport * as echarts from 'echarts';\n\nexport default {\n  name: 'LineChart',\n  data() {\n    return {\n      containerMaxWidth: 190,\n\n      chartData1: [],  \n      chartData2: [],\n      xAxis_min: 0,\n      xAxis_max: 50, \n      yAxis_min: -4,\n      yAxis_max: 4,  \n      range: 4,\n    };\n  },\n  mounted() {\n    this.$bus.$emit('AppSendMessage', 'Vue_Command', 'getStagingGuiderData');\n  },\n  created() {\n    this.$bus.$on('AddLineChartData', this.addData);\n    this.$bus.$on('SetLineChartRange', this.changeRange);\n    this.$bus.$on('clearChartData', this.clearChartData);\n    this.$bus.$on('ChartRangeSwitch', this.RangeSwitch);\n    this.$bus.$on('updateLineChartWidth', this.initChart);\n  },\n  methods: {\n    initChart(Width) {\n      this.containerMaxWidth = Width - 95;\n      const chartDom = this.$refs.linechart;\n      chartDom.style.width = this.containerMaxWidth + 'px';\n      this.myChart = echarts.init(chartDom);\n      this.renderChart(this.xAxis_min, this.xAxis_max, this.yAxis_min, this.yAxis_max);\n    },\n    renderChart(x_min,x_max,y_min,y_max) {\n      const option = {\n        grid: {  \n          left: '0%',\n          right: '2%',\n          bottom: '0%',\n          top: '10%',\n          containLabel: true\n        },\n        xAxis: {\n          min: x_min,\n          max: x_max,\n          axisLine: {\n            lineStyle: {\n              color: 'rgba(200, 200, 200, 0.5)'  // x轴线颜色\n            }\n          },\n          axisLabel: {\n            color: 'white', \n            fontSize: 5\n          },\n          splitLine: {\n            show: true, // 显示分隔线\n            lineStyle: {\n              color: 'rgba(128, 128, 128, 0.5)', // 设置分隔线颜色\n              width: 1, // 设置分隔线宽度\n              type: 'solid' // 设置分隔线样式\n            }\n          }\n        },\n        yAxis: {\n          min: y_min,\n          max: y_max,\n          axisLine: {\n            lineStyle: {\n              color: 'rgba(200, 200, 200, 0.5)'  // x轴线颜色\n            }\n          },\n          axisLabel: {\n            color: 'white', \n            fontSize: 5\n          },\n          splitLine: {\n            show: true, // 显示分隔线\n            lineStyle: {\n              color: 'rgba(128, 128, 128, 0.5)', // 设置分隔线颜色\n              width: 1, // 设置分隔线宽度\n              type: 'solid' // 设置分隔线样式\n            }\n          }\n        },\n        legend: {\n          data: ['Ra', 'Dec'],  // 图例中的标注名称\n          top: -5,       // 设置图例距离顶部的距离\n          right: 5,      // 设置图例距离右侧的距离\n          itemWidth: 7,   // 设置图例项的宽度为5\n          itemHeight: 2,   // 设置图例项的高度为3\n          textStyle: {\n            color: 'white', // 设置字体颜色\n            fontSize: 8 // 设置字体大小\n          }\n        },\n        series: [\n          {\n            name: 'Ra',\n            type: 'line',\n            data: this.chartData1,\n            itemStyle: {\n              color: 'red'\n            },\n            lineStyle: {  // 设置红色曲线的宽度为2\n              width: 1\n            },\n            symbolSize: 0\n          },\n          {\n            name: 'Dec',\n            type: 'line',\n            data: this.chartData2,\n            itemStyle: {\n              color: 'green'\n            },\n            lineStyle: {  // 设置红色曲线的宽度为2\n              width: 1\n            },\n            symbolSize: 0\n          }\n        ]\n      };\n      this.myChart.setOption(option);\n    },\n    addData(newDataPoint1,newDataPoint2) {\n      // const newDataPoint1 = [Math.floor(Math.random() * 50), Math.random() * 8 - 4];\n      // const newDataPoint2 = [Math.floor(Math.random() * 50), Math.random() * 8 - 4];\n      this.chartData1.push(newDataPoint1);\n      this.chartData2.push(newDataPoint2);\n      this.renderChart(this.xAxis_min, this.xAxis_max, this.yAxis_min, this.yAxis_max);\n    },\n    changeRange(min, max) {\n      this.xAxis_min = min;\n      this.xAxis_max = max;\n    },\n    clearChartData() {\n      this.chartData1 = [];\n      this.chartData2 = [];\n      this.changeRange(0, 50);\n      this.renderChart(0, 50, this.yAxis_min, this.yAxis_max);\n    },\n    RangeSwitch() {\n      if(this.range === 4) {\n        this.range = 2;\n        this.yAxis_min = -2;\n        this.yAxis_max = 2;\n      }else if(this.range === 2) {\n        this.range = 1;\n        this.yAxis_min = -1;\n        this.yAxis_max = 1;\n      }else if(this.range === 1) {\n        this.range = 4;\n        this.yAxis_min = -4;\n        this.yAxis_max = 4;\n      }\n\n      this.renderChart(this.xAxis_min, this.xAxis_max, this.yAxis_min, this.yAxis_max);\n    }\n  }\n}\n</script>\n\n<style scoped>\n.linechart-panel {\n  background-color: rgba(0, 0, 0, 0.0);\n  /* backdrop-filter: blur(5px); */\n  border-radius: 5px;\n  box-sizing: border-box;\n}\n\n.clear-btn {\n  position: absolute;\n  top: 0;\n  left: 7%;\n  width: 30%;\n  height: 10%;\n  \n  background-color: rgba(255, 255, 255, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.8);\n  backdrop-filter: blur(5px);\n  border-radius: 5px;\n  box-sizing: border-box;\n}\n\n\n</style>\n\n"]}]}