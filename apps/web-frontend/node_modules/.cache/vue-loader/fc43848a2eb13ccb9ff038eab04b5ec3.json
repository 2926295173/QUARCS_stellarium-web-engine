{"remainingRequest":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/src/components/location-mgr.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/src/components/location-mgr.vue","mtime":1749200855273},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/babel-loader/lib/index.js","mtime":1707125360000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1707125360000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/vue-loader/lib/index.js","mtime":1707125450000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["location-mgr.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8GA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"location-mgr.vue","sourceRoot":"src/components","sourcesContent":["// Stellarium Web - Copyright (c) 2022 - Stellarium Labs SRL\n//\n// This program is licensed under the terms of the GNU AGPL v3, or\n// alternatively under a commercial licence.\n//\n// The terms of the AGPL v3 license can be found in the main directory of this\n// repository.\n\n<template>\n  <div>\n    <v-row justify=\"space-around\">\n      <v-col cols=\"4\" v-if=\"doShowMyLocation\">\n        <v-list two-line subheader>\n          <v-subheader>{{ $t('My Locations') }}</v-subheader>\n          <v-list-item href=\"javascript:;\" v-for=\"item in knownLocations\" v-bind:key=\"item.id\" @click.native.stop=\"selectKnownLocation(item)\" :style=\"(item && knownLocationMode && selectedKnownLocation && item.id === selectedKnownLocation.id) ? 'background-color: #455a64' : ''\">\n            <v-list-item-icon>\n              <v-icon>mdi-map-marker</v-icon>\n            </v-list-item-icon>\n            <v-list-item-content>\n              <v-list-item-title>{{ item.short_name }}</v-list-item-title>\n              <v-list-item-subtitle>{{ item.country }}</v-list-item-subtitle>\n            </v-list-item-content>\n          </v-list-item>\n        </v-list>\n      </v-col>\n      <v-col cols=\"doShowMyLocation ? 8 : 12\" >\n        <v-card class=\"blue-grey darken-2 white--text\">\n          <v-card-title primary-title>\n            <v-container fluid>\n              <v-row>\n                <v-col>\n                  <div>\n                    <div class=\"text-h5\" style=\"overflow: hidden; white-space: nowrap; text-overflow: ellipsis;\">{{ locationForDetail ? locationForDetail.short_name + ', ' + locationForDetail.country :  '-' }}</div>\n                    <v-btn @click.native.stop=\"useLocation()\" style=\"position: absolute; right: 20px\"><v-icon>mdi-chevron-right</v-icon> {{ $t('Use this location') }}</v-btn>\n                    <div class=\"grey--text text-subtitle-2\" v-if=\"locationForDetail.street_address\">{{ locationForDetail ? (locationForDetail.street_address ? locationForDetail.street_address : $t('Unknown Address')) : '-' }}</div>\n                    <div class=\"grey--text text-subtitle-2\">{{ locationForDetail ? locationForDetail.lat.toFixed(5) + ' ' + locationForDetail.lng.toFixed(5) : '-' }}</div>\n                    <div class=\"grey--text text-subtitle-2 drag-coordinates\" v-if=\"isDragging && dragCoordinates\">\n                      <span class=\"drag-hint\">\n                        <v-icon small color=\"orange\">mdi-drag</v-icon> \n                        拖拽中: {{ dragCoordinates.lat.toFixed(5) + ', ' + dragCoordinates.lng.toFixed(5) }}\n                      </span>\n                    </div>\n                  </div>\n                </v-col>\n              </v-row>\n            </v-container>\n          </v-card-title>\n          <div style=\"height: 375px\">\n              <!-- <v-btn light fab class=\"mx-0 pa-0\" @click.native.stop=\"centerOnRealPosition()\" style=\"position: absolute; z-index: 10000; bottom: 16px; right: 12px;\">\n                <v-icon>mdi-crosshairs-gps</v-icon>\n              </v-btn> -->\n            <l-map class=\"black--text\" ref=\"myMap\" :center=\"mapCenter\" :zoom=\"defaultZoom\" style=\"width: 100%; height: 375px;\" :options=\"{zoomControl: false, minZoom: effectiveMinZoom, maxZoom: effectiveMaxZoom}\">\n              <l-control-zoom position=\"topright\"></l-control-zoom>\n              <l-tile-layer :url=\"url\" attribution='&copy; <a target=\"_blank\" rel=\"noopener\" href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'></l-tile-layer>\n              <l-marker :key=\"loc.id\"\n                  v-for=\"loc in knownLocations\"\n                  :lat-lng=\"[ loc.lat, loc.lng ]\"\n                  :clickable=\"true\"\n                  :opacity=\"(!pickLocationMode && selectedKnownLocation && selectedKnownLocation === loc ? 1.0 : 0.25)\"\n                  @click=\"selectKnownLocation(loc)\"\n                  :draggable=\"!pickLocationMode && selectedKnownLocation && selectedKnownLocation === loc\" \n                  @dragstart=\"startDrag\"\n                  @drag=\"onDrag\"\n                  @dragend=\"dragEnd\"\n                >\n                  <l-tooltip v-if=\"!pickLocationMode && selectedKnownLocation && selectedKnownLocation === loc && isDragging\">\n                    <div class=\"black--text\">\n                      <strong>拖拽移动中</strong><br>\n                      纬度: {{ dragCoordinates ? dragCoordinates.lat.toFixed(6) : loc.lat.toFixed(6) }}<br>\n                      经度: {{ dragCoordinates ? dragCoordinates.lng.toFixed(6) : loc.lng.toFixed(6) }}<br>\n                      <small style=\"color: #666;\">松开鼠标确认位置</small>\n                    </div>\n                  </l-tooltip>\n                </l-marker>\n              <l-circle v-if=\"startLocation\"\n                :lat-lng=\"[ startLocation.lat, startLocation.lng ]\"\n                :radius=\"startLocation.accuracy\"\n                :options=\"{\n                  strokeColor: '#0000FF',\n                  strokeOpacity: 0.5,\n                  strokeWeight: 1,\n                  fillColor: '#0000FF',\n                  fillOpacity: 0.08}\"></l-circle>\n              <l-marker v-if=\"pickLocationMode && pickLocation\" \n                :lat-lng=\"[ pickLocation.lat, pickLocation.lng ]\"\n                :draggable=\"true\" \n                @dragstart=\"startDrag\"\n                @drag=\"onDrag\"\n                @dragend=\"dragEnd\">\n                <l-tooltip>\n                  <div class=\"black--text\">\n                    <span v-if=\"!isDragging\">拖拽调整位置</span>\n                    <div v-if=\"isDragging\">\n                      <strong>拖拽移动中</strong><br>\n                      纬度: {{ dragCoordinates ? dragCoordinates.lat.toFixed(6) : pickLocation.lat.toFixed(6) }}<br>\n                      经度: {{ dragCoordinates ? dragCoordinates.lng.toFixed(6) : pickLocation.lng.toFixed(6) }}<br>\n                      <small style=\"color: #666;\">松开鼠标确认位置</small>\n                    </div>\n                  </div>\n                </l-tooltip>\n              </l-marker>\n            </l-map>\n          </div>\n        </v-card>\n      </v-col>\n    </v-row>\n  </div>\n</template>\n\n<script>\nimport swh from '@/assets/sw_helpers.js'\nimport { LMap, LTileLayer, LMarker, LCircle, LTooltip, LControlZoom } from 'vue2-leaflet'\nimport L from 'leaflet'\nimport MapConfig from '@/config/map-config.js'\n\nexport default {\n  data: function () {\n    return {\n      mode: 'pick',\n      pickLocation: undefined,\n      selectedKnownLocation: undefined,\n      mapCenter: [43.6, 1.4333],\n      url: process.env.NODE_ENV === 'production' ? '/tiles/{z}/{x}/{y}.png' : 'http://localhost:8080/tiles/{z}/{x}/{y}.png',\n      fallbackUrl: '/tiles/{z}/{x}/{y}.png',\n      serverUrl: 'http://localhost:8080/tiles/{z}/{x}/{y}.png',\n      onlineUrl: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n      // 使用配置文件中的缩放级别设置\n      minZoom: MapConfig.zoom.offline.min,\n      maxZoom: MapConfig.zoom.offline.max,\n      defaultZoom: MapConfig.zoom.offline.default,\n      // 拖拽状态管理\n      isDragging: false,\n      dragCoordinates: null\n    }\n  },\n  props: ['showMyLocation', 'knownLocations', 'startLocation', 'realLocation'],\n  computed: {\n    doShowMyLocation: function () {\n      return this.showMyLocation === undefined ? false : this.showMyLocation\n    },\n    pickLocationMode: function () {\n      return this.mode === 'pick'\n    },\n    knownLocationMode: function () {\n      return this.mode === 'known'\n    },\n    locationForDetail: function () {\n      if (this.pickLocationMode && this.pickLocation === undefined) {\n        return this.startLocation\n      }\n      return this.pickLocationMode ? this.pickLocation : this.selectedKnownLocation\n    },\n    // 动态缩放级别配置\n    effectiveMinZoom: function () {\n      // 在生产环境下使用离线瓦片的限制，开发环境可以更宽松\n      const offlineMin = MapConfig.zoom.offline.min\n      const onlineMin = MapConfig.zoom.online.min\n      return process.env.NODE_ENV === 'production' ? offlineMin : Math.max(onlineMin, offlineMin - 1)\n    },\n    effectiveMaxZoom: function () {\n      // 在生产环境下严格限制，开发环境允许更高级别（在线瓦片）\n      const offlineMax = MapConfig.zoom.offline.max\n      const onlineMax = MapConfig.zoom.online.max\n      return process.env.NODE_ENV === 'production' ? offlineMax : Math.min(onlineMax, offlineMax + 6)\n    }\n  },\n  watch: {\n    startLocation: function () {\n      this.setPickLocation(this.startLocation)\n    }\n  },\n  mounted: function () {\n    const that = this\n    this.setPickLocation(this.startLocation)\n    \n    // 检测瓦片服务器可用性\n    this.checkTileAvailability()\n    \n    this.$nextTick(() => {\n      const map = this.$refs.myMap.mapObject\n      map._onResize()\n\n      // 设置缩放限制\n      this.updateZoomLimits(map)\n\n      // 添加离线搜索控件\n      this.addOfflineSearchControl(map)\n    })\n  },\n  methods: {\n    selectKnownLocation: function (loc) {\n      this.selectedKnownLocation = loc\n      this.setKnownLocationMode()\n      this.mapCenter = [loc.lat, loc.lng]\n    },\n    useLocation: function () {\n      this.$emit('locationSelected', this.locationForDetail)\n      this.$emit('resetLocation', this.locationForDetail.lat, this.locationForDetail.lng)\n    },\n    setPickLocationMode: function () {\n      this.mode = 'pick'\n    },\n    setKnownLocationMode: function () {\n      this.mode = 'known'\n    },\n    setPickLocation: function (loc) {\n      if (loc.accuracy < 100) {\n        for (const l of this.knownLocations) {\n          const d = swh.getDistanceFromLatLonInM(l.lat, l.lng, loc.lat, loc.lng)\n          if (d < 100) {\n            this.selectKnownLocation(l)\n            return\n          }\n        }\n      }\n      var pos = { lat: loc.lat, lng: loc.lng }\n      this.mapCenter = [pos.lat, pos.lng]\n      this.pickLocation = loc\n      this.setPickLocationMode()\n    },\n    // Called when the user clicks on the small cross button\n    centerOnRealPosition: function () {\n      this.setPickLocation(this.realLocation)\n    },\n    // 拖拽开始事件\n    startDrag: function (event) {\n      this.isDragging = true\n      this.dragCoordinates = {\n        lat: event.target._latlng.lat,\n        lng: event.target._latlng.lng\n      }\n      console.log('开始拖拽，初始坐标:', this.dragCoordinates)\n    },\n    // 拖拽过程中的事件\n    onDrag: function (event) {\n      this.dragCoordinates = {\n        lat: event.target._latlng.lat,\n        lng: event.target._latlng.lng\n      }\n      // 实时更新坐标显示，但不频繁打印日志\n      if (Math.random() < 0.1) { // 只有10%的概率打印，避免日志过多\n        console.log('拖拽中，当前坐标:', this.dragCoordinates.lat.toFixed(6), this.dragCoordinates.lng.toFixed(6))\n      }\n    },\n    // 拖拽结束事件\n    dragEnd: function (event) {\n      var that = this\n      var pos = { lat: event.target._latlng.lat, lng: event.target._latlng.lng, accuracy: 0 }\n      \n      // 更新最终坐标\n      this.dragCoordinates = {\n        lat: pos.lat,\n        lng: pos.lng\n      }\n      \n      console.log('拖拽结束，最终坐标: ' + pos.lat.toFixed(6) + ',' + pos.lng.toFixed(6))\n      \n      swh.geoCodePosition(pos, that).then((p) => { \n        that.pickLocation = p\n        that.setPickLocationMode()\n        // 拖拽完成后清除拖拽状态\n        setTimeout(() => {\n          that.isDragging = false\n          that.dragCoordinates = null\n        }, 500) // 延迟清除，让用户能看到最终坐标\n      })\n      \n      this.$emit('resetLocation', pos.lat, pos.lng)\n    },\n    checkTileAvailability: function () {\n      const that = this\n      \n      // 在生产环境下优先使用静态瓦片\n      if (process.env.NODE_ENV === 'production') {\n        that.testStaticTiles().then(isAvailable => {\n          if (isAvailable) {\n            console.log('使用静态瓦片文件')\n            that.url = that.fallbackUrl\n          } else {\n            console.log('静态瓦片不可用，尝试tile服务器')\n            that.testTileServer()\n          }\n        })\n      } else {\n        // 开发环境下优先尝试tile服务器\n        that.testTileServer()\n      }\n    },\n    \n    testStaticTiles: function () {\n      const that = this\n      return new Promise((resolve) => {\n        // 测试多个缩放级别的瓦片是否存在\n        const testUrls = [\n          '/tiles/0/0/0.png',\n          '/tiles/1/0/0.png',\n          '/tiles/2/1/1.png'\n        ]\n        \n        let testCount = 0\n        let successCount = 0\n        \n        testUrls.forEach(url => {\n          fetch(url, { method: 'HEAD' })\n            .then(response => {\n              testCount++\n              if (response.ok) {\n                successCount++\n              }\n              \n              if (testCount === testUrls.length) {\n                // 如果至少一半的测试瓦片可用，认为静态瓦片可用\n                resolve(successCount >= testUrls.length / 2)\n              }\n            })\n            .catch(() => {\n              testCount++\n              if (testCount === testUrls.length) {\n                resolve(successCount >= testUrls.length / 2)\n              }\n            })\n        })\n        \n        // 超时处理\n        setTimeout(() => {\n          if (testCount < testUrls.length) {\n            resolve(false)\n          }\n        }, 2000)\n      })\n    },\n    \n    testTileServer: function () {\n      const that = this\n      \n      // 测试tile服务器是否可用\n      const testUrl = this.serverUrl.replace('{z}', '0').replace('{x}', '0').replace('{y}', '0')\n      \n      fetch(testUrl, { method: 'HEAD', timeout: 3000 })\n        .then(response => {\n          if (response.ok) {\n            console.log('tile服务器可用')\n            that.url = that.serverUrl\n          } else {\n            throw new Error('tile服务器响应错误')\n          }\n        })\n        .catch(error => {\n          console.log('tile服务器不可用，使用静态瓦片:', error)\n          that.url = that.fallbackUrl\n          \n          // 如果静态瓦片也不可用，最后尝试在线瓦片\n          that.testStaticTiles().then(isAvailable => {\n            if (!isAvailable && process.env.NODE_ENV === 'development') {\n              console.log('切换到在线瓦片服务')\n              that.url = that.onlineUrl\n            }\n          })\n        })\n    },\n    addOfflineSearchControl: function (map) {\n      const that = this\n      \n      // 创建离线搜索控件\n      const searchControl = L.Control.extend({\n        options: {\n          position: 'topleft'\n        },\n        onAdd: function(map) {\n          const container = L.DomUtil.create('div', 'leaflet-control-geocoder leaflet-bar')\n          container.innerHTML = `\n            <div class=\"leaflet-control-geocoder-form\">\n              <input type=\"text\" placeholder=\"输入坐标 (lat,lng)\" />\n              <button type=\"button\">搜索</button>\n            </div>\n          `\n          \n          const input = container.querySelector('input')\n          const button = container.querySelector('button')\n          \n          button.onclick = function() {\n            that.handleOfflineSearch(input.value)\n          }\n          \n          input.onkeypress = function(e) {\n            if (e.key === 'Enter') {\n              that.handleOfflineSearch(input.value)\n            }\n          }\n          \n          return container\n        }\n      })\n      \n      new searchControl().addTo(map)\n    },\n    handleOfflineSearch: function (query) {\n      // 解析坐标输入 (支持多种格式)\n      const coordPattern = /(-?\\d+\\.?\\d*)[,\\s]+(-?\\d+\\.?\\d*)/\n      const match = query.match(coordPattern)\n      \n      if (match) {\n        const lat = parseFloat(match[1])\n        const lng = parseFloat(match[2])\n        \n        if (lat >= -90 && lat <= 90 && lng >= -180 && lng <= 180) {\n          const pos = { lat: lat, lng: lng, accuracy: 0 }\n          this.mapCenter = [lat, lng]\n          \n          const loc = {\n            short_name: `${lat.toFixed(3)}, ${lng.toFixed(3)}`,\n            country: this.$t('Unknown'),\n            lng: lng,\n            lat: lat,\n            alt: 0,\n            accuracy: 0,\n            street_address: ''\n          }\n          \n          this.pickLocation = loc\n          this.setPickLocationMode()\n        } else {\n          alert('坐标范围错误：纬度(-90到90)，经度(-180到180)')\n        }\n      } else {\n        alert('请输入有效的坐标格式：纬度,经度 (例如: 40.1, 116.2)')\n      }\n    },\n    updateZoomLimits: function (map) {\n      const that = this\n      \n      // 设置基础缩放限制\n      map.setMinZoom(this.effectiveMinZoom)\n      map.setMaxZoom(this.effectiveMaxZoom)\n      \n      console.log(`地图缩放限制: ${this.effectiveMinZoom} - ${this.effectiveMaxZoom}`)\n      \n      // 检测当前环境的瓦片可用性并调整限制\n      if (process.env.NODE_ENV === 'production') {\n        // 生产环境：严格按照瓦片数据限制\n        this.detectAvailableTileLevels().then(levels => {\n          if (levels.min !== null && levels.max !== null) {\n            map.setMinZoom(levels.min)\n            map.setMaxZoom(levels.max)\n            console.log(`检测到可用瓦片级别: ${levels.min} - ${levels.max}`)\n          }\n        })\n      }\n    },\n    \n    detectAvailableTileLevels: function () {\n      const that = this\n      return new Promise((resolve) => {\n        const testLevels = MapConfig.detection.testLevels\n        let availableLevels = []\n        let testCount = 0\n        \n        testLevels.forEach(level => {\n          const testUrl = `/tiles/${level}/0/0.png`\n          \n          fetch(testUrl, { method: 'HEAD' })\n            .then(response => {\n              testCount++\n              if (response.ok) {\n                availableLevels.push(level)\n              }\n              \n              if (testCount === testLevels.length) {\n                availableLevels.sort((a, b) => a - b)\n                resolve({\n                  min: availableLevels.length > 0 ? availableLevels[0] : null,\n                  max: availableLevels.length > 0 ? availableLevels[availableLevels.length - 1] : null,\n                  available: availableLevels\n                })\n              }\n            })\n            .catch(() => {\n              testCount++\n              if (testCount === testLevels.length) {\n                availableLevels.sort((a, b) => a - b)\n                resolve({\n                  min: availableLevels.length > 0 ? availableLevels[0] : null,\n                  max: availableLevels.length > 0 ? availableLevels[availableLevels.length - 1] : null,\n                  available: availableLevels\n                })\n              }\n            })\n        })\n        \n        // 使用配置的超时时间\n        setTimeout(() => {\n          if (testCount < testLevels.length) {\n            resolve({ \n              min: MapConfig.zoom.offline.min, \n              max: MapConfig.zoom.offline.max, \n              available: [] \n            })\n          }\n        }, MapConfig.detection.timeout)\n      })\n    }\n  },\n  components: { LMap, LTileLayer, LMarker, LCircle, LTooltip, LControlZoom }\n}\n</script>\n\n<style>\n.leaflet-control-geocoder-form input {\n  caret-color:#000 !important;\n  color: #000 !important;\n}\n\n/* 拖拽坐标显示样式 */\n.drag-coordinates {\n  background-color: rgba(255, 152, 0, 0.1);\n  border-left: 3px solid #ff9800;\n  padding: 4px 8px;\n  border-radius: 4px;\n  margin-top: 4px;\n  animation: pulse 1.5s ease-in-out infinite alternate;\n}\n\n@keyframes pulse {\n  from {\n    background-color: rgba(255, 152, 0, 0.1);\n  }\n  to {\n    background-color: rgba(255, 152, 0, 0.2);\n  }\n}\n\n/* Tooltip样式增强 */\n.leaflet-tooltip {\n  font-size: 12px !important;\n  font-weight: 500 !important;\n}\n\n.leaflet-tooltip strong {\n  color: #ff9800 !important;\n}\n\n.leaflet-tooltip small {\n  font-style: italic;\n}\n\n/* 拖拽中的标记动画 */\n.leaflet-marker-dragging {\n  transition: none !important;\n}\n\n/* 拖拽提示文字样式 */\n.drag-hint {\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  font-weight: 500;\n}\n</style>\n"]}]}