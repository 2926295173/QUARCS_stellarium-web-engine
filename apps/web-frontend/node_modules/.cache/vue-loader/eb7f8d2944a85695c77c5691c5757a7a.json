{"remainingRequest":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/src/components/AutomaticPolarAlignmentCalibration.vue?vue&type=style&index=0&id=f8b04c62&scoped=true&lang=css&","dependencies":[{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/src/components/AutomaticPolarAlignmentCalibration.vue","mtime":1752474738251},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/css-loader/dist/cjs.js","mtime":1707125446000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1707125450000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/postcss-loader/src/index.js","mtime":1707125450000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1707125360000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/vue-loader/lib/index.js","mtime":1707125450000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["AutomaticPolarAlignmentCalibration.vue"],"names":[],"mappingsglfile":"AutomaticPolarAlignmentCalibration.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"mount-status-display\" v-show=\"internalVisible\">\n              <!-- 日志显示区域，可缩放 -->\n      <div class=\"log-section\" :class=\"{ 'expanded': isLogExpanded }\">\n        <div class=\"log-header\" @click=\"toggleLogExpansion\">\n          <span class=\"log-title\">{{ $t('Current Log Info') }} ({{ logs.length }})</span>\n                <div class=\"header-controls\">\n          <v-icon class=\"expand-icon\" :class=\"{ 'rotated': isLogExpanded }\">\n            mdi-chevron-up\n          </v-icon>\n                    <v-icon class=\"close-icon\" @click.stop=\"closeComponent\">\n                        mdi-close\n                    </v-icon>\n                </div>\n        </div>\n        <div class=\"log-content\" ref=\"logContent\">\n          <div class=\"log-item\" v-for=\"(log, index) in logs\" :key=\"index\" :class=\"log.level\">\n            <span class=\"log-time\">{{ formatTime(log.timestamp) }}</span>\n            <span class=\"log-message\">{{ log.message }}</span>\n          </div>\n        </div>\n      </div>\n\n        <!-- 下方左右图像区域 -->\n        <div class=\"image-section\">\n            <!-- 左侧：赤道仪调整指示区域 -->\n            <div class=\"mount-image-container\">\n                <div class=\"mount-image-title\">{{ $t('Mount Status & Calibration') }}</div>\n                <div class=\"mount-image-content\">\n                    <!-- 赤道仪调整背景 -->\n                    <div class=\"mount-background\">\n                        <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 200 200\">\n                            <!-- 赤道仪基座 (三脚架) -->\n                            <g stroke=\"#555\" stroke-width=\"2\" fill=\"none\">\n                                <!-- 三脚架腿 -->\n                                <line x1=\"100\" y1=\"160\" x2=\"70\" y2=\"190\" />\n                                <line x1=\"100\" y1=\"160\" x2=\"130\" y2=\"190\" />\n                                <line x1=\"100\" y1=\"160\" x2=\"100\" y2=\"190\" />\n                                <!-- 基座平台 -->\n                                <rect x=\"85\" y=\"150\" width=\"30\" height=\"15\" fill=\"#2a2a2a\" stroke=\"#555\" stroke-width=\"2\" />\n                            </g>\n                            \n                            <!-- 极轴主体 -->\n                            <g>\n                                <!-- 极轴柱 -->\n                                <rect x=\"95\" y=\"120\" width=\"10\" height=\"30\" fill=\"#3a3a3a\" stroke=\"#555\" stroke-width=\"2\" />\n                                <!-- 极轴调整旋钮 -->\n                                <circle cx=\"85\" cy=\"135\" r=\"5\" fill=\"#666\" stroke=\"#777\" stroke-width=\"1\" />\n                                <circle cx=\"115\" cy=\"135\" r=\"5\" fill=\"#666\" stroke=\"#777\" stroke-width=\"1\" />\n                            </g>\n                            \n                            <!-- 赤经轴 -->\n                            <g>\n                                <!-- 赤经轴主体 -->\n                                <rect x=\"70\" y=\"115\" width=\"60\" height=\"10\" fill=\"#3a3a3a\" stroke=\"#555\" stroke-width=\"2\" />\n                                <!-- 配重 -->\n                                <rect x=\"140\" y=\"110\" width=\"15\" height=\"20\" fill=\"#4a4a4a\" stroke=\"#666\" stroke-width=\"1\" />\n                                <text x=\"147\" y=\"123\" text-anchor=\"middle\" fill=\"#aaa\" font-size=\"8\">W</text>\n                            </g>\n                            \n                            <!-- 赤纬轴 -->\n                            <g>\n                                <!-- 赤纬轴主体 -->\n                                <rect x=\"95\" y=\"80\" width=\"10\" height=\"35\" fill=\"#3a3a3a\" stroke=\"#555\" stroke-width=\"2\" />\n                            </g>\n                            \n                            <!-- 望远镜镜筒 -->\n                            <g>\n                                <!-- 主镜筒 -->\n                                <rect x=\"60\" y=\"70\" width=\"80\" height=\"12\" fill=\"#4a4a4a\" stroke=\"#666\" stroke-width=\"2\" rx=\"6\" />\n                                <!-- 物镜 -->\n                                <circle cx=\"60\" cy=\"76\" r=\"6\" fill=\"#1a1a1a\" stroke=\"#333\" stroke-width=\"1\" />\n                                <!-- 目镜端 -->\n                                <circle cx=\"140\" cy=\"76\" r=\"4\" fill=\"#333\" stroke=\"#555\" stroke-width=\"1\" />\n                            </g>\n                            \n                            <!-- 相机 -->\n                            <g>\n                                <!-- 相机主体 -->\n                                <rect x=\"130\" y=\"60\" width=\"25\" height=\"15\" fill=\"#2a2a2a\" stroke=\"#444\" stroke-width=\"2\" />\n                                <!-- 相机镜头 -->\n                                <circle cx=\"142\" cy=\"67\" r=\"6\" fill=\"#1a1a1a\" stroke=\"#333\" stroke-width=\"1\" />\n                                <!-- 相机标识 -->\n                                <text x=\"142\" y=\"55\" text-anchor=\"middle\" fill=\"#aaa\" font-size=\"8\">{{ $t('Camera') }}</text>\n                            </g>\n                            \n                            <!-- 极轴指向标识 -->\n                            <g>\n                                <circle cx=\"100\" cy=\"50\" r=\"3\" fill=\"#00ff00\" />\n                                <text x=\"100\" y=\"40\" text-anchor=\"middle\" fill=\"#00ff00\" font-size=\"10\">{{ $t('Polaris') }}</text>\n                                <!-- 极轴指向线 -->\n                                <line x1=\"100\" y1=\"50\" x2=\"100\" y2=\"115\" stroke=\"#00ff00\" stroke-width=\"2\" stroke-dasharray=\"3,3\" />\n                            </g>\n                            \n                            <!-- 当前指向（增强可视性） -->\n                            <g class=\"current-pointing\">\n                                <!-- 指向线条背景 -->\n                                <line :x1=\"100\" :y1=\"80\" :x2=\"100 + currentPointingX\" :y2=\"80 + currentPointingY\" \n                                      stroke=\"#000000\" stroke-width=\"5\" opacity=\"0.3\" />\n                                <!-- 主指向线条 -->\n                                <line :x1=\"100\" :y1=\"80\" :x2=\"100 + currentPointingX\" :y2=\"80 + currentPointingY\" \n                                      stroke=\"#ff0000\" stroke-width=\"3\" marker-end=\"url(#redArrow)\" \n                                      stroke-dasharray=\"0\" class=\"pointing-line\" />\n                                <!-- 当前位置文字 -->\n                                <text :x=\"100 + currentPointingX * 1.3\" :y=\"80 + currentPointingY * 1.3 - 5\" \n                                      text-anchor=\"middle\" fill=\"#ff0000\" font-size=\"10\" font-weight=\"bold\"\n                                      class=\"pointing-text\">\n                                    {{ $t('Current') }}\n                                </text>\n                            </g>\n                            \n                            <!-- 调整方向箭头（增强版） -->\n                            <g v-if=\"showAdjustmentArrow\" class=\"adjustment-arrows\">\n                                <!-- 水平调整箭头 (方位角调整) -->\n                                <g v-if=\"Math.abs(adjustmentDirection.azimuth) > 0.5\">\n                                    <!-- 箭头背景 -->\n                                    <path :d=\"getEnhancedAzimuthArrowPath()\" fill=\"#000000\" opacity=\"0.3\" />\n                                    <!-- 主箭头 -->\n                                    <path :d=\"getEnhancedAzimuthArrowPath()\" fill=\"#ffaa00\" stroke=\"#ff8800\" stroke-width=\"2\" \n                                          class=\"adjustment-arrow-pulse\" />\n                                    <!-- 方向文字背景 -->\n                                    <rect :x=\"100 + (adjustmentDirection.azimuth > 0 ? 50 : -70)\" y=\"25\" \n                                          width=\"40\" height=\"16\" fill=\"#000000\" opacity=\"0.7\" rx=\"3\" />\n                                    <!-- 方向文字 -->\n                                    <text :x=\"100 + (adjustmentDirection.azimuth > 0 ? 70 : -50)\" y=\"36\" \n                                          text-anchor=\"middle\" fill=\"#ffaa00\" font-size=\"11\" font-weight=\"bold\">\n                                        {{ adjustmentDirection.azimuth > 0 ? $t('Turn Right') : $t('Turn Left') }}\n                                    </text>\n                                    <!-- 角度显示 -->\n                                    <text :x=\"100 + (adjustmentDirection.azimuth > 0 ? 70 : -50)\" y=\"48\" \n                                          text-anchor=\"middle\" fill=\"#ffaa00\" font-size=\"9\">\n                                        {{ Math.abs(adjustmentDirection.azimuth).toFixed(1) }}°\n                                    </text>\n                                </g>\n                                \n                                <!-- 垂直调整箭头 (高度角调整) -->\n                                <g v-if=\"Math.abs(adjustmentDirection.altitude) > 0.5\">\n                                    <!-- 箭头背景 -->\n                                    <path :d=\"getEnhancedAltitudeArrowPath()\" fill=\"#000000\" opacity=\"0.3\" />\n                                    <!-- 主箭头 -->\n                                    <path :d=\"getEnhancedAltitudeArrowPath()\" fill=\"#00ccff\" stroke=\"#0088cc\" stroke-width=\"2\" \n                                          class=\"adjustment-arrow-pulse\" />\n                                    <!-- 方向文字背景 -->\n                                    <rect x=\"20\" :y=\"100 + (adjustmentDirection.altitude > 0 ? -15 : 5)\" \n                                          width=\"45\" height=\"16\" fill=\"#000000\" opacity=\"0.7\" rx=\"3\" />\n                                    <!-- 方向文字 -->\n                                    <text x=\"42\" :y=\"100 + (adjustmentDirection.altitude > 0 ? -6 : 16)\" \n                                          text-anchor=\"middle\" fill=\"#00ccff\" font-size=\"11\" font-weight=\"bold\">\n                                        {{ adjustmentDirection.altitude > 0 ? $t('Raise Up') : $t('Lower Down') }}\n                                    </text>\n                                    <!-- 角度显示 -->\n                                    <text x=\"42\" :y=\"100 + (adjustmentDirection.altitude > 0 ? 6 : 28)\" \n                                          text-anchor=\"middle\" fill=\"#00ccff\" font-size=\"9\">\n                                        {{ Math.abs(adjustmentDirection.altitude).toFixed(1) }}°\n                                    </text>\n                                </g>\n                            </g>\n                            \n                            <!-- 箭头标记定义 -->\n                            <defs>\n                                <marker id=\"redArrow\" markerWidth=\"10\" markerHeight=\"10\" refX=\"9\" refY=\"5\" orient=\"auto\">\n                                    <polygon points=\"0 2, 8 5, 0 8, 2 5\" fill=\"#ff0000\" stroke=\"#000000\" stroke-width=\"0.5\" />\n                                </marker>\n                            </defs>\n                        </svg>\n                    </div>\n                </div>\n\n                <!-- 整合的信息面板 -->\n                <div class=\"integrated-info-panel\">\n                    <!-- 当前位置信息 -->\n                    <div class=\"info-section\">\n                        <div class=\"section-title\">{{ $t('Position Info') }}</div>\n                        <div class=\"info-grid\">\n                            <div class=\"info-item\">\n                                <span class=\"info-label\">{{ $t('Current') }}:</span>\n                                <span class=\"info-value\">{{ currentRA }} / {{ currentDEC }}</span>\n                            </div>\n                            <div class=\"info-item\">\n                                <span class=\"info-label\">{{ $t('Target') }}:</span>\n                                <span class=\"info-value\">{{ targetRA }} / {{ targetDEC }}</span>\n                            </div>\n                            <div class=\"info-item\">\n                                <span class=\"info-label\">{{ $t('Distance') }}:</span>\n                                <span class=\"info-value\">{{ calculateDistance() }}° ({{ polarDistance.toFixed(1) }}\")</span>\n                            </div>\n                        </div>\n                    </div>\n\n                    <!-- 调整信息 -->\n                    <div class=\"info-section\" v-if=\"showAdjustmentArrow\">\n                        <div class=\"section-title\">{{ $t('Adjustment Required') }}</div>\n                        <div class=\"info-grid\">\n                            <div class=\"info-item\">\n                                <span class=\"info-label\">{{ $t('Azimuth') }}:</span>\n                                <span class=\"info-value\" :class=\"{ 'adjustment-needed': Math.abs(adjustmentDirection.azimuth) > 1 }\">\n                                    {{ adjustmentDirection.azimuth > 0 ? '+' : '' }}{{ adjustmentDirection.azimuth.toFixed(1) }}°\n                                </span>\n                            </div>\n                            <div class=\"info-item\">\n                                <span class=\"info-label\">{{ $t('Altitude') }}:</span>\n                                <span class=\"info-value\" :class=\"{ 'adjustment-needed': Math.abs(adjustmentDirection.altitude) > 1 }\">\n                                    {{ adjustmentDirection.altitude > 0 ? '+' : '' }}{{ adjustmentDirection.altitude.toFixed(1) }}°\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n\n                    <!-- 校准进度 -->\n                    <div class=\"info-section\">\n                        <div class=\"section-title\">\n                            {{ $t('Calibration Progress') }}\n                            <button class=\"mini-reset-btn\" @click=\"resetCalibration\" :disabled=\"calibrationPoints.length === 0\">\n                                {{ $t('Reset') }}\n                            </button>\n                        </div>\n                        <div class=\"progress-compact\">\n                            <div class=\"progress-step\" v-for=\"(point, index) in 3\" :key=\"index\"\n                                :class=\"{ 'completed': index < calibrationPoints.length, 'current': index === currentCalibrationStep }\">\n                                <span class=\"step-number\">{{ index + 1 }}</span>\n                                <span class=\"step-coords\" v-if=\"calibrationPoints[index]\">\n                                    {{ formatRA(calibrationPoints[index].ra).slice(0, 5) }}/{{ formatDEC(calibrationPoints[index].dec).slice(0, 6) }}\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n\n                    <!-- 偏转结果 -->\n                    <div class=\"info-section\" v-if=\"isCalibrationComplete\">\n                        <div class=\"section-title\">{{ $t('Polar Axis Offset') }}</div>\n                        <div class=\"offset-compact\">\n                            <div class=\"offset-row\">\n                                <span class=\"offset-label\">Az:</span>\n                                <span class=\"offset-value\" :class=\"{ 'high-offset': Math.abs(polarAxisOffset.azimuth) > 5 }\">\n                                    {{ polarAxisOffset.azimuth.toFixed(1) }}°\n                                </span>\n                                <span class=\"offset-label\">Alt:</span>\n                                <span class=\"offset-value\" :class=\"{ 'high-offset': Math.abs(polarAxisOffset.altitude) > 5 }\">\n                                    {{ polarAxisOffset.altitude.toFixed(1) }}°\n                                </span>\n                            </div>\n                            <div class=\"offset-status\">\n                                <span v-if=\"Math.abs(polarAxisOffset.azimuth) > 5 || Math.abs(polarAxisOffset.altitude) > 5\"\n                                      class=\"status-warning\">⚠ {{ $t('Adjustment needed') }}</span>\n                                <span v-else class=\"status-success\">✓ {{ $t('Alignment OK') }}</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <!-- 右侧：极轴校准视场显示区域 -->\n            <div class=\"camera-field-container\">\n                <div class=\"camera-field-title\">{{ $t('Polar Alignment View') }}</div>\n                <div class=\"camera-field-content\">\n                    <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 300 300\" ref=\"polarField\">\n                        <!-- 背景 -->\n                        <rect width=\"100%\" height=\"100%\" fill=\"#1a1a1a\" />\n                        \n                        <!-- 极轴点（中心固定点） -->\n                        <circle cx=\"150\" cy=\"150\" r=\"5\" fill=\"#00ff00\" stroke=\"#00cc00\" stroke-width=\"2\" />\n                        <circle cx=\"150\" cy=\"150\" r=\"15\" fill=\"none\" stroke=\"#00ff00\" stroke-width=\"1\" stroke-dasharray=\"3,3\" />\n                        <text x=\"150\" y=\"135\" text-anchor=\"middle\" fill=\"#00ff00\" font-size=\"12\">\n                            {{ $t('Polar Axis') }}\n                        </text>\n                        \n                        <!-- 相机视场框（动态位置） -->\n                        <g :transform=\"`translate(${cameraFieldOffset.x}, ${cameraFieldOffset.y})`\">\n                            <!-- 视场外框 -->\n                            <rect x=\"-40\" y=\"-30\" width=\"80\" height=\"60\" fill=\"none\" stroke=\"#4a90e2\" stroke-width=\"2\" />\n                            <!-- 视场十字线 -->\n                            <line x1=\"-40\" y1=\"0\" x2=\"40\" y2=\"0\" stroke=\"#4a90e2\" stroke-width=\"1\" stroke-dasharray=\"2,2\" />\n                            <line x1=\"0\" y1=\"-30\" x2=\"0\" y2=\"30\" stroke=\"#4a90e2\" stroke-width=\"1\" stroke-dasharray=\"2,2\" />\n                            <!-- 视场中心点 -->\n                            <circle cx=\"0\" cy=\"0\" r=\"2\" fill=\"#4a90e2\" />\n                        </g>\n                        \n                        <!-- 视场角标识（四个顶点的坐标） -->\n                        <g v-if=\"fieldCorners.length === 4\">\n                            <circle v-for=\"(corner, index) in fieldCorners\" :key=\"index\"\n                                    :cx=\"corner.x\" :cy=\"corner.y\" r=\"1.5\" fill=\"#ffcc00\" />\n                        </g>\n                        \n                        <!-- 校准成功指示 -->\n                        <g v-if=\"isPolarAligned\">\n                            <circle cx=\"150\" cy=\"150\" r=\"25\" fill=\"none\" stroke=\"#00ff00\" stroke-width=\"3\" />\n                            <text x=\"150\" y=\"200\" text-anchor=\"middle\" fill=\"#00ff00\" font-size=\"14\" font-weight=\"bold\">\n                                {{ $t('Polar Aligned!') }}\n                            </text>\n                        </g>\n                        \n                        <!-- 距离指示 -->\n                        <text x=\"150\" y=\"280\" text-anchor=\"middle\" fill=\"#ffffff\" font-size=\"12\">\n                            {{ $t('Distance') }}: {{ polarDistance.toFixed(1) }}\"\n                        </text>\n                        \n                        <!-- 状态指示 -->\n                        <text x=\"150\" y=\"25\" text-anchor=\"middle\" fill=\"#ffffff\" font-size=\"11\" opacity=\"0.8\">\n                            {{ $t('Field of View') }} ({{ calibrationPoints.length }}/3)\n                        </text>\n                    </svg>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'MountStatusDisplay',\n    props: {\n        // 控制组件显示/隐藏\n        visible: {\n            type: Boolean,\n            default: false\n        },\n        // 是否全屏模式\n        fullscreen: {\n            type: Boolean,\n            default: false\n        },\n        // 自动开始校准\n        autoStart: {\n            type: Boolean,\n            default: false\n        },\n        // 外部传入的校准点数据\n        externalPoints: {\n            type: Array,\n            default: () => []\n        }\n    },\n    data() {\n        return {\n            isLogExpanded: false,\n            showArrow: false,\n            internalVisible: false,  // 内部控制的显示状态\n\n            // 日志数据（初始化后在mounted中添加本地化消息）\n            logs: [],\n\n            // 极轴校准相关数据\n            calibrationPoints: [],  // 存储三个校准点\n            currentCalibrationStep: 0,  // 当前校准步骤 (0-2)\n            polarAxisOffset: {  // 极轴偏转量\n                azimuth: 0,      // 方位角偏转（度）\n                altitude: 0      // 高度角偏转（度）\n            },\n            isCalibrationComplete: false,  // 校准是否完成\n\n            // 当前位置（从服务器接收）\n            currentRA: '12h 34m 56s',\n            currentDEC: '+45° 12\\' 34\"',\n\n            // 目标位置（固定）\n            targetRA: '12h 30m 00s',\n            targetDEC: '+45° 00\\' 00\"',\n\n            // 移动方向\n            moveDirection: { x: 0, y: 0 },\n\n            // 视场设置\n            fieldOfView: {\n                x: 100,\n                y: 100,\n                width: 100,\n                height: 80\n            },\n\n                    // 位置计算 (原有的，保留兼容性)\n        targetPosition: { x: 150, y: 150 },\n        currentPosition: { x: 120, y: 180 },\n        \n        // 新的极轴校准相关数据\n        cameraFieldOffset: { x: 150, y: 150 },  // 相机视场中心位置\n        fieldCorners: [],  // 视场四个角的坐标\n        polarDistance: 0,  // 到极轴的距离（角秒）\n        isPolarAligned: false,  // 是否已对准极轴\n        \n        // 赤道仪调整相关\n        currentPointingX: 0,  // 当前指向X偏移\n        currentPointingY: -40,  // 当前指向Y偏移\n        adjustmentDirection: {  // 需要调整的方向和角度\n            azimuth: 0,  // 方位角调整（度，正值向东）\n            altitude: 0  // 高度角调整（度，正值向上）\n        },\n        showAdjustmentArrow: false,  // 是否显示调整箭头\n        }\n    },\n\n    computed: {\n        arrowStyle() {\n            if (!this.showArrow) return { display: 'none' };\n\n            const angle = Math.atan2(this.moveDirection.y, this.moveDirection.x) * 180 / Math.PI;\n            const centerX = 100;\n            const centerY = 100;\n            const radius = 90;\n\n            const x = centerX + Math.cos(angle * Math.PI / 180) * radius;\n            const y = centerY + Math.sin(angle * Math.PI / 180) * radius;\n\n            return {\n                position: 'absolute',\n                left: `${x - 20}px`,\n                top: `${y - 20}px`,\n                transform: `rotate(${angle}deg)`,\n                animation: 'arrowPulse 1s ease-in-out infinite'\n            };\n        }\n    },\n\n    watch: {\n        // 监听外部传入的校准点\n        externalPoints: {\n            handler(newPoints) {\n                if (newPoints && newPoints.length > 0) {\n                    this.resetCalibration();\n                    newPoints.forEach(point => {\n                        if (point.ra !== undefined && point.dec !== undefined) {\n                            this.addCalibrationPoint(point.ra, point.dec);\n                        }\n                    });\n                }\n            },\n            deep: true,\n            immediate: true\n        },\n\n        // 监听外部visible属性变化\n        visible(newVal) {\n            this.internalVisible = newVal;\n            if (newVal && this.autoStart) {\n                this.startAutoCalibration();\n            }\n        }\n    },\n\n        mounted() {\n      // 初始化内部显示状态\n      this.internalVisible = this.visible;\n      console.log(\"自动极轴校准组件加载完成！\", this);\n      \n      // 初始化本地化日志消息\n      this.logs = [\n        { timestamp: Date.now(), message: this.$t('System startup completed'), level: 'info' },\n        { timestamp: Date.now() - 5000, message: this.$t('Connecting to mount...'), level: 'warning' },\n        { timestamp: Date.now() - 10000, message: this.$t('Mount connected successfully'), level: 'success' },\n        { timestamp: Date.now() - 15000, message: this.$t('Calibration started'), level: 'info' },\n      ];\n      \n      // 检查事件总线是否存在\n      if (!this.$bus) {\n        console.error(\"事件总线 $bus 未找到！\");\n        return;\n      }\n      console.log(\"事件总线已就绪\", this.$bus);\n      \n      // 监听事件总线上的各种事件\n      this.$bus.$on('updateCurrentPosition', this.updatePosition);\n      this.$bus.$on('addCalibrationPoint', this.handleAddCalibrationPoint);\n      this.$bus.$on('resetCalibration', this.resetCalibration);\n      this.$bus.$on('showPolarAlignment', this.show);\n      this.$bus.$on('hidePolarAlignment', this.hide);\n      this.$bus.$on('togglePolarAlignment', this.toggle);\n      this.$bus.$on('updateMountPosition', this.updateMountPosition);\n      this.$bus.$on('updateTargetPosition', this.updateTargetPosition);\n      console.log(\"事件总线监听器已注册\");\n      \n      this.initializeWebSocket();\n      this.startLogUpdater();\n      \n      // 初始化触摸支持\n      this.$nextTick(() => {\n        this.addTouchSupport();\n      });\n      \n      // 初始化极轴校准显示\n      this.updatePolarAlignmentDisplay(12.5, 45.0);\n      \n      // 添加演示数据（用于测试）\n      setTimeout(() => {\n        if (this.autoStart) {\n          this.addTestCalibrationPoints();\n        }\n      }, 3000);\n      console.log(\"自动极轴校准初始化完成！\");\n    },\n\n    methods: {\n        // 切换日志展开/收缩\n        toggleLogExpansion() {\n            this.isLogExpanded = !this.isLogExpanded;\n            this.$nextTick(() => {\n                if (this.isLogExpanded) {\n                    this.$refs.logContent.scrollTop = this.$refs.logContent.scrollHeight;\n                }\n            });\n        },\n\n        // 格式化时间\n        formatTime(timestamp) {\n            const date = new Date(timestamp);\n            return date.toLocaleTimeString('zh-CN', {\n                hour12: false,\n                hour: '2-digit',\n                minute: '2-digit',\n                second: '2-digit'\n            });\n        },\n\n        // 添加日志\n        addLog(message, level = 'info') {\n            this.logs.unshift({\n                timestamp: Date.now(),\n                message: message,\n                level: level\n            });\n\n            // 限制日志数量\n            if (this.logs.length > 100) {\n                this.logs = this.logs.slice(0, 100);\n            }\n\n            // 自动滚动到最新日志\n            this.$nextTick(() => {\n                if (this.$refs.logContent) {\n                    this.$refs.logContent.scrollTop = 0;\n                }\n            });\n        },\n\n                // 初始化WebSocket连接\n        initializeWebSocket() {\n          console.log(\"初始化WebSocket连接\");\n          // 这里应该连接到您的WebSocket服务器\n          // 示例代码：\n          /*\n          this.ws = new WebSocket('ws://your-server:port');\n          this.ws.onmessage = (event) => {\n            const data = JSON.parse(event.data);\n            if (data.type === 'position') {\n              this.updatePosition(data.ra, data.dec);\n            } else if (data.type === 'log') {\n              this.addLog(data.message, data.level);\n            }\n          };\n          */\n          \n          // 模拟数据更新\n          setInterval(() => {\n            this.simulatePositionUpdate();\n          }, 2000);\n        },\n\n        // 模拟位置更新\n        simulatePositionUpdate() {\n            // 模拟接近极轴的位置变化，增加变化幅度以显示方向指示\n            const baseRA = 0.3;  // 接近0h\n            const baseDEC = 89;   // 接近90°\n            \n            const randomRA = baseRA + (Math.random() - 0.5) * 2.5;\n            const randomDEC = baseDEC + (Math.random() - 0.5) * 4;\n\n            this.updatePosition(randomRA, randomDEC);\n            this.updatePolarAlignmentDisplay(randomRA, randomDEC);\n            this.addLog(this.$t('Position updated: RA {0}h, DEC {1}°', [randomRA.toFixed(2), randomDEC.toFixed(2)]), 'info');\n        },\n\n        // 更新位置\n        updatePosition(ra, dec) {\n            this.currentRA = this.formatRA(ra);\n            this.currentDEC = this.formatDEC(dec);\n\n            // 更新视场中的当前位置\n            this.currentPosition = this.convertToScreenCoordinates(ra, dec);\n\n            // 更新移动方向\n            this.updateMoveDirection();\n        },\n\n        // 格式化RA坐标\n        formatRA(ra) {\n            const hours = Math.floor(ra);\n            const minutes = Math.floor((ra - hours) * 60);\n            const seconds = Math.floor(((ra - hours) * 60 - minutes) * 60);\n            return `${hours}h ${minutes}m ${seconds}s`;\n        },\n\n        // 格式化DEC坐标\n        formatDEC(dec) {\n            const sign = dec >= 0 ? '+' : '-';\n            const absDec = Math.abs(dec);\n            const degrees = Math.floor(absDec);\n            const minutes = Math.floor((absDec - degrees) * 60);\n            const seconds = Math.floor(((absDec - degrees) * 60 - minutes) * 60);\n            return `${sign}${degrees}° ${minutes}' ${seconds}\"`;\n        },\n\n        // 转换为屏幕坐标\n        convertToScreenCoordinates(ra, dec) {\n            // 这里需要根据您的实际坐标系统进行转换\n            // 这只是一个示例实现\n            const x = 150 + (ra - 12) * 10;\n            const y = 150 - dec * 2;\n            return { x, y };\n        },\n\n        // 更新移动方向\n        updateMoveDirection() {\n            const dx = this.targetPosition.x - this.currentPosition.x;\n            const dy = this.targetPosition.y - this.currentPosition.y;\n\n            if (Math.abs(dx) > 5 || Math.abs(dy) > 5) {\n                this.moveDirection = { x: dx, y: dy };\n                this.showArrow = true;\n            } else {\n                this.showArrow = false;\n            }\n        },\n\n        // 计算距离\n        calculateDistance() {\n            const dx = this.targetPosition.x - this.currentPosition.x;\n            const dy = this.targetPosition.y - this.currentPosition.y;\n            const distance = Math.sqrt(dx * dx + dy * dy);\n            return (distance * 0.1).toFixed(2); // 转换为角度单位\n        },\n\n        // 启动日志更新器\n        startLogUpdater() {\n            // 模拟定期日志更新\n            setInterval(() => {\n                if (Math.random() < 0.3) {\n                    const messages = [\n                        this.$t('Adjusting mount position...'),\n                        this.$t('Focusing image...'),\n                        this.$t('Celestial tracking normal'),\n                        this.$t('Slight vibration detected'),\n                        this.$t('Position calibration completed')\n                    ];\n                    const levels = ['info', 'warning', 'success'];\n                    const randomMessage = messages[Math.floor(Math.random() * messages.length)];\n                    const randomLevel = levels[Math.floor(Math.random() * levels.length)];\n                    this.addLog(randomMessage, randomLevel);\n                }\n            }, 3000);\n        },\n\n        // 添加校准点\n        addCalibrationPoint(ra, dec) {\n            if (this.calibrationPoints.length < 3) {\n                const point = {\n                    ra: ra,  // 赤经（小时）\n                    dec: dec,  // 赤纬（度）\n                    timestamp: Date.now()\n                };\n\n                this.calibrationPoints.push(point);\n                this.currentCalibrationStep = this.calibrationPoints.length - 1;\n\n                this.addLog(this.$t('Added calibration point {0}: RA={1}, DEC={2}', [this.calibrationPoints.length, this.formatRA(ra), this.formatDEC(dec)]), 'info');\n\n                // 通过事件总线发送校准点添加事件\n                this.$bus.$emit('calibrationPointAdded', {\n                    point: point,\n                    stepIndex: this.calibrationPoints.length - 1,\n                    totalSteps: 3\n                });\n\n                // 如果收集到三个点，开始计算偏转\n                if (this.calibrationPoints.length === 3) {\n                    this.calculatePolarAxisOffset();\n                }\n            }\n        },\n\n        // 计算极轴偏转量\n        calculatePolarAxisOffset() {\n            if (this.calibrationPoints.length !== 3) {\n                this.addLog(this.$t('Three calibration points required for offset calculation'), 'warning');\n                return;\n            }\n\n            this.addLog(this.$t('Starting polar axis offset calculation...'), 'info');\n\n            try {\n                // 将三个赤经赤纬坐标转换为笛卡尔坐标\n                const cartesianPoints = this.calibrationPoints.map(point =>\n                    this.sphericalToCartesian(point.ra, point.dec)\n                );\n\n                // 计算三点定圆\n                const circleCenter = this.calculateCircleCenter(cartesianPoints);\n\n                // 计算极轴偏转角度\n                const offset = this.calculateOffsetFromCircleCenter(circleCenter);\n\n                this.polarAxisOffset = offset;\n                this.isCalibrationComplete = true;\n\n                this.addLog(this.$t('Polar axis offset calculation completed: Azimuth={0}°, Altitude={1}°', [offset.azimuth.toFixed(2), offset.altitude.toFixed(2)]), 'success');\n\n                // 发送偏转结果到父组件\n                this.$emit('polar-axis-offset-calculated', offset);\n\n                // 通过事件总线发送校准完成事件\n                this.$bus.$emit('polarAlignmentComplete', {\n                    offset: offset,\n                    points: this.calibrationPoints,\n                    timestamp: Date.now()\n                });\n\n            } catch (error) {\n                this.addLog(this.$t('Error occurred during offset calculation: {0}', [error.message]), 'error');\n            }\n        },\n\n        // 球面坐标转笛卡尔坐标\n        sphericalToCartesian(ra, dec) {\n            const raRad = ra * Math.PI / 12;  // 赤经转弧度 (小时到弧度)\n            const decRad = dec * Math.PI / 180;  // 赤纬转弧度\n\n            return {\n                x: Math.cos(decRad) * Math.cos(raRad),\n                y: Math.cos(decRad) * Math.sin(raRad),\n                z: Math.sin(decRad)\n            };\n        },\n\n        // 计算三点定圆的圆心\n        calculateCircleCenter(points) {\n            const [p1, p2, p3] = points;\n\n            // 计算两个向量\n            const v1 = {\n                x: p2.x - p1.x,\n                y: p2.y - p1.y,\n                z: p2.z - p1.z\n            };\n\n            const v2 = {\n                x: p3.x - p1.x,\n                y: p3.y - p1.y,\n                z: p3.z - p1.z\n            };\n\n            // 计算法向量（叉积）\n            const normal = {\n                x: v1.y * v2.z - v1.z * v2.y,\n                y: v1.z * v2.x - v1.x * v2.z,\n                z: v1.x * v2.y - v1.y * v2.x\n            };\n\n            // 归一化法向量\n            const normalMag = Math.sqrt(normal.x * normal.x + normal.y * normal.y + normal.z * normal.z);\n            if (normalMag === 0) {\n                throw new Error(this.$t('Three points are collinear, cannot calculate circle center'));\n            }\n\n            return {\n                x: normal.x / normalMag,\n                y: normal.y / normalMag,\n                z: normal.z / normalMag\n            };\n        },\n\n        // 根据圆心计算偏转角度\n        calculateOffsetFromCircleCenter(center) {\n            // 理论上，如果极轴对准正确，圆心应该指向天球北极 (0, 0, 1)\n            // 偏转角度就是实际圆心与理论位置的差异\n\n            // 计算方位角偏转（绕z轴）\n            const azimuth = Math.atan2(center.y, center.x) * 180 / Math.PI;\n\n            // 计算高度角偏转\n            const altitude = Math.asin(center.z) * 180 / Math.PI - 90;  // 相对于地平面的偏转\n\n            return {\n                azimuth: azimuth,\n                altitude: altitude\n            };\n        },\n\n        // 重置校准数据\n        resetCalibration() {\n            this.calibrationPoints = [];\n            this.currentCalibrationStep = 0;\n            this.polarAxisOffset = { azimuth: 0, altitude: 0 };\n            this.isCalibrationComplete = false;\n            this.addLog(this.$t('Calibration data has been reset'), 'info');\n\n            // 通过事件总线发送重置事件\n            this.$bus.$emit('calibrationReset', {\n                timestamp: Date.now()\n            });\n        },\n\n        // 获取当前校准状态\n        getCalibrationStatus() {\n            return {\n                step: this.currentCalibrationStep,\n                totalSteps: 3,\n                points: this.calibrationPoints,\n                offset: this.polarAxisOffset,\n                isComplete: this.isCalibrationComplete\n            };\n        },\n\n        // 添加测试校准点（用于演示）\n        addTestCalibrationPoints() {\n            // 模拟三个校准点，间隔一定时间添加\n            const testPoints = [\n                { ra: 12.5, dec: 45.0 },  // 第一个点\n                { ra: 13.2, dec: 46.5 },  // 第二个点\n                { ra: 11.8, dec: 43.2 }   // 第三个点\n            ];\n\n            testPoints.forEach((point, index) => {\n                setTimeout(() => {\n                    this.addCalibrationPoint(point.ra, point.dec);\n                }, index * 2000);\n            });\n        },\n\n        // 手动添加校准点的接口方法\n        addCalibrationPointManually(raHours, decDegrees) {\n            this.addCalibrationPoint(raHours, decDegrees);\n        },\n\n        // 处理来自事件总线的添加校准点事件\n        handleAddCalibrationPoint(data) {\n            if (data && data.ra !== undefined && data.dec !== undefined) {\n                this.addCalibrationPoint(data.ra, data.dec);\n            }\n        },\n\n        // 更新赤道仪位置（来自事件总线）\n        updateMountPosition(data) {\n            if (data && data.ra !== undefined && data.dec !== undefined) {\n                this.currentRA = this.formatRA(data.ra);\n                this.currentDEC = this.formatDEC(data.dec);\n                this.currentPosition = this.convertToScreenCoordinates(data.ra, data.dec);\n                this.updateMoveDirection();\n                \n                // 更新极轴校准相关显示\n                this.updatePolarAlignmentDisplay(data.ra, data.dec);\n            }\n        },\n\n        // 更新目标位置（来自事件总线）\n        updateTargetPosition(data) {\n            if (data && data.ra !== undefined && data.dec !== undefined) {\n                this.targetRA = this.formatRA(data.ra);\n                this.targetDEC = this.formatDEC(data.dec);\n                this.targetPosition = this.convertToScreenCoordinates(data.ra, data.dec);\n                this.updateMoveDirection();\n            }\n        },\n\n        // 关闭组件\n        closeComponent() {\n            this.internalVisible = false;\n            this.$emit('close');\n            this.$emit('update:visible', false);\n        },\n\n        // 开始自动校准\n        startAutoCalibration() {\n            if (this.autoStart) {\n                this.addLog(this.$t('Starting automatic calibration process'), 'info');\n                this.addTestCalibrationPoints();\n            }\n        },\n\n        // 显示组件\n        show() {\n            console.log(\"显示自动极轴校准页面！\");\n            this.internalVisible = true;\n            this.$emit('update:visible', true);\n        },\n\n        // 隐藏组件\n        hide() {\n            console.log(\"隐藏自动极轴校准页面！\");\n            this.internalVisible = false;\n            this.$emit('update:visible', false);\n        },\n\n        // 切换显示状态\n        toggle() {\n            this.internalVisible = !this.internalVisible;\n            this.$emit('update:visible', this.internalVisible);\n        },\n\n        // 设置全屏模式\n        setFullscreen(fullscreen) {\n            this.$emit('update:fullscreen', fullscreen);\n        },\n\n        // 获取组件状态\n        getComponentStatus() {\n            return {\n                visible: this.visible,\n                fullscreen: true, // 现在默认是全屏\n                calibration: this.getCalibrationStatus()\n            };\n        },\n        \n        // 更新极轴校准显示\n        updatePolarAlignmentDisplay(ra, dec) {\n            // 计算相机视场在极轴视图中的位置\n            this.updateCameraFieldPosition(ra, dec);\n            \n            // 计算视场四个角的坐标\n            this.updateFieldCorners(ra, dec);\n            \n            // 计算到极轴的距离\n            this.updatePolarDistance();\n            \n            // 更新调整方向\n            this.updateAdjustmentDirection();\n            \n            // 检查是否已对准极轴\n            this.checkPolarAlignment();\n        },\n        \n        // 更新相机视场位置\n        updateCameraFieldPosition(ra, dec) {\n            // 假设极轴在RA=0h, DEC=90°位置\n            // 根据当前RA/DEC计算视场中心在极轴视图中的偏移\n            const polarRA = 0;  // 极轴赤经\n            const polarDEC = 90;  // 极轴赤纬\n            \n            // 计算角度差异并转换为像素偏移\n            const raOffset = (ra - polarRA) * 15; // 1小时 = 15度\n            const decOffset = dec - polarDEC;\n            \n            // 转换为SVG坐标系，限制在可视范围内\n            const scale = 2; // 像素/度比例\n            let newX = 150 + raOffset * scale;\n            let newY = 150 - decOffset * scale;\n            \n            // 确保视场框不超出SVG边界（考虑视场框大小40x30）\n            newX = Math.max(50, Math.min(250, newX));\n            newY = Math.max(40, Math.min(260, newY));\n            \n            this.cameraFieldOffset.x = newX;\n            this.cameraFieldOffset.y = newY;\n        },\n        \n        // 更新视场四个角的坐标\n        updateFieldCorners(centerRA, centerDEC) {\n            // 假设视场为1.5°×1.0°\n            const fieldWidth = 1.5; // 度\n            const fieldHeight = 1.0; // 度\n            \n            this.fieldCorners = [\n                // 左上角\n                { \n                    ra: centerRA - fieldWidth/30, // 转换为小时\n                    dec: centerDEC + fieldHeight/2,\n                    x: Math.max(10, Math.min(290, this.cameraFieldOffset.x - 40)),\n                    y: Math.max(10, Math.min(290, this.cameraFieldOffset.y - 30))\n                },\n                // 右上角\n                { \n                    ra: centerRA + fieldWidth/30,\n                    dec: centerDEC + fieldHeight/2,\n                    x: Math.max(10, Math.min(290, this.cameraFieldOffset.x + 40)),\n                    y: Math.max(10, Math.min(290, this.cameraFieldOffset.y - 30))\n                },\n                // 右下角\n                { \n                    ra: centerRA + fieldWidth/30,\n                    dec: centerDEC - fieldHeight/2,\n                    x: Math.max(10, Math.min(290, this.cameraFieldOffset.x + 40)),\n                    y: Math.max(10, Math.min(290, this.cameraFieldOffset.y + 30))\n                },\n                // 左下角\n                { \n                    ra: centerRA - fieldWidth/30,\n                    dec: centerDEC - fieldHeight/2,\n                    x: Math.max(10, Math.min(290, this.cameraFieldOffset.x - 40)),\n                    y: Math.max(10, Math.min(290, this.cameraFieldOffset.y + 30))\n                }\n            ];\n        },\n        \n        // 更新到极轴的距离\n        updatePolarDistance() {\n            const dx = this.cameraFieldOffset.x - 150;\n            const dy = this.cameraFieldOffset.y - 150;\n            const pixelDistance = Math.sqrt(dx * dx + dy * dy);\n            \n            // 转换为角秒 (假设1像素 = 30角秒)\n            this.polarDistance = pixelDistance * 30;\n        },\n        \n        // 更新调整方向\n        updateAdjustmentDirection() {\n            const dx = this.cameraFieldOffset.x - 150;\n            const dy = this.cameraFieldOffset.y - 150;\n            \n            // 计算需要调整的角度（度）\n            this.adjustmentDirection.azimuth = -dx / 2; // 像素转角度\n            this.adjustmentDirection.altitude = dy / 2;\n            \n            // 更新当前指向（增强显示）- 从赤道仪中心开始\n            this.currentPointingX = Math.max(-35, Math.min(35, dx * 0.4));\n            this.currentPointingY = Math.max(-35, Math.min(35, -dy * 0.4));\n            \n            // 显示调整箭头（降低阈值以更容易显示）\n            this.showAdjustmentArrow = Math.abs(dx) > 5 || Math.abs(dy) > 5;\n        },\n        \n        // 检查极轴对准状态\n        checkPolarAlignment() {\n            // 如果视场中心距离极轴小于30角秒，认为已对准\n            this.isPolarAligned = this.polarDistance < 30;\n        },\n        \n        // 生成方位角调整箭头路径（原版，保留兼容性）\n        getAzimuthArrowPath() {\n            const direction = this.adjustmentDirection.azimuth > 0 ? 1 : -1;\n            const x = 100 + direction * 30;\n            return `M ${x} 95 L ${x + direction * 10} 100 L ${x} 105 Z`;\n        },\n        \n        // 生成高度角调整箭头路径（原版，保留兼容性）\n        getAltitudeArrowPath() {\n            const direction = this.adjustmentDirection.altitude > 0 ? -1 : 1;\n            const y = 100 + direction * 30;\n            return `M 95 ${y} L 100 ${y + direction * 10} L 105 ${y} Z`;\n        },\n        \n        // 生成增强版方位角调整箭头路径\n        getEnhancedAzimuthArrowPath() {\n            const direction = this.adjustmentDirection.azimuth > 0 ? 1 : -1;\n            const x = 100 + direction * 40;\n            const size = Math.min(Math.abs(this.adjustmentDirection.azimuth) * 2, 15); // 根据角度调整大小\n            return `M ${x - direction * size/2} ${135 - size} L ${x + direction * size} 135 L ${x - direction * size/2} ${135 + size} Z`;\n        },\n        \n        // 生成增强版高度角调整箭头路径\n        getEnhancedAltitudeArrowPath() {\n            const direction = this.adjustmentDirection.altitude > 0 ? -1 : 1;\n            const y = 135 + direction * 40;\n            const size = Math.min(Math.abs(this.adjustmentDirection.altitude) * 2, 15); // 根据角度调整大小\n            return `M ${100 - size} ${y - direction * size/2} L 100 ${y + direction * size} L ${100 + size} ${y - direction * size/2} Z`;\n        },\n        \n        // 格式化角坐标显示\n        formatCornerCoord(ra, dec) {\n            const raStr = this.formatRA(ra).slice(0, 5); // 简化显示\n            const decStr = this.formatDEC(dec).slice(0, 6);\n            return `${raStr}/${decStr}`;\n        },\n        \n        // 添加触摸事件支持\n        addTouchSupport() {\n            const buttons = document.querySelectorAll('.reset-btn, .close-icon, .expand-icon');\n            buttons.forEach(button => {\n                // 添加触摸开始事件\n                button.addEventListener('touchstart', this.handleTouchStart, { passive: true });\n                // 添加触摸结束事件\n                button.addEventListener('touchend', this.handleTouchEnd, { passive: true });\n            });\n        },\n        \n        // 处理触摸开始\n        handleTouchStart(event) {\n            event.target.classList.add('touch-active');\n        },\n        \n        // 处理触摸结束\n        handleTouchEnd(event) {\n            event.target.classList.remove('touch-active');\n            // 触发点击事件\n            setTimeout(() => {\n                if (event.target.click) {\n                    event.target.click();\n                }\n            }, 100);\n        }\n    },\n\n    beforeDestroy() {\n        \n\n        // 清理事件总线监听器\n        this.$bus.$off('updateCurrentPosition', this.updatePosition);\n        this.$bus.$off('addCalibrationPoint', this.handleAddCalibrationPoint);\n        this.$bus.$off('resetCalibration', this.resetCalibration);\n        this.$bus.$off('showPolarAlignment', this.show);\n        this.$bus.$off('hidePolarAlignment', this.hide);\n        this.$bus.$off('togglePolarAlignment', this.toggle);\n        this.$bus.$off('updateMountPosition', this.updateMountPosition);\n        this.$bus.$off('updateTargetPosition', this.updateTargetPosition);\n    }\n}\n</script>\n\n<style scoped>\n  .mount-status-display {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    height: 100vh;\n    background: rgba(128, 128, 128, 0.6);\n    backdrop-filter: blur(10px);\n    z-index: 1000;\n    font-family: 'Arial', sans-serif;\n    transition: all 0.3s ease;\n    overflow: hidden;\n    display: flex;\n    flex-direction: column;\n  }\n\n  \n  \n  /* 触摸反馈样式 */\n  .touch-active {\n    transform: scale(0.95);\n    opacity: 0.8;\n    transition: all 0.1s ease;\n  }\n  \n  /* 按钮通用触摸支持 */\n  .reset-btn, .close-icon, .expand-icon {\n    -webkit-touch-callout: none;\n    -webkit-user-select: none;\n    -khtml-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    -webkit-tap-highlight-color: transparent;\n  }\n\n/* 日志区域样式 */\n.log-section {\n    flex: 0 0 200px;\n    background: rgba(60, 60, 60, 0.8);\n    border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n    display: flex;\n    flex-direction: column;\n    min-height: 150px;\n    max-height: 300px;\n    transition: flex 0.3s ease;\n}\n\n.log-section.expanded {\n    flex: 0 0 300px;\n}\n\n.log-header {\n    flex: 0 0 auto;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 8px 16px;\n    background: rgba(100, 100, 100, 0.7);\n    border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n    cursor: pointer;\n    transition: background 0.3s ease;\n}\n\n.log-header:hover {\n    background: rgba(120, 120, 120, 0.8);\n}\n\n.header-controls {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n}\n\n.log-title {\n    color: rgba(255, 255, 255, 0.9);\n    font-size: 14px;\n    font-weight: 500;\n}\n\n.expand-icon {\n    color: rgba(255, 255, 255, 0.6);\n    transition: transform 0.3s ease, color 0.3s ease;\n    cursor: pointer;\n}\n\n.expand-icon:hover {\n    color: rgba(255, 255, 255, 0.9);\n}\n\n.expand-icon.rotated {\n    transform: rotate(180deg);\n}\n\n.close-icon {\n    color: rgba(255, 255, 255, 0.6);\n    cursor: pointer;\n    padding: 4px;\n    border-radius: 4px;\n    transition: all 0.3s ease;\n}\n\n.close-icon:hover {\n    color: rgba(255, 255, 255, 0.9);\n    background: rgba(255, 255, 255, 0.1);\n}\n\n.log-content {\n    flex: 1;\n    overflow-y: auto;\n    overflow-x: hidden;\n    padding: 8px;\n    min-height: 0; /* 确保flex子元素可以正确收缩 */\n}\n\n.log-item {\n    display: flex;\n    align-items: flex-start;\n    margin-bottom: 4px;\n    padding: 4px 8px;\n    border-radius: 4px;\n    font-size: 12px;\n    background: rgba(100, 100, 100, 0.4);\n    word-wrap: break-word;\n    overflow-wrap: break-word;\n}\n\n.log-item.info {\n    border-left: 3px solid #4a90e2;\n}\n\n.log-item.warning {\n    border-left: 3px solid #f5a623;\n}\n\n.log-item.success {\n    border-left: 3px solid #7ed321;\n}\n\n.log-item.error {\n    border-left: 3px solid #d0021b;\n}\n\n.log-time {\n    color: rgba(255, 255, 255, 0.6);\n    margin-right: 12px;\n    min-width: 80px;\n    flex-shrink: 0;\n    white-space: nowrap;\n    padding-top: 1px; /* 与消息文本顶部对齐 */\n}\n\n.log-message {\n    color: rgba(255, 255, 255, 0.9);\n    flex: 1;\n    word-wrap: break-word;\n    overflow-wrap: break-word;\n    white-space: pre-wrap;\n    line-height: 1.4;\n}\n\n/* 图像区域样式 */\n.image-section {\n    flex: 1;\n    display: flex;\n    gap: 1px;\n    overflow: hidden;\n}\n\n.mount-image-container,\n.camera-field-container {\n    flex: 1;\n    background: rgba(90, 90, 90, 0.8);\n    border-radius: 8px;\n    margin: 8px;\n    padding: 12px;\n    display: flex;\n    flex-direction: column;\n    min-height: 400px;\n    overflow: hidden;\n}\n\n.mount-image-title,\n.camera-field-title {\n    color: rgba(255, 255, 255, 0.9);\n    font-size: 14px;\n    font-weight: 500;\n    margin-bottom: 12px;\n    text-align: center;\n    padding-bottom: 8px;\n    border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.mount-image-content {\n    flex: 0 0 auto;\n    height: 180px;\n    position: relative;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background: rgba(80, 80, 80, 0.7);\n    border-radius: 6px;\n    overflow: hidden;\n}\n\n.camera-field-content {\n    flex: 1;\n    position: relative;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background: rgba(80, 80, 80, 0.7);\n    border-radius: 6px;\n    overflow: hidden;\n    min-height: 250px;\n    max-height: 400px;\n}\n\n.mount-background {\n    width: 200px;\n    height: 200px;\n    position: relative;\n}\n\n.direction-arrow {\n    position: absolute;\n    z-index: 10;\n}\n\n  @keyframes arrowPulse {\n    0%, 100% {\n        opacity: 1;\n        transform: scale(1);\n    }\n    50% {\n        opacity: 0.7;\n        transform: scale(1.1);\n    }\n  }\n  \n  @keyframes adjustmentPulse {\n    0%, 100% {\n        opacity: 1;\n        transform: scale(1);\n    }\n    50% {\n        opacity: 0.8;\n        transform: scale(1.2);\n    }\n  }\n  \n  @keyframes pointingBlink {\n    0%, 100% {\n        opacity: 1;\n    }\n    50% {\n        opacity: 0.6;\n    }\n  }\n  \n  /* 方向指示相关动画 */\n  .current-pointing .pointing-line {\n    animation: pointingBlink 2s ease-in-out infinite;\n  }\n  \n  .current-pointing .pointing-text {\n    animation: pointingBlink 2s ease-in-out infinite;\n  }\n  \n  .adjustment-arrows .adjustment-arrow-pulse {\n    animation: adjustmentPulse 1.5s ease-in-out infinite;\n  }\n  \n  /* 方向指示增强样式 */\n  .current-pointing {\n    filter: drop-shadow(0 0 3px rgba(255, 0, 0, 0.5));\n  }\n  \n  .adjustment-arrows {\n    filter: drop-shadow(0 0 2px rgba(0, 0, 0, 0.5));\n  }\n\n/* 原有的mount-info样式（保留兼容性） */\n.mount-info {\n    margin-top: 12px;\n    padding: 8px;\n    background: rgba(100, 100, 100, 0.5);\n    border-radius: 4px;\n}\n\n.info-row {\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 4px;\n    font-size: 12px;\n}\n\n/* 滚动条样式 */\n.log-content::-webkit-scrollbar,\n.integrated-info-panel::-webkit-scrollbar {\n    width: 8px;\n}\n\n.log-content::-webkit-scrollbar-track,\n.integrated-info-panel::-webkit-scrollbar-track {\n    background: rgba(100, 100, 100, 0.3);\n    border-radius: 4px;\n}\n\n.log-content::-webkit-scrollbar-thumb,\n.integrated-info-panel::-webkit-scrollbar-thumb {\n    background: rgba(255, 255, 255, 0.4);\n    border-radius: 4px;\n    border: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.log-content::-webkit-scrollbar-thumb:hover,\n.integrated-info-panel::-webkit-scrollbar-thumb:hover {\n    background: rgba(255, 255, 255, 0.6);\n}\n\n/* 日志区域样式 */\n.log-content {\n    position: relative;\n    background: rgba(60, 60, 60, 0.8);\n}\n\n/* 整合信息面板样式 */\n.integrated-info-panel {\n    flex: 1;\n    margin-top: 8px;\n    padding: 8px;\n    background: rgba(100, 100, 100, 0.5);\n    border-radius: 6px;\n    border: 1px solid rgba(255, 255, 255, 0.1);\n    max-height: 300px;\n    overflow-y: auto;\n    display: flex;\n    flex-direction: column;\n}\n\n.info-section {\n    flex: 0 0 auto;\n    margin-bottom: 8px;\n    padding: 6px 8px;\n    background: rgba(90, 90, 90, 0.4);\n    border-radius: 4px;\n    border: 1px solid rgba(255, 255, 255, 0.05);\n}\n\n.info-section:last-child {\n    margin-bottom: 0;\n}\n\n.section-title {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    color: rgba(255, 255, 255, 0.9);\n    font-size: 12px;\n    font-weight: 500;\n    margin-bottom: 6px;\n    padding-bottom: 3px;\n    border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.info-grid {\n    display: grid;\n    gap: 3px;\n}\n\n.info-item {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    font-size: 11px;\n    padding: 2px 0;\n}\n\n.info-label {\n    color: rgba(255, 255, 255, 0.7);\n    font-weight: 500;\n    min-width: 60px;\n}\n\n.info-value {\n    color: rgba(255, 255, 255, 0.9);\n    font-family: monospace;\n    font-size: 10px;\n    text-align: right;\n    word-break: break-word;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    max-width: 100px;\n}\n\n.adjustment-needed {\n    color: #ff6b6b !important;\n    font-weight: bold;\n}\n\n/* 紧凑的校准进度样式 */\n.progress-compact {\n    display: flex;\n    gap: 4px;\n    justify-content: space-between;\n}\n\n.progress-step {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 4px 2px;\n    background: rgba(90, 90, 90, 0.4);\n    border-radius: 4px;\n    transition: all 0.3s ease;\n}\n\n.progress-step.completed {\n    background: rgba(126, 211, 33, 0.2);\n    border: 1px solid #7ed321;\n}\n\n.progress-step.current {\n    background: rgba(74, 144, 226, 0.2);\n    border: 1px solid #4a90e2;\n}\n\n.step-number {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    width: 16px;\n    height: 16px;\n    background: rgba(255, 255, 255, 0.1);\n    border-radius: 50%;\n    color: rgba(255, 255, 255, 0.8);\n    font-size: 10px;\n    margin-bottom: 2px;\n}\n\n.progress-step.completed .step-number {\n    background: #7ed321;\n    color: white;\n}\n\n.progress-step.current .step-number {\n    background: #4a90e2;\n    color: white;\n}\n\n.step-coords {\n    color: rgba(255, 255, 255, 0.6);\n    font-size: 8px;\n    font-family: monospace;\n    text-align: center;\n    line-height: 1.2;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    max-width: 80px;\n}\n\n/* 紧凑的偏转结果样式 */\n.offset-compact {\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n}\n\n.offset-row {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    font-size: 11px;\n    gap: 8px;\n}\n\n.offset-label {\n    color: rgba(255, 255, 255, 0.7);\n    font-weight: 500;\n    min-width: 25px;\n}\n\n.offset-value {\n    color: rgba(255, 255, 255, 0.9);\n    font-family: monospace;\n    font-size: 10px;\n    font-weight: 500;\n}\n\n.offset-value.high-offset {\n    color: #f5a623;\n}\n\n.offset-status {\n    text-align: center;\n    margin-top: 4px;\n    font-size: 10px;\n}\n\n.status-warning {\n    color: #f5a623;\n}\n\n.status-success {\n    color: #7ed321;\n}\n\n/* 迷你重置按钮 */\n.mini-reset-btn {\n    padding: 2px 6px;\n    background: rgba(255, 255, 255, 0.1);\n    border: 1px solid rgba(255, 255, 255, 0.2);\n    border-radius: 3px;\n    color: rgba(255, 255, 255, 0.8);\n    font-size: 10px;\n    cursor: pointer;\n    transition: all 0.3s ease;\n}\n\n.mini-reset-btn:hover:not(:disabled) {\n    background: rgba(255, 255, 255, 0.2);\n    border-color: rgba(255, 255, 255, 0.3);\n}\n\n.mini-reset-btn:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n}\n\n  /* 响应式设计 */\n  @media (max-width: 768px) {\n    .log-section {\n      flex: 0 0 150px;\n    }\n    \n    .log-section.expanded {\n      flex: 0 0 250px;\n    }\n    \n    .image-section {\n      flex-direction: column;\n      flex: 1;\n    }\n\n    .mount-image-container,\n    .camera-field-container {\n      margin: 2px;\n      padding: 6px;\n      min-height: 200px;\n      max-height: 300px;\n    }\n    \n    .mount-image-content {\n      height: 120px;\n    }\n\n    .mount-image-title,\n    .camera-field-title {\n      font-size: 11px;\n      margin-bottom: 6px;\n    }\n\n    .integrated-info-panel {\n      padding: 4px;\n      max-height: 180px;\n    }\n\n    .info-section {\n      padding: 4px 6px;\n      margin-bottom: 6px;\n    }\n\n    .section-title {\n      font-size: 11px;\n    }\n\n    .info-item {\n      font-size: 10px;\n    }\n\n    .progress-compact {\n      flex-direction: column;\n      gap: 2px;\n    }\n\n    .progress-step {\n      flex-direction: row;\n      justify-content: space-between;\n      padding: 2px 4px;\n    }\n\n    .step-coords {\n      font-size: 9px;\n    }\n    \n    /* 移动设备按钮优化 */\n    .mini-reset-btn {\n      padding: 4px 8px;\n      font-size: 9px;\n      min-height: 24px;\n      min-width: 50px;\n    }\n    \n    .close-icon, .expand-icon {\n      padding: 6px;\n      min-height: 32px;\n      min-width: 32px;\n    }\n    \n    /* SVG在移动设备上的优化 */\n    .mount-background svg,\n    .camera-field-content svg {\n      max-width: 100%;\n      height: auto;\n    }\n    \n    /* 移动设备上的方向指示优化 */\n    .current-pointing .pointing-text {\n      font-size: 8px;\n    }\n    \n    .adjustment-arrows text {\n      font-size: 9px;\n    }\n    \n    .adjustment-arrows rect {\n      width: 35px;\n      height: 14px;\n    }\n    \n    /* 文字大小调整 */\n    .info-row {\n      font-size: 11px;\n    }\n    \n    .log-item {\n      font-size: 11px;\n      padding: 3px 6px;\n    }\n    \n    .log-time {\n      min-width: 60px;\n      font-size: 10px;\n    }\n    \n    .log-message {\n      font-size: 11px;\n      line-height: 1.3;\n    }\n  }\n  \n  /* 极小屏幕优化 */\n  @media (max-width: 480px) {\n    .log-section {\n      flex: 0 0 120px;\n    }\n    \n    .log-section.expanded {\n      flex: 0 0 200px;\n    }\n    \n    .image-section {\n      flex: 1;\n    }\n    \n    .mount-image-container,\n    .camera-field-container {\n      margin: 1px;\n      padding: 4px;\n      min-height: 180px;\n      max-height: 250px;\n    }\n    \n    .mount-image-content {\n      height: 100px;\n    }\n    \n    .integrated-info-panel {\n      padding: 3px;\n      max-height: 150px;\n    }\n    \n    .info-section {\n      padding: 3px 4px;\n      margin-bottom: 4px;\n    }\n    \n    .section-title {\n      font-size: 10px;\n    }\n    \n    .info-item {\n      font-size: 9px;\n    }\n    \n    .offset-row {\n      font-size: 10px;\n    }\n  }\n  \n  /* 横屏适配 */\n  @media (max-height: 600px) and (orientation: landscape) {\n    .log-section {\n      flex: 0 0 120px;\n    }\n    \n    .log-section.expanded {\n      flex: 0 0 180px;\n    }\n    \n    .image-section {\n      flex-direction: row;\n      flex: 1;\n    }\n    \n    .integrated-info-panel {\n      max-height: 200px;\n    }\n    \n    .mount-image-container,\n    .camera-field-container {\n      min-height: 250px;\n      max-height: 350px;\n    }\n    \n    .mount-image-content {\n      height: 150px;\n    }\n  }\n</style>\n\n<!-- \n    # 极轴校准组件事件总线使用示例\n\n    ## 概述\n    极轴校准组件现在支持通过事件总线 (`this.$bus`) 来进行数据更新和通信。\n\n    ## 发送事件到组件\n\n    ### 1. 显示/隐藏组件\n    ```javascript\n    // 显示极轴校准界面\n    this.$bus.$emit('showPolarAlignment');\n\n    // 隐藏极轴校准界面\n    this.$bus.$emit('hidePolarAlignment');\n\n    // 切换显示状态\n    this.$bus.$emit('togglePolarAlignment');\n    ```\n\n    ### 2. 添加校准点\n    ```javascript\n    // 添加一个校准点\n    this.$bus.$emit('addCalibrationPoint', {\n    ra: 12.5,   // 赤经（小时）\n    dec: 45.0   // 赤纬（度）\n    });\n\n    // 批量添加多个校准点\n    const points = [\n    { ra: 12.5, dec: 45.0 },\n    { ra: 13.2, dec: 46.5 },\n    { ra: 11.8, dec: 43.2 }\n    ];\n\n    points.forEach(point => {\n    this.$bus.$emit('addCalibrationPoint', point);\n    });\n    ```\n\n    ### 3. 重置校准\n    ```javascript\n    // 重置校准数据\n    this.$bus.$emit('resetCalibration');\n    ```\n\n    ### 4. 更新位置信息\n    ```javascript\n    // 更新当前赤道仪位置\n    this.$bus.$emit('updateMountPosition', {\n    ra: 12.5,   // 赤经（小时）\n    dec: 45.0   // 赤纬（度）\n    });\n\n    // 更新目标位置\n    this.$bus.$emit('updateTargetPosition', {\n    ra: 12.3,   // 赤经（小时）\n    dec: 45.2   // 赤纬（度）\n    });\n\n    // 更新当前位置（原有方法）\n    this.$bus.$emit('updateCurrentPosition', {\n    ra: 12.4,   // 赤经（小时）\n    dec: 45.1   // 赤纬（度）\n    });\n    ```\n\n    ## 监听组件事件\n\n    ### 1. 监听校准完成事件\n    ```javascript\n    // 在组件的mounted生命周期中监听\n    mounted() {\n    this.$bus.$on('polarAlignmentComplete', this.handleCalibrationComplete);\n    this.$bus.$on('calibrationPointAdded', this.handlePointAdded);\n    this.$bus.$on('calibrationReset', this.handleCalibrationReset);\n    },\n\n    methods: {\n    handleCalibrationComplete(data) {\n        console.log('极轴校准完成:', data);\n        console.log('方位角偏转:', data.offset.azimuth, '度');\n        console.log('高度角偏转:', data.offset.altitude, '度');\n        \n        // 判断是否需要调整\n                        if (Math.abs(data.offset.azimuth) > 5 || Math.abs(data.offset.altitude) > 5) {\n                    this.showNotification(this.$t('Large polar axis offset detected, adjustment recommended!'), 'warning');\n                } else {\n                    this.showNotification(this.$t('Polar axis calibration is normal'), 'success');\n                }\n    },\n    \n    handlePointAdded(data) {\n        console.log('校准点已添加:', data);\n        console.log('当前步骤:', data.stepIndex + 1, '/', data.totalSteps);\n        \n        // 更新进度条\n        this.updateCalibrationProgress(data.stepIndex + 1, data.totalSteps);\n    },\n    \n    handleCalibrationReset(data) {\n        console.log('校准已重置:', data);\n        this.resetProgressBar();\n    }\n    },\n\n    beforeDestroy() {\n    // 清理事件监听器\n    this.$bus.$off('polarAlignmentComplete', this.handleCalibrationComplete);\n    this.$bus.$off('calibrationPointAdded', this.handlePointAdded);\n    this.$bus.$off('calibrationReset', this.handleCalibrationReset);\n    }\n    ```\n\n    ## 完整使用示例\n\n    ### 示例1: 天文设备控制器\n    ```javascript\n    // 天文设备控制器组件\n    export default {\n    name: 'TelescopeController',\n    data() {\n        return {\n        currentRA: 0,\n        currentDEC: 0,\n        targetRA: 0,\n        targetDEC: 0,\n        calibrationStep: 0,\n        isCalibrating: false\n        }\n    },\n    \n    mounted() {\n        // 监听校准相关事件\n        this.$bus.$on('polarAlignmentComplete', this.onCalibrationComplete);\n        this.$bus.$on('calibrationPointAdded', this.onPointAdded);\n        \n        // 模拟位置更新\n        this.startPositionUpdater();\n    },\n    \n    methods: {\n        // 开始极轴校准\n        startPolarAlignment() {\n        this.isCalibrating = true;\n        this.calibrationStep = 0;\n        \n        // 显示校准界面\n        this.$bus.$emit('showPolarAlignment');\n        \n        // 重置校准数据\n        this.$bus.$emit('resetCalibration');\n        \n        // 开始收集校准点\n        this.collectCalibrationPoints();\n        },\n        \n        // 收集校准点\n        collectCalibrationPoints() {\n        const points = [\n            { ra: 12.5, dec: 45.0 },\n            { ra: 13.2, dec: 46.5 },\n            { ra: 11.8, dec: 43.2 }\n        ];\n        \n        points.forEach((point, index) => {\n            setTimeout(() => {\n            this.$bus.$emit('addCalibrationPoint', point);\n            }, index * 2000);\n        });\n        },\n        \n        // 处理校准完成\n        onCalibrationComplete(data) {\n        this.isCalibrating = false;\n        \n        // 保存偏转结果\n        this.saveCalibrationResult(data.offset);\n        \n        // 隐藏校准界面\n        setTimeout(() => {\n            this.$bus.$emit('hidePolarAlignment');\n        }, 3000);\n        },\n        \n        // 处理校准点添加\n        onPointAdded(data) {\n        this.calibrationStep = data.stepIndex + 1;\n        console.log(`校准进度: ${this.calibrationStep}/3`);\n        },\n        \n        // 开始位置更新器\n        startPositionUpdater() {\n        setInterval(() => {\n            // 模拟位置变化\n            this.currentRA += Math.random() * 0.01 - 0.005;\n            this.currentDEC += Math.random() * 0.01 - 0.005;\n            \n            // 发送位置更新\n            this.$bus.$emit('updateMountPosition', {\n            ra: this.currentRA,\n            dec: this.currentDEC\n            });\n        }, 1000);\n        },\n        \n        // 保存校准结果\n        saveCalibrationResult(offset) {\n        // 保存到本地存储或发送到服务器\n        localStorage.setItem('polarAxisOffset', JSON.stringify(offset));\n        \n        // 显示结果通知\n                        this.showNotification(this.$t('Polar axis calibration completed: Azimuth {0}°, Altitude {1}°', [offset.azimuth.toFixed(2), offset.altitude.toFixed(2)]));\n        }\n    },\n    \n    beforeDestroy() {\n        this.$bus.$off('polarAlignmentComplete', this.onCalibrationComplete);\n        this.$bus.$off('calibrationPointAdded', this.onPointAdded);\n    }\n    }\n    ```\n\n    ### 示例2: 简单的校准触发器\n    ```javascript\n    // 简单的校准触发器\n    export default {\n    name: 'CalibrationTrigger',\n    \n    methods: {\n        // 快速校准\n        quickCalibration() {\n        // 使用预设的校准点\n        const presetPoints = [\n            { ra: 12.5, dec: 45.0 },\n            { ra: 13.2, dec: 46.5 },\n            { ra: 11.8, dec: 43.2 }\n        ];\n        \n        // 显示校准界面\n        this.$bus.$emit('showPolarAlignment');\n        \n        // 重置并添加校准点\n        this.$bus.$emit('resetCalibration');\n        \n        presetPoints.forEach((point, index) => {\n            setTimeout(() => {\n            this.$bus.$emit('addCalibrationPoint', point);\n            }, index * 1000);\n        });\n        },\n        \n        // 手动添加校准点\n        addCurrentPosition() {\n        // 获取当前望远镜位置（这里是模拟数据）\n        const currentPos = this.getCurrentTelescopePosition();\n        \n        this.$bus.$emit('addCalibrationPoint', {\n            ra: currentPos.ra,\n            dec: currentPos.dec\n        });\n        }\n    }\n    }\n    ```\n\n    ## 事件总线事件列表\n\n    ### 发送到组件的事件\n    | 事件名 | 参数 | 说明 |\n    |--------|------|------|\n    | `showPolarAlignment` | - | 显示极轴校准界面 |\n    | `hidePolarAlignment` | - | 隐藏极轴校准界面 |\n    | `togglePolarAlignment` | - | 切换显示状态 |\n    | `addCalibrationPoint` | `{ra, dec}` | 添加校准点 |\n    | `resetCalibration` | - | 重置校准数据 |\n    | `updateMountPosition` | `{ra, dec}` | 更新赤道仪位置 |\n    | `updateTargetPosition` | `{ra, dec}` | 更新目标位置 |\n    | `updateCurrentPosition` | `{ra, dec}` | 更新当前位置 |\n\n    ### 组件发送的事件\n    | 事件名 | 参数 | 说明 |\n    |--------|------|------|\n    | `polarAlignmentComplete` | `{offset, points, timestamp}` | 极轴校准完成 |\n    | `calibrationPointAdded` | `{point, stepIndex, totalSteps}` | 校准点已添加 |\n    | `calibrationReset` | `{timestamp}` | 校准已重置 |\n\n    ## 注意事项\n\n    1. 记得在组件销毁前清理事件监听器，避免内存泄漏\n    2. 事件总线是全局的，注意事件名称的唯一性\n    3. 传递的数据格式要保持一致\n    4. 合理使用事件总线，避免过度依赖导致代码难以维护\n  -->"]}]}