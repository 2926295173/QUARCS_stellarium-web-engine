{"remainingRequest":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/src/components/bottom-bar.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/src/components/bottom-bar.vue","mtime":1756885034408},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/css-loader/dist/cjs.js","mtime":1756885033612},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1756885034208},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/postcss-loader/src/index.js","mtime":1756885034000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1756885033541},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/vue-loader/lib/index.js","mtime":1756885034208}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAbWVkaWEgYWxsIGFuZCAobWF4LXdpZHRoOiA2MDBweCkgewogIC50bWVudWJ0IHsKICAgIG1pbi13aWR0aDogMzBweDsKICB9Cn0KQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogNjAwcHgpIHsKICAudGJ0Y29udGFpbmVyIHsKICAgIHdpZHRoOiAzMDBweDsKICB9Cn0KCi8qIC5idG4tYmFyIHsKICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOCk7CiAgYm9yZGVyLXJhZGl1czogMTBweDsKICBiYWNrZHJvcC1maWx0ZXI6IGJsdXIoNXB4KTsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMSk7CgogIHBhZGRpbmc6IDAuMnJlbTsKfSAqLwoK"},{"version":3,"sources":["bottom-bar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"bottom-bar.vue","sourceRoot":"src/components","sourcesContent":["// Stellarium Web - Copyright (c) 2022 - Stellarium Labs SRL\n//\n// This program is licensed under the terms of the GNU AGPL v3, or\n// alternatively under a commercial licence.\n//\n// The terms of the AGPL v3 license can be found in the main directory of this\n// repository.\n\n<template>\n  <div class=\"btn-bar\" style=\"position: absolute; display:flex; align-items: flex-end;\">\n    <!-- <div v-if=\"$store.state.showLocationButton\" class=\"tbtcontainer\" style=\"max-width: 300px; display:flex; align-items: flex-end;\">\n      <v-btn class=\"tmenubt\" color=\"secondary\" @click.stop.native=\"locationClicked()\"><v-icon class=\"hidden-sm-and-up\">mdi-map-marker</v-icon><span class=\"hidden-xs-only\">{{ $store.state.currentLocation.short_name }}</span></v-btn>\n    </div> -->\n    <v-spacer></v-spacer>\n\n    <bottom-button :label=\"$t('Constellations')\"\n                v-if=\"$store.state.showConstellationsLinesButton !== false\"\n                :img=\"require('@/assets/images/btn-cst-lines.svg')\"\n                img_alt=\"Constellations Button\"\n                :toggled=\"$store.state.stel.constellations.lines_visible\"\n                @clicked=\"(b) => { $stel.core.constellations.lines_visible = b; $stel.core.constellations.labels_visible = b }\">\n    </bottom-button>\n    <bottom-button :label=\"$t('Constellations Art')\"\n                v-if=\"$store.state.showConstellationsArtButton !== false\"\n                :img=\"require('@/assets/images/btn-cst-art.svg')\"\n                img_alt=\"Constellations Art Button\"\n                :toggled=\"$store.state.stel.constellations.images_visible\"\n                @clicked=\"(b) => { $stel.core.constellations.images_visible = b }\">\n    </bottom-button>\n    <bottom-button :label=\"$t('Atmosphere')\"\n                v-if=\"$store.state.showAtmosphereButton !== false\"\n                :img=\"require('@/assets/images/btn-atmosphere.svg')\"\n                img_alt=\"Atmosphere Button\"\n                :toggled=\"$store.state.stel.atmosphere.visible\"\n                @clicked=\"(b) => { $stel.core.atmosphere.visible = b }\">\n    </bottom-button>\n    <bottom-button :label=\"$t('Landscape')\"\n                v-if=\"$store.state.showLandscapeButton !== false\"\n                :img=\"require('@/assets/images/btn-landscape.svg')\"\n                img_alt=\"Landscape Button\"\n                :toggled=\"$store.state.stel.landscapes.visible\"\n                @clicked=\"(b) => { $stel.core.landscapes.visible = b }\">\n    </bottom-button>\n    <bottom-button :label=\"$t('Azimuthal Grid')\"\n                v-if=\"$store.state.showAzimuthalGridButton !== false\"\n                :img=\"require('@/assets/images/btn-azimuthal-grid.svg')\"\n                img_alt=\"Azimuthal Button\"\n                :toggled=\"$store.state.stel.lines.azimuthal.visible\"\n                @clicked=\"(b) => { $stel.core.lines.azimuthal.visible = b }\">\n    </bottom-button>\n    <bottom-button :label=\"$t('Equatorial Grid')\"\n                v-if=\"$store.state.showEquatorialGridButton !== false\"\n                :img=\"require('@/assets/images/btn-equatorial-grid.svg')\"\n                img_alt=\"Equatorial Grid Button\"\n                :toggled=\"$store.state.stel.lines.equatorial_jnow.visible\"\n                @clicked=\"(b) => { $stel.core.lines.equatorial_jnow.visible = b }\">\n    </bottom-button>\n    <bottom-button :label=\"$t('Equatorial J2000 Grid')\"\n                v-if=\"$store.state.showEquatorialJ2000GridButton !== false\"\n                :img=\"require('@/assets/images/btn-equatorial-grid.svg')\"\n                img_alt=\"Equatorial J2000 Grid Button\"\n                :toggled=\"$store.state.stel.lines.equatorial.visible\"\n                @clicked=\"(b) => { $stel.core.lines.equatorial.visible = b }\">\n    </bottom-button>\n    <bottom-button :label=\"$t('Deep Sky Objects')\"\n                :img=\"require('@/assets/images/btn-nebulae.svg')\"\n                img_alt=\"Deep Sky Objects Button\"\n                class=\"mr-auto\"\n                :toggled=\"$store.state.stel.dsos.visible\"\n                @clicked=\"(b) => { $stel.core.dsos.visible = b }\">\n    </bottom-button>\n    <!-- <bottom-button :label=\"$t('Night Mode')\"\n                v-if=\"$store.state.showNightmodeButton !== false\"\n                :img=\"require('@/assets/images/btn-night-mode.svg')\"\n                img_alt=\"Night Mode Button\"\n                class=\"mr-auto\"\n                :toggled=\"$store.state.nightmode\"\n                @clicked=\"(b) => { setNightMode(b) }\">\n    </bottom-button> -->\n    <!-- <bottom-button :label=\"$t('Fullscreen')\"\n                :img=\"fullscreenBtnImage\"\n                img_alt=\"Fullscreen Button\"\n                class=\"mr-auto hidden-xs-only\"\n                :toggled=\"$store.state.fullscreen\"\n                @clicked=\"(b) => { setFullscreen(b) }\">\n    </bottom-button> -->\n\n    <v-spacer></v-spacer>\n\n    <!-- <v-menu v-if=\"$store.state.showTimeButtons\" :close-on-content-click=\"false\" transition=\"v-slide-y-transition\" offset-y top left>\n      <template v-slot:activator=\"{ on }\">\n        <v-btn large class=\"tmenubt\" color=\"secondary\" v-on=\"on\">\n          <v-icon class=\"hidden-sm-and-up\">mdi-clock-outline</v-icon>\n          <span class=\"hidden-xs-only\">\n            <div class=\"text-subtitle-2\">{{ time }}</div>\n            <div class=\"text-caption\">{{ date }}</div>\n          </span>\n        </v-btn>\n      </template>\n      <date-time-picker v-model=\"pickerDate\" :location=\"$store.state.currentLocation\"></date-time-picker>\n    </v-menu> -->\n\n  </div>\n</template>\n\n<script>\n\nimport BottomButton from '@/components/bottom-button.vue'\n// import DateTimePicker from '@/components/date-time-picker.vue'\n// import Moment from 'moment'\n\nexport default {\n  components: { BottomButton },\n  data: function () {\n    return {\n    }\n  },\n  computed: {\n    // time: {\n    //   get: function () {\n    //     return this.getLocalTime().format('HH:mm:ss')\n    //   }\n    // },\n    // date: {\n    //   get: function () {\n    //     return this.getLocalTime().format('YYYY-MM-DD')\n    //   }\n    // },\n    fullscreenBtnImage: function () {\n      return this.$store.state.fullscreen ? require('@/assets/images/svg/ui/fullscreen_exit.svg') : require('@/assets/images/svg/ui/fullscreen.svg')\n    },\n    // pickerDate: {\n    //   get: function () {\n    //     const t = this.getLocalTime()\n    //     t.milliseconds(0)\n    //     return t.format()\n    //   },\n    //   set: function (v) {\n    //     const m = Moment(v)\n    //     m.local()\n    //     m.milliseconds(this.getLocalTime().milliseconds())\n    //     this.$stel.core.observer.utc = m.toDate().getMJD()\n    //   }\n    // }\n  },\n  methods: {\n    // The MomentJS time in local time\n    // getLocalTime: function () {\n    //   var d = new Date()\n    //   d.setMJD(this.$store.state.stel.observer.utc)\n    //   const m = Moment(d)\n    //   m.local()\n    //   return m\n    // },\n    // locationClicked: function () {\n    //   this.$store.commit('toggleBool', 'showLocationDialog')\n    // },\n    setFullscreen: function (b) {\n      this.$fullscreen.toggle(document.body, {\n        wrap: false,\n        callback: this.onFullscreenChange\n      })\n    },\n    setNightMode: function (b) {\n      this.$store.commit('toggleBool', 'nightmode')\n      if (window.navigator.userAgent.indexOf('Edge') > -1) {\n        document.getElementById('nightmode').style.opacity = b ? '0.5' : '0'\n      }\n      document.getElementById('nightmode').style.visibility = b ? 'visible' : 'hidden'\n    },\n    onFullscreenChange: function (b) {\n      if (this.$store.state.fullscreen === b) return\n      this.$store.commit('toggleBool', 'fullscreen')\n    }\n  }\n}\n</script>\n\n<style>\n@media all and (max-width: 600px) {\n  .tmenubt {\n    min-width: 30px;\n  }\n}\n@media all and (min-width: 600px) {\n  .tbtcontainer {\n    width: 300px;\n  }\n}\n\n/* .btn-bar {\n  border: 1px solid rgba(255, 255, 255, 0.8);\n  border-radius: 10px;\n  backdrop-filter: blur(5px);\n  background-color: rgba(0, 0, 0, 0.1);\n\n  padding: 0.2rem;\n} */\n\n</style>\n"]}]}