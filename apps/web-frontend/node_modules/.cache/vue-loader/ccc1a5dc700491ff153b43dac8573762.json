{"remainingRequest":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/src/components/planets-visibility.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/src/components/planets-visibility.vue","mtime":1756885034408},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/css-loader/dist/cjs.js","mtime":1756885033612},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1756885034208},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/postcss-loader/src/index.js","mtime":1756885034000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1756885033541},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/vue-loader/lib/index.js","mtime":1756885034208}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouaW5wdXQtZ3JvdXAgewogIG1hcmdpbjogMHB4Owp9Cg=="},{"version":3,"sources":["planets-visibility.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2JA;AACA;AACA","file":"planets-visibility.vue","sourceRoot":"src/components","sourcesContent":["// Stellarium Web - Copyright (c) 2022 - Stellarium Labs SRL\n//\n// This program is licensed under the terms of the GNU AGPL v3, or\n// alternatively under a commercial licence.\n//\n// The terms of the AGPL v3 license can be found in the main directory of this\n// repository.\n\n<template>\n<v-dialog max-width='600' v-model=\"$store.state.showPlanetsVisibilityDialog\">\n  <v-card v-if=\"$store.state.showPlanetsVisibilityDialog\" transparent class=\"secondary white--text\">\n    <v-card-title><div class=\"text-h5\">{{ $t('Planets Visibility') }}</div></v-card-title>\n    <v-card-text>{{ $t('Night from {0} to {1}', [startDate.format('MMMM Do'), endDate.format('MMMM Do')]) }}</v-card-text>\n    <v-card-text>\n      <div>\n        <v-row no-gutters>\n          <v-col cols=\"1\" offset=\"2\"><span>{{ $t('Rise') }}</span></v-col>\n          <v-col cols=\"1\"><span>{{ $t('Set') }}</span></v-col>\n          <v-col cols=\"8\">\n            <v-row justify=\"space-between\">\n              <span>12:00</span><span>18:00</span><span>00:00</span><span>06:00</span><span>12:00</span>\n            </v-row>\n          </v-col>\n        </v-row>\n        <template v-for=\"obj in objs\">\n        <v-row no-gutters :key=\"obj.v\">\n          <v-col cols=\"2\">{{cleanName(obj)}}</v-col>\n          <v-col cols=\"1\">{{formatTime(obj.computeVisibility()[0].rise)}}</v-col>\n          <v-col cols=\"1\">{{formatTime(obj.computeVisibility()[0].set)}}</v-col>\n          <v-col cols=\"8\">\n            <div :style='sunBackgroundStr'>&nbsp;\n              <div v-html=\"planetBackgroundStr(obj)\"></div>\n            </div>\n          </v-col>\n        </v-row>\n        </template>\n      </div>\n    </v-card-text>\n    <v-card-actions>\n      <v-spacer></v-spacer><v-btn class=\"blue--text darken-1\" text @click.native=\"$store.state.showPlanetsVisibilityDialog = false\">Close</v-btn>\n    </v-card-actions>\n  </v-card>\n</v-dialog>\n</template>\n\n<script>\n\nimport Moment from 'moment'\nimport swh from '@/assets/sw_helpers.js'\n\nexport default {\n  data: function () {\n    return {\n      objs: [\n        this.$stel.getObj('NAME Sun'),\n        this.$stel.getObj('NAME Moon'),\n        this.$stel.getObj('NAME Mercury'),\n        this.$stel.getObj('NAME Venus'),\n        this.$stel.getObj('NAME Mars'),\n        this.$stel.getObj('NAME Jupiter'),\n        this.$stel.getObj('NAME Saturn')\n      ]\n    }\n  },\n  methods: {\n    formatTime: function (jdm) {\n      const d = new Date()\n      d.setMJD(jdm)\n      const utc = Moment.utc(d)\n      utc.local()\n      return utc.format('HH:mm')\n    },\n    cleanName: function (obj) {\n      return swh.cleanupOneSkySourceName(obj.designations()[0])\n    },\n    planetBackgroundStr: function (obj) {\n      const d = new Date()\n      d.setMJD(obj.computeVisibility()[0].rise)\n      const rise = Moment.utc(d)\n      rise.local()\n      d.setMJD(obj.computeVisibility()[0].set)\n      const set = Moment.utc(d)\n      set.local()\n\n      var hourToPercent = function (h) {\n        return (h >= 12) ? Math.round((h - 12) / 24 * 100) : Math.round((h + 12) / 24 * 100)\n      }\n\n      const riseP = hourToPercent(rise.hours())\n      const setP = hourToPercent(set.hours())\n      if (setP > riseP) {\n        return \"<div style='z-index: 100; position: absolute; background-color: rgb(200, 200, 50); left: \" + riseP + '%; min-width: ' + (setP - riseP) + \"%; top: 7px; height: 8px;'></div>\"\n      } else {\n        let ret = \"<div style='z-index: 100; position: absolute; background-color: rgb(200, 200, 50); left: 0%; min-width: \" + setP + \"%; top: 7px; height: 8px;'></div>\"\n        ret += \"<div style='z-index: 100; position: absolute; background-color: rgb(200, 200, 50); right: 0%; min-width: \" + (100 - riseP) + \"%; top: 7px; height: 8px;'></div>\"\n        return ret\n      }\n    }\n  },\n  computed: {\n    sunBackgroundStr: function () {\n      var sun = this.$stel.getObj('NAME Sun')\n      const brightness = []\n      const d = new Moment(this.startDate)\n\n      const obs = this.$stel.core.observer.clone()\n      for (let i = 0; i < 25; i++) {\n        obs.utc = d.toDate().getMJD()\n        d.local()\n        const azalt = this.$stel.convertFrame(obs, 'ICRF', 'OBSERVED', sun.getInfo('radec', obs))\n        const alt = this.$stel.anpm(this.$stel.c2s(azalt)[1]) * 180.0 / Math.PI\n        brightness.push(alt / (Math.PI / 2))\n        d.add(1, 'hours')\n      }\n      obs.destroy()\n\n      var txt = 'position: relative; background: linear-gradient(to right, '\n      for (let i = 0; i < 25; i++) {\n        let bi = (brightness[i] + 0.1) * 5\n        bi = bi > 1 ? 1 : bi\n        bi = bi < 0 ? 0 : bi\n        txt += 'rgb(' + Math.round(53 * bi) + ', ' + Math.round(173 * bi) + ', ' + Math.round(211 * bi) + ') ' + Math.round(i / 24 * 100) + '% '\n        if (i !== 24) {\n          txt += ','\n        }\n      }\n      txt += '); min-width: 100%; height: 100%'\n      return txt\n    },\n    startDate: function () {\n      var sun = this.$stel.getObj('NAME Sun')\n      let u = this.$store.state.stel.observer.utc\n      if (u < sun.rise) {\n        // It's still night (in the morning), display last night's planets visibility\n        u = u - 1\n      }\n      let d = new Date()\n      d.setMJD(u)\n      d = new Moment(d)\n      d.local()\n      d.hours(12)\n      d.minutes(0)\n      d.seconds(0)\n      return d\n    },\n    endDate: function () {\n      const d = new Moment(this.startDate)\n      d.add(1, 'd')\n      return d\n    }\n  }\n}\n</script>\n\n<style>\n.input-group {\n  margin: 0px;\n}\n</style>\n"]}]}