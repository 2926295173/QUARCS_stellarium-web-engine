{"remainingRequest":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/src/components/AutomaticPolarAlignmentCalibration.vue?vue&type=style&index=0&id=2fa3684a&scoped=true&lang=css&","dependencies":[{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/src/components/AutomaticPolarAlignmentCalibration.vue","mtime":1752560012829},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/css-loader/dist/cjs.js","mtime":1707125446000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1707125450000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/postcss-loader/src/index.js","mtime":1707125450000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1707125360000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/vue-loader/lib/index.js","mtime":1707125450000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoucG9sYXItYWxpZ25tZW50LWNvbnRhaW5lciB7CiAgaGVpZ2h0OiAxMDB2aDsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47CiAgYmFja2dyb3VuZDogIzFhMWExYTsKICBjb2xvcjogI2ZmZmZmZjsKICBmb250LWZhbWlseTogJ0FyaWFsJywgc2Fucy1zZXJpZjsKfQoKLmhlYWRlciB7CiAgZGlzcGxheTogZmxleDsKICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBwYWRkaW5nOiAxMHB4IDIwcHg7CiAgYmFja2dyb3VuZDogIzJhMmEyYTsKICBib3JkZXItYm90dG9tOiAycHggc29saWQgIzMzMzsKfQoKLmhlYWRlciBoMSB7CiAgbWFyZ2luOiAwOwogIGZvbnQtc2l6ZTogMS41ZW07CiAgY29sb3I6ICNmZmZmZmY7Cn0KCi5zdGF0dXMtaW5kaWNhdG9ycyB7CiAgZGlzcGxheTogZmxleDsKICBnYXA6IDIwcHg7Cn0KCi5zdGF0dXMtaXRlbSB7CiAgZGlzcGxheTogZmxleDsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIGdhcDogNXB4Owp9Cgouc3RhdHVzLWRvdCB7CiAgd2lkdGg6IDEycHg7CiAgaGVpZ2h0OiAxMnB4OwogIGJvcmRlci1yYWRpdXM6IDUwJTsKICBiYWNrZ3JvdW5kOiAjZmY0NDQ0OwogIHRyYW5zaXRpb246IGJhY2tncm91bmQgMC4zczsKfQoKLnN0YXR1cy1pdGVtLmNvbm5lY3RlZCAuc3RhdHVzLWRvdCB7CiAgYmFja2dyb3VuZDogIzQ0ZmY0NDsKfQoKLm1haW4tY29udGVudCB7CiAgZmxleDogMTsKICBkaXNwbGF5OiBmbGV4OwogIG1pbi1oZWlnaHQ6IDA7Cn0KCi52aWV3LWZpZWxkLWNvbnRhaW5lciB7CiAgZmxleDogMjsKICBiYWNrZ3JvdW5kOiAjMGEwYTBhOwogIGJvcmRlci1yaWdodDogMnB4IHNvbGlkICMzMzM7CiAgcG9zaXRpb246IHJlbGF0aXZlOwp9Cgoudmlldy1maWVsZCB7CiAgd2lkdGg6IDEwMCU7CiAgaGVpZ2h0OiAxMDAlOwogIHBvc2l0aW9uOiByZWxhdGl2ZTsKfQoKLmZpZWxkLXN2ZyB7CiAgd2lkdGg6IDEwMCU7CiAgaGVpZ2h0OiAxMDAlOwogIGJhY2tncm91bmQ6ICMxMTE7Cn0KCi5kaXJlY3Rpb24tYXJyb3cgewogIGFuaW1hdGlvbjogcHVsc2UgMnMgaW5maW5pdGU7Cn0KCkBrZXlmcmFtZXMgcHVsc2UgewogIDAlLCAxMDAlIHsgb3BhY2l0eTogMTsgfQogIDUwJSB7IG9wYWNpdHk6IDAuNjsgfQp9CgouY29udHJvbC1wYW5lbCB7CiAgZmxleDogMTsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47CiAgYmFja2dyb3VuZDogIzJhMmEyYTsKICBtaW4td2lkdGg6IDMwMHB4Owp9CgouaW5mby1zZWN0aW9uIHsKICBmbGV4OiAxOwogIHBhZGRpbmc6IDIwcHg7CiAgb3ZlcmZsb3cteTogYXV0bzsKfQoKLmluZm8tc2VjdGlvbiBoMyB7CiAgbWFyZ2luLXRvcDogMDsKICBjb2xvcjogI2ZmZmZmZjsKICBib3JkZXItYm90dG9tOiAxcHggc29saWQgIzQ0NDsKICBwYWRkaW5nLWJvdHRvbTogMTBweDsKfQoKLmNvb3JkaW5hdGUtaW5mbyB7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKLmNvb3JkLXJvdyB7CiAgZGlzcGxheTogZmxleDsKICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47CiAgbWFyZ2luLWJvdHRvbTogOHB4OwogIHBhZGRpbmc6IDVweCAwOwp9CgoubGFiZWwgewogIGNvbG9yOiAjY2NjY2NjOwogIGZvbnQtd2VpZ2h0OiBib2xkOwp9CgoudmFsdWUgewogIGNvbG9yOiAjZmZmZmZmOwogIGZvbnQtZmFtaWx5OiBtb25vc3BhY2U7Cn0KCi5wcm9ncmVzcy1zZWN0aW9uIHsKICBtYXJnaW4tYm90dG9tOiAyMHB4Owp9CgoucHJvZ3Jlc3Mtc2VjdGlvbiBoNCB7CiAgbWFyZ2luOiAwIDAgMTBweCAwOwogIGNvbG9yOiAjZmZmZmZmOwp9CgoucHJvZ3Jlc3MtYmFyIHsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgaGVpZ2h0OiAyNXB4OwogIGJhY2tncm91bmQ6ICM0NDQ7CiAgYm9yZGVyLXJhZGl1czogMTJweDsKICBvdmVyZmxvdzogaGlkZGVuOwogIG1hcmdpbi1ib3R0b206IDEwcHg7Cn0KCi5wcm9ncmVzcy1maWxsIHsKICBoZWlnaHQ6IDEwMCU7CiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDkwZGVnLCAjMDBhYTAwLCAjMDBmZjAwKTsKICB0cmFuc2l0aW9uOiB3aWR0aCAwLjNzOwp9CgoucHJvZ3Jlc3MtdGV4dCB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHRvcDogNTAlOwogIGxlZnQ6IDUwJTsKICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTsKICBjb2xvcjogI2ZmZmZmZjsKICBmb250LXdlaWdodDogYm9sZDsKICBmb250LXNpemU6IDAuOWVtOwp9CgoucHJvZ3Jlc3Mtc3RhdHVzIHsKICBjb2xvcjogI2NjY2NjYzsKICBmb250LXN0eWxlOiBpdGFsaWM7Cn0KCi5sb2ctc2VjdGlvbiB7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKLmxvZy1zZWN0aW9uIGg0IHsKICBtYXJnaW46IDAgMCAxMHB4IDA7CiAgY29sb3I6ICNmZmZmZmY7Cn0KCi5sb2ctY29udGFpbmVyIHsKICBoZWlnaHQ6IDE1MHB4OwogIG92ZXJmbG93LXk6IGF1dG87CiAgYmFja2dyb3VuZDogIzExMTsKICBib3JkZXI6IDFweCBzb2xpZCAjNDQ0OwogIGJvcmRlci1yYWRpdXM6IDVweDsKICBwYWRkaW5nOiAxMHB4Owp9CgoubG9nLWVudHJ5IHsKICBkaXNwbGF5OiBmbGV4OwogIG1hcmdpbi1ib3R0b206IDVweDsKICBmb250LXNpemU6IDAuOWVtOwp9CgoubG9nLWVudHJ5LmluZm8gewogIGNvbG9yOiAjY2NjY2NjOwp9CgoubG9nLWVudHJ5LnN1Y2Nlc3MgewogIGNvbG9yOiAjNDRmZjQ0Owp9CgoubG9nLWVudHJ5Lndhcm5pbmcgewogIGNvbG9yOiAjZmZhYTAwOwp9CgoubG9nLWVudHJ5LmVycm9yIHsKICBjb2xvcjogI2ZmNDQ0NDsKfQoKLmxvZy10aW1lIHsKICBjb2xvcjogIzg4ODsKICBtYXJnaW4tcmlnaHQ6IDEwcHg7CiAgbWluLXdpZHRoOiA4MHB4Owp9CgoubG9nLW1lc3NhZ2UgewogIGZsZXg6IDE7Cn0KCi5jb250cm9sLWJ1dHRvbnMgewogIHBhZGRpbmc6IDIwcHg7CiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICM0NDQ7CiAgZGlzcGxheTogZmxleDsKICBnYXA6IDEwcHg7Cn0KCi5idG4gewogIGZsZXg6IDE7CiAgcGFkZGluZzogMTJweCAyMHB4OwogIGJvcmRlcjogbm9uZTsKICBib3JkZXItcmFkaXVzOiA1cHg7CiAgZm9udC1zaXplOiAxZW07CiAgY3Vyc29yOiBwb2ludGVyOwogIHRyYW5zaXRpb246IGFsbCAwLjNzOwp9CgouYnRuOmRpc2FibGVkIHsKICBvcGFjaXR5OiAwLjU7CiAgY3Vyc29yOiBub3QtYWxsb3dlZDsKfQoKLmJ0bi1wcmltYXJ5IHsKICBiYWNrZ3JvdW5kOiAjMDA3YWNjOwogIGNvbG9yOiAjZmZmZmZmOwp9CgouYnRuLXByaW1hcnk6aG92ZXI6bm90KDpkaXNhYmxlZCkgewogIGJhY2tncm91bmQ6ICMwMDk5ZmY7Cn0KCi5idG4tc2Vjb25kYXJ5IHsKICBiYWNrZ3JvdW5kOiAjNjY2OwogIGNvbG9yOiAjZmZmZmZmOwp9CgouYnRuLXNlY29uZGFyeTpob3Zlcjpub3QoOmRpc2FibGVkKSB7CiAgYmFja2dyb3VuZDogIzg4ODsKfQoKLyog5ZON5bqU5byP6K6+6K6hICovCkBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHsKICAubWFpbi1jb250ZW50IHsKICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47CiAgfQogIAogIC52aWV3LWZpZWxkLWNvbnRhaW5lciB7CiAgICBmbGV4OiAxOwogICAgYm9yZGVyLXJpZ2h0OiBub25lOwogICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICMzMzM7CiAgfQogIAogIC5jb250cm9sLXBhbmVsIHsKICAgIG1pbi13aWR0aDogdW5zZXQ7CiAgICBtYXgtaGVpZ2h0OiA0MDBweDsKICB9Cn0KCkBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkgewogIC5oZWFkZXIgewogICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICAgIGdhcDogMTBweDsKICB9CiAgCiAgLnN0YXR1cy1pbmRpY2F0b3JzIHsKICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47CiAgICBnYXA6IDEwcHg7CiAgfQogIAogIC5jb250cm9sLWJ1dHRvbnMgewogICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICB9CiAgCiAgLmxvZy1jb250YWluZXIgewogICAgaGVpZ2h0OiAxMDBweDsKICB9Cn0K"},{"version":3,"sources":["AutomaticPolarAlignmentCalibration.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"AutomaticPolarAlignmentCalibration.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"polar-alignment-container\">\n    <!-- 顶部标题栏 -->\n    <div class=\"header\">\n      <h1>{{ $t('Automatic Polar Alignment Calibration') }}</h1>\n      <div class=\"status-indicators\">\n        <div class=\"status-item\" :class=\"{ connected: mountConnected }\">\n          <span class=\"status-dot\"></span>\n          <span>{{ $t('Mount') }}: {{ mountConnected ? $t('Connected') : $t('Disconnected') }}</span>\n        </div>\n        <div class=\"status-item\" :class=\"{ connected: cameraConnected }\">\n          <span class=\"status-dot\"></span>\n          <span>{{ $t('Main Camera') }}: {{ cameraConnected ? $t('Connected') : $t('Disconnected') }}</span>\n        </div>\n      </div>\n    </div>\n\n    <!-- 主要内容区域 -->\n    <div class=\"main-content\">\n      <!-- 左侧视场图 -->\n      <div class=\"view-field-container\">\n        <div class=\"view-field\" ref=\"viewField\">\n          <svg class=\"field-svg\" :width=\"fieldWidth\" :height=\"fieldHeight\">\n            <!-- 背景网格 -->\n            <defs>\n              <pattern id=\"grid\" width=\"20\" height=\"20\" patternUnits=\"userSpaceOnUse\">\n                <path d=\"M 20 0 L 0 0 0 20\" fill=\"none\" stroke=\"#333\" stroke-width=\"1\"/>\n              </pattern>\n            </defs>\n            <rect width=\"100%\" height=\"100%\" fill=\"url(#grid)\" />\n            \n            <!-- 极点目标 -->\n            <circle \n              :cx=\"polarTarget.x\" \n              :cy=\"polarTarget.y\" \n              r=\"8\" \n              fill=\"none\" \n              stroke=\"#ff0000\" \n              stroke-width=\"2\"\n            />\n            <circle \n              :cx=\"polarTarget.x\" \n              :cy=\"polarTarget.y\" \n              r=\"2\" \n              fill=\"#ff0000\"\n            />\n            \n            <!-- 星点（根据赤经赤纬绘制） -->\n            <circle\n              v-for=\"(star, index) in starPoints\"\n              :key=\"index\"\n              :cx=\"star.x\"\n              :cy=\"star.y\"\n              r=\"3\"\n              fill=\"#ffff00\"\n              :stroke=\"star.isReference ? '#00ff00' : 'none'\"\n              :stroke-width=\"star.isReference ? 2 : 0\"\n            />\n            \n            <!-- 方向箭头 -->\n            <g v-if=\"showDirectionArrow\">\n              <path \n                :d=\"arrowPath\" \n                fill=\"#00ff00\" \n                stroke=\"#00ff00\" \n                stroke-width=\"2\"\n                class=\"direction-arrow\"\n              />\n            </g>\n            \n            <!-- 视场边界框 -->\n            <rect \n              :x=\"viewFieldBounds.x\" \n              :y=\"viewFieldBounds.y\" \n              :width=\"viewFieldBounds.width\" \n              :height=\"viewFieldBounds.height\"\n              fill=\"none\" \n              stroke=\"#0088ff\" \n              stroke-width=\"2\"\n              stroke-dasharray=\"5,5\"\n            />\n          </svg>\n        </div>\n      </div>\n\n      <!-- 右侧控制面板 -->\n      <div class=\"control-panel\">\n        <!-- 信息显示区域 -->\n        <div class=\"info-section\">\n          <h3>{{ $t('Alignment Information') }}</h3>\n          \n          <!-- 坐标信息 -->\n          <div class=\"coordinate-info\">\n            <div class=\"coord-row\">\n              <span class=\"label\">{{ $t('Current RA/DEC') }}:</span>\n              <span class=\"value\">{{ formatCoordinate(currentRA) }} / {{ formatCoordinate(currentDEC) }}</span>\n            </div>\n            <div class=\"coord-row\">\n              <span class=\"label\">{{ $t('Target RA/DEC') }}:</span>\n              <span class=\"value\">{{ formatCoordinate(targetRA) }} / {{ formatCoordinate(targetDEC) }}</span>\n            </div>\n            <div class=\"coord-row\">\n              <span class=\"label\">{{ $t('Adjustment Angle') }}:</span>\n              <span class=\"value\">{{ adjustmentAngle.toFixed(2) }}°</span>\n            </div>\n          </div>\n\n          <!-- 进度显示 -->\n          <div class=\"progress-section\">\n            <h4>{{ $t('Calibration Progress') }}</h4>\n            <div class=\"progress-bar\">\n              <div class=\"progress-fill\" :style=\"{ width: progress + '%' }\"></div>\n              <span class=\"progress-text\">{{ progress }}%</span>\n            </div>\n            <div class=\"progress-status\">{{ progressStatus }}</div>\n          </div>\n\n          <!-- 日志显示 -->\n          <div class=\"log-section\">\n            <h4>{{ $t('Calibration Log') }}</h4>\n            <div class=\"log-container\" ref=\"logContainer\">\n              <div \n                v-for=\"(log, index) in logs\" \n                :key=\"index\"\n                class=\"log-entry\"\n                :class=\"log.type\"\n              >\n                <span class=\"log-time\">{{ formatTime(log.time) }}</span>\n                <span class=\"log-message\">{{ log.message }}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- 控制按钮 -->\n        <div class=\"control-buttons\">\n          <button \n            class=\"btn btn-primary\" \n            :disabled=\"!canStartCalibration\"\n            @click=\"startCalibration\"\n          >\n            {{ isCalibrating ? $t('Stop Calibration') : $t('Start Auto Calibration') }}\n          </button>\n          <button \n            class=\"btn btn-secondary\" \n            :disabled=\"isCalibrating\"\n            @click=\"resetCalibration\"\n          >\n            {{ $t('Reset Polar Alignment') }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, computed, onMounted, onUnmounted, nextTick } from 'vue'\n\nexport default {\n  name: 'AutomaticPolarAlignmentCalibration',\n  setup() {\n    // 响应式数据\n    const mountConnected = ref(true)\n    const cameraConnected = ref(true)\n    const isCalibrating = ref(false)\n    const progress = ref(0)\n    const progressStatus = ref('Ready to start calibration')\n    \n    // 视场相关\n    const viewField = ref(null)\n    const fieldWidth = ref(400)\n    const fieldHeight = ref(300)\n    \n    // 坐标数据\n    const currentRA = ref(0.0)\n    const currentDEC = ref(89.5)\n    const targetRA = ref(0.0)\n    const targetDEC = ref(90.0)\n    const adjustmentAngle = ref(0.5)\n    \n    // 极点目标位置\n    const polarTarget = reactive({\n      x: 200,\n      y: 150\n    })\n    \n    // 星点数据\n    const starPoints = ref([\n      { x: 180, y: 130, ra: 23.5, dec: 89.2, isReference: false },\n      { x: 220, y: 170, ra: 0.2, dec: 89.8, isReference: true },\n      { x: 160, y: 180, ra: 12.1, dec: 89.1, isReference: false },\n      { x: 240, y: 120, ra: 6.3, dec: 89.6, isReference: false }\n    ])\n    \n    // 视场边界\n    const viewFieldBounds = reactive({\n      x: 50,\n      y: 50,\n      width: 300,\n      height: 200\n    })\n    \n    // 方向箭头\n    const showDirectionArrow = ref(true)\n    const arrowDirection = ref(45) // 角度\n    \n    // 日志\n    const logs = ref([\n      { time: new Date(), type: 'info', message: 'Polar alignment calibration initialized' },\n      { time: new Date(), type: 'info', message: 'Mount and camera connection verified' }\n    ])\n    \n    // 计算属性\n    const canStartCalibration = computed(() => {\n      return mountConnected.value && cameraConnected.value && !isCalibrating.value\n    })\n    \n    const arrowPath = computed(() => {\n      const centerX = polarTarget.x\n      const centerY = polarTarget.y\n      const radius = 30\n      const angle = (arrowDirection.value * Math.PI) / 180\n      \n      const tipX = centerX + radius * Math.cos(angle)\n      const tipY = centerY + radius * Math.sin(angle)\n      \n      const baseX = centerX + (radius - 15) * Math.cos(angle)\n      const baseY = centerY + (radius - 15) * Math.sin(angle)\n      \n      const leftX = baseX + 8 * Math.cos(angle + Math.PI / 2)\n      const leftY = baseY + 8 * Math.sin(angle + Math.PI / 2)\n      \n      const rightX = baseX + 8 * Math.cos(angle - Math.PI / 2)\n      const rightY = baseY + 8 * Math.sin(angle - Math.PI / 2)\n      \n      return `M ${tipX} ${tipY} L ${leftX} ${leftY} L ${rightX} ${rightY} Z`\n    })\n    \n    // 方法\n    const formatCoordinate = (value) => {\n      const hours = Math.floor(value)\n      const minutes = Math.floor((value - hours) * 60)\n      const seconds = Math.floor(((value - hours) * 60 - minutes) * 60)\n      return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`\n    }\n    \n    const formatTime = (date) => {\n      return date.toLocaleTimeString()\n    }\n    \n    const addLog = (type, message) => {\n      logs.value.push({\n        time: new Date(),\n        type,\n        message\n      })\n      \n      // 自动滚动到底部\n      nextTick(() => {\n        const logContainer = document.querySelector('.log-container')\n        if (logContainer) {\n          logContainer.scrollTop = logContainer.scrollHeight\n        }\n      })\n    }\n    \n    const startCalibration = () => {\n      if (isCalibrating.value) {\n        // 停止校准\n        isCalibrating.value = false\n        progressStatus.value = 'Calibration stopped'\n        addLog('warning', 'Calibration stopped by user')\n        return\n      }\n      \n      // 开始校准\n      isCalibrating.value = true\n      progress.value = 0\n      progressStatus.value = 'Starting calibration...'\n      addLog('info', 'Starting automatic polar alignment calibration')\n      \n      // 模拟校准过程\n      simulateCalibration()\n    }\n    \n    const resetCalibration = () => {\n      progress.value = 0\n      progressStatus.value = 'Ready to start calibration'\n      adjustmentAngle.value = 0.5\n      addLog('info', 'Polar alignment calibration reset')\n    }\n    \n    const simulateCalibration = () => {\n      const interval = setInterval(() => {\n        if (!isCalibrating.value) {\n          clearInterval(interval)\n          return\n        }\n        \n        progress.value += 10\n        \n        if (progress.value <= 20) {\n          progressStatus.value = 'Capturing reference image...'\n          addLog('info', 'Capturing reference image')\n        } else if (progress.value <= 40) {\n          progressStatus.value = 'Analyzing star positions...'\n          addLog('info', 'Analyzing star field')\n        } else if (progress.value <= 60) {\n          progressStatus.value = 'Calculating polar alignment error...'\n          addLog('info', 'Calculating alignment error')\n        } else if (progress.value <= 80) {\n          progressStatus.value = 'Adjusting mount position...'\n          addLog('info', 'Adjusting mount orientation')\n          // 更新箭头方向\n          arrowDirection.value = (arrowDirection.value + 15) % 360\n        } else if (progress.value <= 100) {\n          progressStatus.value = 'Verifying alignment...'\n          addLog('info', 'Verifying polar alignment')\n        }\n        \n        if (progress.value >= 100) {\n          clearInterval(interval)\n          isCalibrating.value = false\n          progressStatus.value = 'Calibration completed successfully'\n          addLog('success', 'Polar alignment calibration completed')\n          adjustmentAngle.value = 0.05\n        }\n      }, 800)\n    }\n    \n    // 响应式调整视场大小\n    const updateFieldSize = () => {\n      if (viewField.value) {\n        const container = viewField.value.parentElement\n        fieldWidth.value = container.clientWidth\n        fieldHeight.value = container.clientHeight\n        \n        // 更新极点位置到中心\n        polarTarget.x = fieldWidth.value / 2\n        polarTarget.y = fieldHeight.value / 2\n        \n        // 更新视场边界\n        viewFieldBounds.width = fieldWidth.value * 0.8\n        viewFieldBounds.height = fieldHeight.value * 0.8\n        viewFieldBounds.x = (fieldWidth.value - viewFieldBounds.width) / 2\n        viewFieldBounds.y = (fieldHeight.value - viewFieldBounds.height) / 2\n      }\n    }\n    \n    // 生命周期\n    onMounted(() => {\n      updateFieldSize()\n      window.addEventListener('resize', updateFieldSize)\n      \n      // 模拟箭头动画\n      const animateArrow = () => {\n        arrowDirection.value = (arrowDirection.value + 1) % 360\n        setTimeout(animateArrow, 100)\n      }\n      animateArrow()\n    })\n    \n    onUnmounted(() => {\n      window.removeEventListener('resize', updateFieldSize)\n    })\n    \n    return {\n      // 数据\n      mountConnected,\n      cameraConnected,\n      isCalibrating,\n      progress,\n      progressStatus,\n      viewField,\n      fieldWidth,\n      fieldHeight,\n      currentRA,\n      currentDEC,\n      targetRA,\n      targetDEC,\n      adjustmentAngle,\n      polarTarget,\n      starPoints,\n      viewFieldBounds,\n      showDirectionArrow,\n      arrowDirection,\n      logs,\n      \n      // 计算属性\n      canStartCalibration,\n      arrowPath,\n      \n      // 方法\n      formatCoordinate,\n      formatTime,\n      startCalibration,\n      resetCalibration\n    }\n  }\n}\n</script>\n\n<style scoped>\n.polar-alignment-container {\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  background: #1a1a1a;\n  color: #ffffff;\n  font-family: 'Arial', sans-serif;\n}\n\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px 20px;\n  background: #2a2a2a;\n  border-bottom: 2px solid #333;\n}\n\n.header h1 {\n  margin: 0;\n  font-size: 1.5em;\n  color: #ffffff;\n}\n\n.status-indicators {\n  display: flex;\n  gap: 20px;\n}\n\n.status-item {\n  display: flex;\n  align-items: center;\n  gap: 5px;\n}\n\n.status-dot {\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background: #ff4444;\n  transition: background 0.3s;\n}\n\n.status-item.connected .status-dot {\n  background: #44ff44;\n}\n\n.main-content {\n  flex: 1;\n  display: flex;\n  min-height: 0;\n}\n\n.view-field-container {\n  flex: 2;\n  background: #0a0a0a;\n  border-right: 2px solid #333;\n  position: relative;\n}\n\n.view-field {\n  width: 100%;\n  height: 100%;\n  position: relative;\n}\n\n.field-svg {\n  width: 100%;\n  height: 100%;\n  background: #111;\n}\n\n.direction-arrow {\n  animation: pulse 2s infinite;\n}\n\n@keyframes pulse {\n  0%, 100% { opacity: 1; }\n  50% { opacity: 0.6; }\n}\n\n.control-panel {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  background: #2a2a2a;\n  min-width: 300px;\n}\n\n.info-section {\n  flex: 1;\n  padding: 20px;\n  overflow-y: auto;\n}\n\n.info-section h3 {\n  margin-top: 0;\n  color: #ffffff;\n  border-bottom: 1px solid #444;\n  padding-bottom: 10px;\n}\n\n.coordinate-info {\n  margin-bottom: 20px;\n}\n\n.coord-row {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 8px;\n  padding: 5px 0;\n}\n\n.label {\n  color: #cccccc;\n  font-weight: bold;\n}\n\n.value {\n  color: #ffffff;\n  font-family: monospace;\n}\n\n.progress-section {\n  margin-bottom: 20px;\n}\n\n.progress-section h4 {\n  margin: 0 0 10px 0;\n  color: #ffffff;\n}\n\n.progress-bar {\n  position: relative;\n  height: 25px;\n  background: #444;\n  border-radius: 12px;\n  overflow: hidden;\n  margin-bottom: 10px;\n}\n\n.progress-fill {\n  height: 100%;\n  background: linear-gradient(90deg, #00aa00, #00ff00);\n  transition: width 0.3s;\n}\n\n.progress-text {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  color: #ffffff;\n  font-weight: bold;\n  font-size: 0.9em;\n}\n\n.progress-status {\n  color: #cccccc;\n  font-style: italic;\n}\n\n.log-section {\n  margin-bottom: 20px;\n}\n\n.log-section h4 {\n  margin: 0 0 10px 0;\n  color: #ffffff;\n}\n\n.log-container {\n  height: 150px;\n  overflow-y: auto;\n  background: #111;\n  border: 1px solid #444;\n  border-radius: 5px;\n  padding: 10px;\n}\n\n.log-entry {\n  display: flex;\n  margin-bottom: 5px;\n  font-size: 0.9em;\n}\n\n.log-entry.info {\n  color: #cccccc;\n}\n\n.log-entry.success {\n  color: #44ff44;\n}\n\n.log-entry.warning {\n  color: #ffaa00;\n}\n\n.log-entry.error {\n  color: #ff4444;\n}\n\n.log-time {\n  color: #888;\n  margin-right: 10px;\n  min-width: 80px;\n}\n\n.log-message {\n  flex: 1;\n}\n\n.control-buttons {\n  padding: 20px;\n  border-top: 1px solid #444;\n  display: flex;\n  gap: 10px;\n}\n\n.btn {\n  flex: 1;\n  padding: 12px 20px;\n  border: none;\n  border-radius: 5px;\n  font-size: 1em;\n  cursor: pointer;\n  transition: all 0.3s;\n}\n\n.btn:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.btn-primary {\n  background: #007acc;\n  color: #ffffff;\n}\n\n.btn-primary:hover:not(:disabled) {\n  background: #0099ff;\n}\n\n.btn-secondary {\n  background: #666;\n  color: #ffffff;\n}\n\n.btn-secondary:hover:not(:disabled) {\n  background: #888;\n}\n\n/* 响应式设计 */\n@media (max-width: 1024px) {\n  .main-content {\n    flex-direction: column;\n  }\n  \n  .view-field-container {\n    flex: 1;\n    border-right: none;\n    border-bottom: 2px solid #333;\n  }\n  \n  .control-panel {\n    min-width: unset;\n    max-height: 400px;\n  }\n}\n\n@media (max-width: 768px) {\n  .header {\n    flex-direction: column;\n    gap: 10px;\n  }\n  \n  .status-indicators {\n    flex-direction: column;\n    gap: 10px;\n  }\n  \n  .control-buttons {\n    flex-direction: column;\n  }\n  \n  .log-container {\n    height: 100px;\n  }\n}\n</style>\n"]}]}