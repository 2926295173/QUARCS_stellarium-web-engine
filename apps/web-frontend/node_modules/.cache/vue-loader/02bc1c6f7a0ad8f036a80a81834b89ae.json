{"remainingRequest":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/src/components/Chart-FocusImage.vue?vue&type=style&index=0&id=bf71832e&scoped=true&lang=css&","dependencies":[{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/src/components/Chart-FocusImage.vue","mtime":1757990010219},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/css-loader/dist/cjs.js","mtime":1756885033612},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1756885034208},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/postcss-loader/src/index.js","mtime":1756885034000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1756885033541},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/vue-loader/lib/index.js","mtime":1756885034208}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouaWFtZ2VjaGFydC1wYW5lbCB7CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjApOwogIGJhY2tkcm9wLWZpbHRlcjogYmx1cig1cHgpOwogIGJvcmRlci1yYWRpdXM6IDVweDsKICBib3gtc2l6aW5nOiBib3JkZXItYm94Owp9Cg=="},{"version":3,"sources":["Chart-FocusImage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwJA;AACA;AACA;AACA;AACA;AACA","file":"Chart-FocusImage.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <div ref=\"imagechart\" style=\"width: 80px; height: 80px;\" class=\"imagechart-panel\"></div>\n  </div>\n</template>\n\n<script>\nimport * as echarts from 'echarts';\n\nexport default {\n  name: 'ImageChart',\n  data() {\n    return {\n      chartData: [],\n      chartData_new: [],\n      xAxis_min: -4,\n      xAxis_max: 4, \n      yAxis_min: -4,\n      yAxis_max: 4, \n      range: 4,\n    };\n  },\n  mounted() {\n    this.initChart();\n  },\n  created() {\n    // this.$bus.$on('AddScatterChartData', this.addData);\n    // this.$bus.$on('clearChartData', this.clearChartData);\n    // this.$bus.$on('ChartRangeSwitch', this.RangeSwitch);\n  },\n  methods: {\n    initChart() {\n      const chartDom = this.$refs.imagechart;\n      this.myChart = echarts.init(chartDom);\n\n      this.renderChart(this.xAxis_min, this.xAxis_max, this.yAxis_min, this.yAxis_max);\n    },\n    renderChart(x_min,x_max,y_min,y_max) {\n      const option = {\n        grid: {  // 设置 grid 以使其占满容器\n          left: '0%',\n          right: '10%',\n          bottom: '0%',\n          top: '10%',\n          containLabel: true\n        },\n        xAxis: {\n          min: x_min,\n          max: x_max,\n          axisLine: {\n            lineStyle: {\n              color: 'rgba(200, 200, 200, 0.0)'  // x轴线颜色\n            }\n          },\n          axisLabel: {\n            color: 'white', \n            fontSize: 5\n          },\n          splitNumber: 1,\n          splitLine: {\n            show: true, // 显示分隔线\n            lineStyle: {\n              color: 'rgba(128, 128, 128, 0.5)', // 设置分隔线颜色\n              width: 1, // 设置分隔线宽度\n              type: 'solid' // 设置分隔线样式\n            }\n          }\n        },\n        yAxis: {\n          min: y_min,\n          max: y_max,\n          axisLine: {\n            lineStyle: {\n              color: 'rgba(200, 200, 200, 0.0)'  // y轴线颜色\n            }\n          },\n          axisLabel: {\n            color: 'white', \n            fontSize: 5\n          },\n          splitNumber: 1,\n          splitLine: {\n            show: true, // 显示分隔线\n            lineStyle: {\n              color: 'rgba(128, 128, 128, 0.5)', // 设置分隔线颜色\n              width: 1, // 设置分隔线宽度\n              type: 'solid' // 设置分隔线样式\n            }\n          }\n        },\n        series: [{\n          type: 'scatter',\n          data: this.chartData,\n          itemStyle: {\n            color: 'green'\n          },\n          symbolSize: 3\n        },\n        {\n          type: 'scatter',\n          data: this.chartData_new,\n          itemStyle: {\n              color: 'red'\n          },\n          symbolSize: 4\n        }\n        ]\n      };\n      this.myChart.setOption(option);\n    },\n    // addData(newDataPoint) {\n    //   // 将新数据点添加到数据数组中\n    //   this.chartData.push(newDataPoint);\n    //   this.chartData_new = [];\n    //   this.chartData_new.push(newDataPoint);\n\n    //   // 更新图表\n    //   this.renderChart(this.xAxis_min, this.xAxis_max, this.yAxis_min, this.yAxis_max);\n    // },\n    // clearChartData() {\n    //   this.chartData = [];\n    //   this.chartData_new = [];\n    //   this.renderChart(this.xAxis_min, this.xAxis_max, this.yAxis_min, this.yAxis_max);\n    // },\n    RangeSwitch() {\n      if(this.range === 4) {\n        this.range = 2;\n        this.xAxis_min = -2;\n        this.xAxis_max = 2;\n        this.yAxis_min = -2;\n        this.yAxis_max = 2;\n      }else if(this.range === 2) {\n        this.range = 1;\n        this.xAxis_min = -1;\n        this.xAxis_max = 1;\n        this.yAxis_min = -1;\n        this.yAxis_max = 1;\n      }else if(this.range === 1) {\n        this.range = 4;\n        this.xAxis_min = -4;\n        this.xAxis_max = 4;\n        this.yAxis_min = -4;\n        this.yAxis_max = 4;\n      }\n\n      this.renderChart(this.xAxis_min, this.xAxis_max, this.yAxis_min, this.yAxis_max);\n    }\n  }\n}\n</script>\n\n<style scoped>\n.iamgechart-panel {\n  background-color: rgba(0, 0, 0, 0.0);\n  backdrop-filter: blur(5px);\n  border-radius: 5px;\n  box-sizing: border-box;\n}\n</style>\n\n"]}]}