{"remainingRequest":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/src/components/toolbar.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/src/components/toolbar.vue","mtime":1756703882515},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/css-loader/dist/cjs.js","mtime":1707125446000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1707125450000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/postcss-loader/src/index.js","mtime":1707125450000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1707125360000},{"path":"/home/quarcs/workspace/QUARCS/QUARCS_stellarium-web-engine/apps/web-frontend/node_modules/vue-loader/lib/index.js","mtime":1707125450000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKI3Rvb2xiYXItaW1hZ2UgewogIGJhY2tncm91bmQ6IHVybCgiLi4vYXNzZXRzL2ltYWdlcy9oZWFkZXIucG5nIikgY2VudGVyOwogIGJhY2tncm91bmQtcG9zaXRpb24teDogNTVweDsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uLXk6IDBweDsKICBoZWlnaHQ6IDQwcHg7CiAgei1pbmRleDogMTsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgdG9wOiAwcHg7CiAgbGVmdDogMHB4OwogIHdpZHRoOiAxMDAlOwogIGJhY2tkcm9wLWZpbHRlcjogYmx1cig1cHgpOwogIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4xKTsKfQoKI3N0ZWxsYXJpdW0td2ViLXRvb2xiYXItbG9nbyB7CiAgbWFyZ2luLXJpZ2h0OiAxMHB4OwogIG1hcmdpbi1sZWZ0OiAyMHB4Owp9CgpAbWVkaWEgYWxsIGFuZCAobWF4LXdpZHRoOiA2MDBweCkgewogIC50bWVudWJ0IHsKICAgIG1pbi13aWR0aDogMzBweDsKICB9Cn0KCi50YnRpdGxlIHsKICBmb250LXNpemU6IDIwcHg7CiAgZm9udC13ZWlnaHQ6IDUwMDsKICB1c2VyLXNlbGVjdDogbm9uZTsKfQoKLnRidGl0bGVfIHsKICBmb250LXNpemU6IDMwcHg7CiAgZm9udC13ZWlnaHQ6IDUwMDsKICB1c2VyLXNlbGVjdDogbm9uZTsKfQoKLlRpbWVyUGlja0J0biB7CiAgcGFkZGluZzogMC4ycmVtIDAuNnJlbTsKICBjb2xvcjogd2hpdGU7CiAgY3Vyc29yOiBwb2ludGVyOwoKICBmb250LXNpemU6IDE0cHg7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIHVzZXItc2VsZWN0OiBub25lOwp9CgouU2NoZWR1bGVCdG4gewogICAgY29sb3I6IHdoaXRlOwogICAgY3Vyc29yOiBwb2ludGVyOwoKICAgIGZvbnQtc2l6ZTogeC1sYXJnZTsKICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgIGxpbmUtaGVpZ2h0OiAzNXB4OwoKICAgIHdpZHRoOiAzNXB4OwogICAgaGVpZ2h0OiAzNXB4OwogICAgCiAgICB1c2VyLXNlbGVjdDogbm9uZTsKICAgIC8qIGJhY2tkcm9wLWZpbHRlcjogYmx1cig1cHgpOyAqLwogICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjApOwogICAgYm9yZGVyLXJhZGl1czogMTBweDsKCiAgICAvKiBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOCk7ICovCn0KCi5DYXJkLVN0YXR1cyB7CiAgcG9zaXRpb246IHJlbGF0aXZlOwogIG1hcmdpbjogNXB4OyAKICBib3JkZXItcmFkaXVzOiA1cHg7IAogIGhlaWdodDogMzBweDsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMSk7Cn0KCi5pY29uLWNvbnRhaW5lciAuZ3JlZW4taWNvbiB7CiAgY29sb3I6IHJnYmEoNTEsIDIxOCwgMTIxLCAwLjcpOwp9CgouaWNvbi1jb250YWluZXIgLnJlZC1pY29uIHsKICBjb2xvcjogcmdiYSgyNTAsIDAsIDAsIDAuNSk7Cn0KCg=="},{"version":3,"sources":["toolbar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+bA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"toolbar.vue","sourceRoot":"src/components","sourcesContent":["// Stellarium Web - Copyright (c) 2022 - Stellarium Labs SRL\n//\n// This program is licensed under the terms of the GNU AGPL v3, or\n// alternatively under a commercial licence.\n//\n// The terms of the AGPL v3 license can be found in the main directory of this\n// repository.\n\n<template>\n  <div id=\"toolbar-image\">\n    <v-toolbar height=\"40px\" elevation=\"0\" class=\"transparent\" dense>\n      <v-app-bar-nav-icon @click=\"toggleNavigationDrawer\"></v-app-bar-nav-icon>\n      <img class=\"tbtitle hidden-xs-only\" id=\"stellarium-web-toolbar-logo\" src=\"@/assets/images/logo.svg\" width=\"33\" height=\"33\"  style=\"pointer-events: none;\" alt=\"Stellarium Web Logo\"/>\n      <span class=\"tbtitle hidden-xs-only\">Q U A R C S</span>\n      <v-spacer></v-spacer>\n      <target-search v-show=\"isTargetSearchShow\" style=\"width: 20%;\"></target-search>\n      <v-spacer></v-spacer>\n      <div>\n        <div class=\"subheader text-subtitle-2 pr-2\" style=\"user-select: none;\">\n          CPU T {{ cpuTemp !== null ? cpuTemp + '°C' : '--' }} <!-- 添加单位，并只在 cpuTemp 为 null 时显示 '--' -->\n        </div>\n        <div class=\"subheader text-subtitle-2 pr-2\" style=\"user-select: none;\">\n          CPU U {{ cpuUsage !== null ? cpuUsage + '%' : '--' }} <!-- 添加单位，并只在 cpuUsage 为 null 时显示 '--' -->\n        </div>\n      </div>\n      <div>\n        <div v-if=\"$store.state.showFPS\" class=\"subheader text-subtitle-2 pr-2\" style=\"user-select: none;\">FPS {{ $store.state.stel ? $store.state.stel.fps.toFixed(1) : '?' }}</div>\n        <div class=\"subheader text-subtitle-2\" style=\"user-select: none;\">FOV {{ fov }}</div>\n      </div>\n      <!-- <v-btn class=\"transparent\" v-if=\"!$store.state.showSidePanel\" to=\"/p\">{{ $t('Observe') }}<v-icon>mdi-chevron-down</v-icon></v-btn> -->\n      <!-- <v-menu v-if=\"$store.state.showTimeButtons\" :close-on-content-click=\"false\" transition=\"v-slide-y-transition\" offset-y top left>\n        <template v-slot:activator=\"{ on }\">\n          <button class=\"TimerPickBtn\" v-on=\"on\">\n            <v-icon class=\"hidden-sm-and-up\">mdi-clock-outline</v-icon>\n            <span class=\"hidden-xs-only\">\n              <div class=\"text-subtitle-2\">{{ time }}</div>\n              <div class=\"text-subtitle-2\">{{ date }}</div>\n            </span>\n          </button>\n        </template>\n        <date-time-picker v-model=\"pickerDate\" :location=\"$store.state.currentLocation\"></date-time-picker>\n      </v-menu> -->\n\n      <button class=\"TimerPickBtn\" @click=\"toggleDateTimePicker\">\n        <v-icon class=\"hidden-sm-and-up\">mdi-clock-outline</v-icon>\n        <span class=\"hidden-xs-only\">\n          <div class=\"text-subtitle-2\">{{ time }}</div>\n          <div class=\"text-subtitle-2\">{{ date }}</div>\n        </span>\n      </button>\n\n      <span v-if=\"isConnect\" @click=\"toggleRPIHotspotDialog\">\n        <div style=\"display: flex; justify-content: center; align-items: center;\">\n          <img src=\"@/assets/images/svg/ui/wifi.svg\" height=\"30px\" style=\"min-height: 30px; pointer-events: none;\"></img>\n        </div>\n      </span>\n      <span v-else @click=\"toggleRPIHotspotDialog\">\n        <div style=\"display: flex; justify-content: center; align-items: center;\">\n          <img src=\"@/assets/images/svg/ui/wifi_off.svg\" height=\"30px\" style=\"min-height: 30px; pointer-events: none;\"></img>\n        </div>\n      </span>\n\n      <card class=\"Card-Status\" :style=\"{ width: openStatusCard ? '105px' : '30px' }\" @click=\"toggleStatusCard\">\n\n        <div style=\"position: absolute;\" \n          :style=\"{ top: openStatusCard ? '5px' : '0px', left: openStatusCard ? '5px' : '0px', width: openStatusCard ? '20px' : '15px', height: openStatusCard ? '20px' : '15px'}\">\n          <span v-if=\"MainCameraInProgress&&MainCameraConnect\">\n            <div style=\"display: flex; justify-content: center; align-items: center;\">\n              <img src=\"@/assets/images/svg/ui/MainCamera-yellow.svg\" :style=\"{height: openStatusCard ? '20px' : '15px'}\" style=\"pointer-events: none;\"></img>\n            </div>\n          </span>\n          <span v-if=\"!MainCameraInProgress&&MainCameraConnect\">\n            <div style=\"display: flex; justify-content: center; align-items: center;\">\n              <img src=\"@/assets/images/svg/ui/MainCamera-green.svg\" :style=\"{height: openStatusCard ? '20px' : '15px'}\" style=\"pointer-events: none;\"></img>\n            </div>\n          </span>\n          <span v-if=\"!MainCameraConnect\">\n            <div style=\"display: flex; justify-content: center; align-items: center;\">\n              <img src=\"@/assets/images/svg/ui/MainCamera-white.svg\" :style=\"{height: openStatusCard ? '20px' : '15px'}\" style=\"pointer-events: none;\"></img>\n            </div>\n          </span>\n          \n          <!-- <span v-if=\"...\">\n            <div style=\"display: flex; justify-content: center; align-items: center;\">\n              <img src=\"@/assets/images/svg/ui/MainCamera-red.svg\" :style=\"{height: openStatusCard ? '20px' : '15px'}\" style=\"pointer-events: none;\"></img>\n            </div>\n          </span> -->\n        </div>\n\n        <div style=\"position: absolute;\" \n          :style=\"{ top: openStatusCard ? '5px' : '0px', left: openStatusCard ? '30px' : '15px', width: openStatusCard ? '20px' : '15px', height: openStatusCard ? '20px' : '15px'}\">\n          <!-- <span v-if=\"MountInProgress&&MountConnect\">\n            <div style=\"display: flex; justify-content: center; align-items: center;\">\n              <img src=\"@/assets/images/svg/ui/Mount-red.svg\" :style=\"{height: openStatusCard ? '20px' : '15px'}\" style=\"pointer-events: none;\"></img>\n            </div>\n          </span> -->\n          <span v-if=\"MountInProgress&&MountConnect\">\n            <div style=\"display: flex; justify-content: center; align-items: center;\">\n              <img src=\"@/assets/images/svg/ui/Mount-yellow.svg\" :style=\"{height: openStatusCard ? '20px' : '15px'}\" style=\"pointer-events: none;\"></img>\n            </div>\n          </span>\n          <span v-if=\"!MountInProgress&&MountConnect\">\n            <div style=\"display: flex; justify-content: center; align-items: center;\">\n              <img src=\"@/assets/images/svg/ui/Mount-green.svg\" :style=\"{height: openStatusCard ? '20px' : '15px'}\" style=\"pointer-events: none;\"></img>\n            </div>\n          </span>\n          <span v-if=\"!MountConnect\">\n            <div style=\"display: flex; justify-content: center; align-items: center;\">\n              <img src=\"@/assets/images/svg/ui/Mount-white.svg\" :style=\"{height: openStatusCard ? '20px' : '15px'}\" style=\"pointer-events: none;\"></img>\n            </div>\n          </span>\n        </div>\n\n        <div style=\"position: absolute;\" \n          :style=\"{ top: openStatusCard ? '5px' : '15px', left: openStatusCard ? '55px' : '0px', width: openStatusCard ? '20px' : '15px', height: openStatusCard ? '20px' : '15px'}\">\n          <span v-if=\"!GuiderConnect\">\n            <div style=\"display: flex; justify-content: center; align-items: center;\">\n              <img src=\"@/assets/images/svg/ui/Guider-white.svg\" :style=\"{height: openStatusCard ? '20px' : '15px'}\" style=\"pointer-events: none;\"></img>\n            </div>\n          </span>\n          <span v-if=\"GuiderConnect && GuiderInProgress && !GuiderError\">\n            <div style=\"display: flex; justify-content: center; align-items: center;\">\n              <img src=\"@/assets/images/svg/ui/Guider-yellow.svg\" :style=\"{height: openStatusCard ? '20px' : '15px'}\" style=\"pointer-events: none;\"></img>\n            </div>\n          </span>\n          <span v-if=\"GuiderConnect && !GuiderInProgress && !GuiderError\">\n            <div style=\"display: flex; justify-content: center; align-items: center;\">\n              <img src=\"@/assets/images/svg/ui/Guider-green.svg\" :style=\"{height: openStatusCard ? '20px' : '15px'}\" style=\"pointer-events: none;\"></img>\n            </div>\n          </span>\n          <span v-if=\"GuiderConnect && GuiderInProgress && GuiderError\">\n            <div style=\"display: flex; justify-content: center; align-items: center;\">\n              <img src=\"@/assets/images/svg/ui/Guider-red.svg\" :style=\"{height: openStatusCard ? '20px' : '15px'}\" style=\"pointer-events: none;\"></img>\n            </div>\n          </span>\n          <span v-if=\"GuiderConnect && !GuiderInProgress && GuiderError\">\n            <div style=\"display: flex; justify-content: center; align-items: center;\">\n              <img src=\"@/assets/images/svg/ui/Guider-green.svg\" :style=\"{height: openStatusCard ? '20px' : '15px'}\" style=\"pointer-events: none;\"></img>\n            </div>\n          </span>\n        </div>\n\n        <div style=\"position: absolute;\" \n          :style=\"{ top: openStatusCard ? '5px' : '15px', left: openStatusCard ? '80px' : '15px', width: openStatusCard ? '20px' : '15px', height: openStatusCard ? '20px' : '15px'}\">\n          <span v-if=\"CurrentFocusStatus === 0\">\n            <div style=\"display: flex; justify-content: center; align-items: center;\">\n              <img src=\"@/assets/images/svg/ui/Focuser-white.svg\" :style=\"{height: openStatusCard ? '20px' : '15px'}\" style=\"pointer-events: none;\"></img>\n            </div>\n          </span>\n          <span v-if=\"CurrentFocusStatus === 1\">\n            <div style=\"display: flex; justify-content: center; align-items: center;\">\n              <img src=\"@/assets/images/svg/ui/Focuser-green.svg\" :style=\"{height: openStatusCard ? '20px' : '15px'}\" style=\"pointer-events: none;\"></img>\n            </div>\n          </span>\n          <span v-if=\"CurrentFocusStatus === 2\">\n            <div style=\"display: flex; justify-content: center; align-items: center;\">\n              <img src=\"@/assets/images/svg/ui/Focuser-yellow.svg\" :style=\"{height: openStatusCard ? '20px' : '15px'}\" style=\"pointer-events: none;\"></img>\n            </div>\n          </span>\n          <span v-if=\"CurrentFocusStatus === 3\">\n            <div style=\"display: flex; justify-content: center; align-items: center;\">\n              <img src=\"@/assets/images/svg/ui/Focuser-red.svg\" :style=\"{height: openStatusCard ? '20px' : '15px'}\" style=\"pointer-events: none;\"></img>\n            </div>\n          </span>\n        </div>\n\n      </card>\n\n      <button class=\"ScheduleBtn\" @click=\"toggleSchedulePanel\" >\n        <div style=\"display: flex; justify-content: center; align-items: center;\">\n          <img src=\"@/assets/images/svg/ui/schedule_table.svg\" height=\"25px\" style=\"min-height: 25px; pointer-events: none;\"></img>\n        </div>\n      </button>\n      \n    </v-toolbar>\n  </div>\n</template>\n\n<script>\n\nimport TargetSearch from '@/components/target-search'\n// import DateTimePicker from '@/components/date-time-picker.vue'\nimport Moment from 'moment'\n\nexport default {\n  data: function () {\n    return {\n      isDrawerShow: false,\n      isTargetSearchShow: true,\n      isConnect: true,\n      openStatusCard: false,\n\n      MainCameraInProgress: false,\n      MountInProgress: true,\n      GuiderInProgress: false,\n      \n      CurrentFocusStatus: 0,\n\n      MainCameraConnect: false,\n      GuiderConnect: false,\n      MountConnect: false,\n\n      GuiderError: false,\n\n      cpuTemp: null,\n      cpuUsage: null,\n    }\n  },\n  created() {\n    this.$bus.$on('ShowTargetSearch', this.ShowTargetSearch);\n    this.$bus.$on('HideTargetSearch', this.HideTargetSearch);\n    this.$bus.$on('ShowNetStatus', this.ShowNetStatus);\n\n    this.$bus.$on('MainCameraStatus',this.MainCameraStatus);\n    this.$bus.$on('MountStatus',this.MountStatus);\n    // this.$bus.$on('UpdateGuiderToolStatus', this.UpdateGuiderToolStatus);\n    this.$bus.$on('GuiderConnected', this.GuiderConnected);\n    this.$bus.$on('GuiderStop', this.GuiderStatusStop);\n    this.$bus.$on('GuiderUpdateStatus', this.GuiderUpdateStatus);\n\n    this.$bus.$on('MainCameraConnected', this.MainCameraConnected);\n    this.$bus.$on('MountConnected', this.MountConnected);\n    this.$bus.$on('FocuserConnected', this.FocuserConnected);\n    this.$bus.$on('FocusInProgress', this.FocusStatus);\n\n    this.$bus.$on('updateCPUInfo', this.updateCPUInfo);\n  },\n  computed: {\n    fov: function () {\n      if (!this.$store.state.stel) return '-'\n      const fov = this.$store.state.stel.fov * 180 / Math.PI\n      return fov.toPrecision(3) + '°'\n    },\n    // cpuTemp: function () {\n    //   return this.$store.state.cpuTemp\n    // },\n    // cpuUsage: function () {\n    //   return this.$store.state.cpuUsage\n    // },\n\n    time: {\n      get: function () {\n        return this.getLocalTime().format('HH:mm:ss')\n      }\n    },\n    date: {\n      get: function () {\n        return this.getLocalTime().format('YYYY-MM-DD')\n      }\n    },\n    pickerDate: {\n      get: function () {\n        const t = this.getLocalTime()\n        t.milliseconds(0)\n        return t.format()\n      },\n      set: function (v) {\n        const m = Moment(v)\n        m.local()\n        m.milliseconds(this.getLocalTime().milliseconds())\n        this.$stel.core.observer.utc = m.toDate().getMJD()\n      }\n    }\n  },\n  // mounted: function () {\n  //   this.GetConnectedDevices();\n\n  // },\n  methods: {\n    toggleNavigationDrawer: function () {\n      this.$store.commit('toggleBool', 'showNavigationDrawer')\n      // this.$bus.$emit('AppSendMessage', 'Vue_Command', 'localMessage');\n    },\n\n    getLocalTime: function () {\n      var d = new Date()\n      d.setMJD(this.$store.state.stel.observer.utc)\n      const m = Moment(d)\n      m.local()\n      return m\n    },\n\n    ShowTargetSearch() {\n      this.isTargetSearchShow = true;\n    },\n\n    HideTargetSearch() {\n      this.isTargetSearchShow = false;\n    },\n\n    ShowNetStatus(status) {\n      if(status === 'true')\n      {\n        this.isConnect = true;\n      }\n      else if(status === 'false')\n      {\n        this.isConnect = false;\n      }\n      else if(status === 'abnormal')\n      {\n        this.isConnect = false;\n      }\n      \n    },\n\n    toggleSchedulePanel() {\n      this.$bus.$emit('toggleSchedulePanel');\n    },\n\n    toggleStatusCard() {\n      this.openStatusCard = !this.openStatusCard;\n    },\n\n    toggleDateTimePicker() {\n      this.$bus.$emit('toggleDateTimePicker');\n    },\n\n    toggleRPIHotspotDialog() {\n      this.$bus.$emit('toggleRPIHotspotDialog');\n      this.$bus.$emit('AppSendMessage', 'Vue_Command', 'getHotspotName');\n    },\n\n    MainCameraStatus(status) {\n      if(status === 'Exposuring') {\n        this.MainCameraInProgress = true;\n      } \n      else {\n        this.MainCameraInProgress = false;\n      }\n    },\n\n    // MountStatus(status) {\n    //   if(status === 'Slewing') {\n    //     this.MountInProgress = true;\n    //   } \n    //   else {\n    //     this.MountInProgress = false;\n    //   }\n    // },\n    \n    MountStatus(status) {\n      if(status === 'Moving') {\n        this.MountInProgress = true;\n      } \n      else {\n        this.MountInProgress = false;\n      }\n    },\n\n\n    // UpdateGuiderToolStatus(connect, inProgress, error) {\n    //   if(connect === 'true') {\n    //     this.GuiderConnect = true;\n    //   } else {\n    //     this.GuiderConnect = false;\n    //   }\n    //   if(inProgress === 'true') {\n    //     this.GuiderInProgress = true;\n    //   } else {\n    //     this.GuiderInProgress = false;\n    //   }\n    //   if(error === 'true') {\n    //     this.GuiderError = true;\n    //   } else {\n    //     this.GuiderError = false;\n    //   }\n    // },\n\n    FocusStatus(status) {\n      if(status) {\n        this.CurrentFocusStatus = 2;\n      } else {\n        this.CurrentFocusStatus = 1;\n      }\n    },\n\n    GuiderStatusStop() {\n      this.GuiderInProgress = false;\n      this.GuiderError = false;\n    },\n\n    GuiderConnected(status) {\n      if(status === 0) {\n        this.GuiderConnect = false;\n      } else {\n        this.GuiderConnect = true;\n      }\n    },\n\n    GuiderUpdateStatus(status) {\n      if(status === 0) {\n        this.GuiderInProgress = false;\n        this.GuiderError = false;\n      }\n      else if(status === 1) {\n        this.GuiderInProgress = true;\n        this.GuiderError = false;\n      }\n      else if(status === 2) {\n        this.GuiderInProgress = true;\n        this.GuiderError = true;\n      }\n    },\n\n    MainCameraConnected(num) {\n      if(num === 0){\n        this.MainCameraConnect = false;\n      } else {\n        this.MainCameraConnect = true;\n      }\n      console.log('MainCamera is Connected: ', num);\n    },\n\n    MountConnected(num) {\n      if(num === 0){\n        this.MountConnect = false;\n      } else {\n        this.MountConnect = true;\n      }\n      console.log('Mount is Connected: ', num);\n    },\n\n    FocuserConnected(num) {\n      this.CurrentFocusStatus = num;\n    },\n\n    updateCPUInfo(cpuTemp, cpuUsage) {\n      this.cpuTemp = cpuTemp;\n      this.cpuUsage = cpuUsage;\n      // console.log('CPU Temp: ', this.cpuTemp);\n      // console.log('CPU Usage: ', this.cpuUsage);\n    },\n\n    // GetConnectedDevices() {\n    //   this.$bus.$emit('GetConnectedDevices');\n    // },\n\n  },\n  components: { \n    TargetSearch, \n    // DateTimePicker \n  }\n}\n</script>\n\n<style>\n#toolbar-image {\n  background: url(\"../assets/images/header.png\") center;\n  background-position-x: 55px;\n  background-position-y: 0px;\n  height: 40px;\n  z-index: 1;\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  width: 100%;\n  backdrop-filter: blur(5px);\n  background-color: rgba(0, 0, 0, 0.1);\n}\n\n#stellarium-web-toolbar-logo {\n  margin-right: 10px;\n  margin-left: 20px;\n}\n\n@media all and (max-width: 600px) {\n  .tmenubt {\n    min-width: 30px;\n  }\n}\n\n.tbtitle {\n  font-size: 20px;\n  font-weight: 500;\n  user-select: none;\n}\n\n.tbtitle_ {\n  font-size: 30px;\n  font-weight: 500;\n  user-select: none;\n}\n\n.TimerPickBtn {\n  padding: 0.2rem 0.6rem;\n  color: white;\n  cursor: pointer;\n\n  font-size: 14px;\n  text-align: center;\n  user-select: none;\n}\n\n.ScheduleBtn {\n    color: white;\n    cursor: pointer;\n\n    font-size: x-large;\n    text-align: center;\n    line-height: 35px;\n\n    width: 35px;\n    height: 35px;\n    \n    user-select: none;\n    /* backdrop-filter: blur(5px); */\n    background-color: rgba(0, 0, 0, 0.0);\n    border-radius: 10px;\n\n    /* border: 1px solid rgba(255, 255, 255, 0.8); */\n}\n\n.Card-Status {\n  position: relative;\n  margin: 5px; \n  border-radius: 5px; \n  height: 30px;\n  background-color: rgba(0, 0, 0, 0.1);\n}\n\n.icon-container .green-icon {\n  color: rgba(51, 218, 121, 0.7);\n}\n\n.icon-container .red-icon {\n  color: rgba(250, 0, 0, 0.5);\n}\n\n</style>\n"]}]}
